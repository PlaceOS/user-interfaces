{"version":3,"file":"main.js","mappings":"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AE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAItM,EAAUyL,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKzL,EAAUwL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","search","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref9","_$assets","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","RULE_REQUESTS","zone_id","Array","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","new_assets","old_assets","ical_uid","from_booking","location_name","location_id","filtered","event_id","booking_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","is_done","queryParamMap","params","_this2$booking","has","_this$booking6","_this$booking7","_this$booking8","is_today","format","_this$booking9","_this$booking10","_this$booking11","_this$booking12","is_all_day","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r15","BookingDetailsModalComponent_ng_container_36_div_5_Template","_c6","_c7","_booking","_this$booking2$linked","hide_map","has_assets","linked_bookings","_this$booking5","ts","booking_start","booking_end","_this$booking13","_this$booking14","_this$booking15","_toggleCheckedIn","checkinBooking","notifySuccess","approved","rejected","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_interactive_map_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","booking_status","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user2$id","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","removeEmptyFields","addHours","getTime","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","use_24hr","feat_r21","_r23","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","_this2$level3","_this2$level2","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","index","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","checkOrder","updated_order","saveEvent","toJSON","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","getHours","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","InjectMapApiService","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","is_initialised","is_initialised$","maps_key","script","google_key","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","head","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r7","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","sendMessage","messages","toggleChat","ChatComponent_div_0_div_4_Template","ChatComponent","_chat","chat_hint","_this$user","scrollToBottom","connected","startChat","_input_el","_this4$_container_el","_container_el","scrollTop","scrollHeight","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_chat_system","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","idx_r10","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","diff","direction","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","IndoorMapsComponent_div_15_li_3_Template","search_result_items","IndoorMapsComponent","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","custom_coordinates","_getUserLocation","initMapView","initDirections","handleLocationChange","_ngOnChanges","renderSpaceStatus","mapActions","ngOnChanges","_this$mapsIndoors_ins","mapsIndoors_instance","addListener","found_action","actions_hashmap","map_view_options","lat","lng","maxZoom","map_view_instance","mapsindoors","mapView","GoogleMapsView","MapsIndoors","googleMaps_instance","getMap","externalDirectionsProvider","directions","GoogleMapsProvider","mapsIndoors_directions_service_instance","services","DirectionsService","mapsIndoors_directions_renderer_instance","DirectionsRenderer","mapsIndoors","_this$mapsIndoors_ins2","_this$mapsIndoors_ins3","floorSelectorElement","FloorSelector","google","ControlPosition","RIGHT_TOP","found_building","found_level_id","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_error$message","watchPosition","_updateGeolocation","_handleGeolocationError","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this6$mapsIndoors_di","setRoute","_error$message2","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this7$actions","accumulator","currentValue","_setPolygonFill2","_this$mapsIndoors_ins4","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_div_15_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_65_div_5_div_6_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_69_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_interactive_map_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","setup_time","breakdown_time","old_system","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","all_day_date","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","use_mapsindoors$","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i12","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_bookSpace","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r8","BookingRulesFormComponent_div_58_div_1_Template","BookingRulesFormComponent_div_58_div_2_Template","available_conditions","time_r12","BookingRulesFormComponent_div_59_mat_option_5_Template","duration_blocks","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","time_r17","time_r18","BookingRulesFormComponent_div_61_ng_container_9_mat_option_1_Template","_r22","setIsBetween","BookingRulesFormComponent_div_61_mat_option_6_Template","BookingRulesFormComponent_div_61_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_div_56_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","getMinutes","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","user_search_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","item_r17","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","_this2$_dialog_ref$co","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","feature_display","SpaceFiltersComponent_section_39_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_39_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_39_Template","SpaceFiltersComponent_div_41_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: from_booking ? '' : id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-2 rounded-2xl text-white px-3 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'pending'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) =>\n            createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise()\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) return ruleset.rules;\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() >= conditions.is_between[0] &&\n        date_obj.getHours() < conditions.is_between[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService {\n    private is_initialised: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(null);\n\n    public readonly is_initialised$: Observable<boolean> =\n        this.is_initialised.asObservable();\n\n    constructor(private _settings: SettingsService) {}\n\n    public injectMapsApiKeys() {\n        const maps_key = this._settings.get('app.maps_indoor_api_key');\n        if (maps_key) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${maps_key}`;\n            document.body.appendChild(script);\n        }\n\n        const google_key = this._settings.get('app.google_maps_api_key');\n        if (google_key) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google_key}`;\n            document.body.appendChild(script);\n        }\n\n        if (maps_key && google_key) {\n            this.is_initialised.next(true);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"3c4ebcf\",\n    \"hash\": \"3c4ebcf\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"3c4ebcf\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1698898174670\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {\n        console.log('Data:', _data);\n    }\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[20rem]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"show = false\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[24rem] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-black/60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div class=\"text-xs text-black/30 px-2 py-1\">\n                                {{ message.timestamp | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute bottom-16 right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-slate-400 border border-slate-600\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-slate-600 rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex items-center bg-base-100 focus-within:outline outline-blue-500 border-t border-base-300\"\n                >\n                    <input\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none\"\n                        [(ngModel)]=\"message\"\n                        (keyup.enter)=\"sendMessage()\"\n                    />\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AsyncHandler, currentUser, log, randomString } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(\n                id\n            )}?bearer_token=${encodeURIComponent(token())}`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        this._chat_messages.next([\n            ...this._chat_messages.getValue(),\n            {\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                timestamp: Date.now(),\n            },\n        ]);\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : `${hours} hour${hours === 1 ? '' : 's'}`;\n        } else if (diff < 30 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'dd MMM yyyy');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-success/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-info`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-base-300/50`,\n    error: `bg-error/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-neutral text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-neutral p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-base-100/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.bg-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.bg-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, HashMap, notifyError } from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport {\n    BuildingLevel,\n    Building,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-0 left-0 bg-base-100 rounded-lg z-50\"\n        >\n            <div class=\"flex basis-1/2 px-4\">\n                <div class=\"flex flex-row items-center max-h-20\">\n                    <mat-form-field appearance=\"outline\" class=\"h-16 mt-4\">\n                        <input\n                            matInput\n                            #searchInput\n                            name=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                        />\n                    </mat-form-field>\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"flex text-black h-10 w-10 rounded-full bg-base-200 ml-5\"\n                        aria-label=\"search button\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\"\n                            >search</app-icon\n                        >\n                    </button>\n                </div>\n            </div>\n\n            <div class=\"flex basis-1/2 overflow-y-auto \">\n                <div class=\"ml-6\">\n                    <ul>\n                        <div *ngIf=\"search_result_items\">\n                            <span class=\"font-medium text-lg\">Results</span>\n                            <li *ngFor=\"let item of search_result_items\">\n                                <div class=\"flex items-center mt-3 mb-3 h-10\">\n                                    <span class=\"flex mr-3 text-base\">\n                                        {{ item.properties.name }}</span\n                                    >\n                                    <button\n                                        icon\n                                        name=\"get-directions\"\n                                        matRipple\n                                        aria-label=\"get directions button\"\n                                        (click)=\"getRoute(item)\"\n                                        class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                                    >\n                                        <app-icon class=\"text-sm\"\n                                            >near_me</app-icon\n                                        >\n                                    </button>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public map_view_options: any;\n    public map_view_instance: any;\n    public mapsIndoors_instance: any;\n    public googleMaps_instance: any;\n    public mapsIndoors_directions_service_instance: any;\n    public mapsIndoors_directions_renderer_instance: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n\n        this.loading = true;\n        await this.initMapView();\n        this.initDirections();\n        this.handleLocationChange();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n            this.loading = false;\n        }\n    }\n\n    ngAfterViewInit() {\n        this.mapsIndoors_instance?.addListener(\n            'click',\n            (location: any, e: Event) => {\n                const found_action = this.actions_hashmap[location.id];\n                if (found_action) {\n                    found_action.callback(e);\n                }\n            }\n        );\n    }\n\n    initMapView(): Promise<void> {\n        // Hardcoded coordinates for mock map in Austin\n        // this.map_view_options = {\n        //     element: document.getElementById('maps-indoors'),\n        //     center: { lat: 30.3603774, lng: -97.7426772 },\n        //     zoom: 21,\n        //     maxZoom: 26,\n        // };\n\n        this.map_view_options = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 26,\n        };\n        this.map_view_instance = new mapsindoors.mapView.GoogleMapsView(\n            this.map_view_options\n        );\n\n        this.mapsIndoors_instance = new mapsindoors.MapsIndoors({\n            mapView: this.map_view_instance,\n        });\n        return (this.googleMaps_instance = this.map_view_instance.getMap());\n    }\n\n    initDirections() {\n        const externalDirectionsProvider =\n            new mapsindoors.directions.GoogleMapsProvider();\n        this.mapsIndoors_directions_service_instance =\n            new mapsindoors.services.DirectionsService(\n                externalDirectionsProvider\n            );\n        const directionsRendererOptions = {\n            mapsIndoors: this.mapsIndoors_instance,\n        };\n        this.mapsIndoors_directions_renderer_instance =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(\n            floorSelectorElement,\n            this.mapsIndoors_instance\n        );\n        this.googleMaps_instance.controls[\n            google.maps.ControlPosition.RIGHT_TOP\n        ].push(floorSelectorElement);\n\n        this.mapsIndoors_instance?.addListener('building_changed', (e) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name === e.buildingInfo.name;\n                this.setBuilding(found_building);\n            });\n        });\n        this.mapsIndoors_instance?.addListener('floor_changed', (e) => {\n            const found_level_id = this.levels_list.find(\n                (level) => level.id === e\n            );\n            this._state.setLevel(found_level_id);\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve, reject) => {\n            if ('geolocation' in navigator) {\n                if (this.coordinates) {\n                    const customPosition = {\n                        coords: {\n                            latitude: this.coordinates.latitude,\n                            longitude: this.coordinates.longitude,\n                            accuracy: 10,\n                        },\n                        timestamp: new Date().getTime(),\n                    };\n                    this.user_latitude = this.coordinates.latitude;\n                    this.user_longitude = this.coordinates.longitude;\n\n                    resolve(customPosition as GeolocationPosition);\n                }\n\n                if (!this.coordinates) {\n                    await navigator.geolocation.getCurrentPosition(\n                        (position: GeolocationPosition) => {\n                            this.user_latitude = position.coords.latitude;\n                            this.user_longitude = position.coords.longitude;\n                            resolve(position);\n                        },\n                        (error) => {\n                            this.geolocation_error_message =\n                                'Error: ' +\n                                error.message?.toString() +\n                                '. Please enable geolocation settings.';\n                            reject(error);\n                        },\n                        options\n                    );\n                    navigator.geolocation.watchPosition(\n                        (_) => this._updateGeolocation(_),\n                        (_) => this._handleGeolocationError(_)\n                    );\n                }\n            } else {\n                this.geolocation_error_message =\n                    'Error: geolocation is not supported.';\n                reject('Geolocation not supported');\n            }\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.mapsIndoors_directions_service_instance\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.mapsIndoors_directions_renderer_instance?.setRoute(\n                        directionsResult\n                    );\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.mapsIndoors_instance?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\"\n        >\n            <pre class=\"font-mono text-sm bg-neutral p-2\">{{\n                formatted_json\n            }}</pre>\n        </div>\n    `,\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"absolute inset-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-base-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex px-4 flex-wrap\">\n                            <div\n                                asset\n                                class=\"flex space-x-2 m-1 rounded-2xl text-white pl-1 pr-2 py-1\"\n                                [class.bg-success]=\"\n                                    status(item.id) === 'approved'\n                                \"\n                                [class.bg-error]=\"\n                                    status(item.id) === 'rejected'\n                                \"\n                                [class.bg-warning]=\"\n                                    status(item.id) !== 'approved' &&\n                                    status(item.id) !== 'rejected'\n                                \"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <app-icon>{{\n                                    status(item.id) === 'approved'\n                                        ? 'done'\n                                        : status(item.id) === 'rejected'\n                                        ? 'close'\n                                        : 'question_mark'\n                                }}</app-icon>\n                                <div class=\"text-sm whitespace-nowrap pr-2\">\n                                    {{ item.name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime, set } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, organiser } = this._form.getRawValue();\n            let start = date;\n            let end = addMinutes(date, duration).valueOf();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((space, idx) => {\n                    return periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces, this.booking_rules]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain)\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    notifyError('Unable to book the selected assets.');\n                    this._loading.next('');\n                }\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration =\n            data.duration ||\n            differenceInMinutes(data.event_end * 1000, this.date) ||\n            30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60, this.duration);\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? addMinutes(date, 24 * 60)\n            : addMinutes(date, this.duration);\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n            [custom_coordinates]=\"{\n                latitude: 30.3603774 ,\n                longitude:  -97.7426772,\n            }\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.is_initialised$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter((_) => !events.find((e) => e.asset_id === _.id))\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { set } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\">Groups:</label>\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\">Minimum Booking Length:</label>\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\">Maximum Booking Length:</label>\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\">Start Day is before:</label>\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\">Start Day is after:</label>\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\">Start Time Must Be Between:</label>\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngOnChanges)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngOnChanges)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[1],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">Resources:</label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: 'MMMM d, yyyy' }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"false\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-base-200 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-neutral:bg-base-100/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-neutral text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-neutral border-base-200 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-neutral hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld.id,\n        building_id: bld.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-base-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}