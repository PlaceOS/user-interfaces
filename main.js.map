{"version":3,"file":"main.js","mappings":"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AI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKvN,EAAUsN,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_AppRoutingModule","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","_AppComponent","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","HttpLoaderFactory","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","http","TranslateHttpLoader","_AppModule","AppModule","bootstrap","SpacePipe","provideHttpClient","withInterceptorsFromDi","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","_NotFoundComponent","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","_SharedComponentModule","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_DeskBookingComponent","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ɵɵpureFunction0","_c0","date","duration","_r1","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","tmp_4_0","allow_all_day","can_book_lockers","allow_assets","_DeskBookingFormComponent","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","_DeskBookingSuccessComponent","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_MeetingBookingComponent","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r4","display_name","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","building","buildings","_r5","findAvailableTime","hide_block","attendees","_r6","catering","ɵɵpureFunction3","_c1","resources","level","has_catering","details","MeetingBookingFormComponent_div_0_div_12_Template","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","MeetingBookingFormComponent_div_0_section_60_Template","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","_MeetingBookingFormComponent","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","_MeetingBookingSuccessComponent","system","button_toggle_1","bottom_sheet_1","ROUTES","_BookModule","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_BookingConfirmedComponent","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","_FeaturesFilterService","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","ɵɵtwoWayListener","feature_r6","$implicit","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","applyFilters","tmp_2_0","tmp_3_0","minDate","_FilterSpaceComponent","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","_FindSpaceItemComponent","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r4","handleBookEvent","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","map_r6","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r7","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_5_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","empty_state_r8","_r9","openRoomDetails","_FindSpaceComponent","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","load_state_r10","room_tile_component_1","_MapService","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","_RoomBookingComponent","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_RoomConfirmService","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_RoomConfirmComponent","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","ctx_r0","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r2","RoomDetailsComponent_section_21_div_3_Template","back","_r4","_RoomDetailsComponent","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","_RoomTileComponent","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r1","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","ctx_r2","isEvent","booking_card_r2","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","empty_state_r4","_UpcomingBookingsComponent","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","load_state_r5","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r3","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","s_r4","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_MeetingFlowConfirmComponent","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_1","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_ScheduleStateService","_lockers","_parking","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","_$linked_bookings","isSameDay","toLowerCase","a","linked_bookings","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","raw_events","_ref10","events","_$extension_data","extension_data","shared_event","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","include_deleted","group_events","_$extension_data2","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","bookings","_ref23","_ref24","filtered_events","ev","_ev$linked_bookings$","bkn","meeting_id","_ref25","_ref26","filters","_$extension_data3","_filters$shown_types","_$extension_data4","_filters$shown_types2","_filters$shown_types3","_ignore_cancel","_checkCancel","interval","startWith","_ref27","_ref29","_ref30","_auto_release$resourc","is_home","auto_release","time_before","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","close_after","wording","time_after","Math","min","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","differenceInMilliseconds","getTime","format","confirm_text","cancel_text","close_delay","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","ParkingService","tslib_1","__exportStar","updateAssetGroupList","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","assetgroup_list","_loop","assetgroup","_AssetGroupPipe","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r2","item_r5","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","_AssetListFieldComponent","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","_AssetDetailsComponent","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","empty_state_r3","_AssetFiltersDisplayComponent","AssetFiltersDisplayComponent","day_r4","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r6","toggleCategory","category","_AssetFiltersComponent","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r2","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","empty_state_r5","_AssetListComponent","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","load_state_r6","displayed","_AssetSelectModalComponent","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_AssetStateService","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","addAssetCategory","updateAssetCategory","saveAssetCategory","showAssetCategory","BASE_ENDPOINT","deleteAssetCategory","del","queryAssetGroups","queryAssetGroupsExtended","addAssetGroup","updateAssetGroup","saveAssetGroup","product","deleteAssetGroup","addAsset","updateAsset","saveAsset","asset_type_id","showAsset","deleteAsset","addAssetsInBulk","updateAssetsInBulk","saveAssetsInBulk","every","deleteAssetsInBulk","body","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","_removeAssetRequests","differenceBetweenAssetRequests","validateAssetRequestsForResource","_validateAssetRequestsForResource","api_1","booking_class_1","q","toQueryString","post","cleanObject","put","groups_cache","has","forkJoin","setTimeout","delete","products","_booking$asset_ids2","requests","_$asset_ids","removeBooking","new_assets","old_assets","changed","match","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref20","_available_groups$fin","idx","_assets$find","_request$items","createBooking","user_email","r","_AssetsModule","booking_details_modal_component_1","async_handler_class_1","group_event_details_modal_component_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","ɵɵpureFunction1","period","desk_icon_r3","raw_description","for_current_user","is_reserved_parking_space","_BookingCardComponent","BookingCardComponent","_async_handler_class_","_route","edit","remove","assigned_space","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","removeHtmlTags","_this$booking8","_this$booking9","_this$booking10","is_today","_this$booking11","_this$booking12","_this$booking13","_this$booking14","is_all_day","dur","formatDuration","html","DOMParser","parseFromString","textContent","_ref$componentInstanc","_ref$componentInstanc2","_ref$componentInstanc3","GroupEventDetailsModalComponent","BookingDetailsModalComponent","concierge","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","desk_settings_modal_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","menu_r5","item_r8","request_r7","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r10","setDeskHeight","_r11","_r12","_BookingDetailsModalComponent","hide_map","has_assets","region","regions","_this$booking6","ts","booking_start","booking_end","_this$booking16","_this$booking17","_this$booking18","_toggleCheckedIn","promise","checkinBookingInstance","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","DeskSettingsModalComponent","_templateObject6","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","booking_status","can_edit","is_checked_in","desk_height_enabled","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_BookingFormService","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","mapping","available_resources","merge","timer","_this$_org$region","_this$_org$building","restrictions","_this$form$getRawValu","bookedResourceList","organisation","booked_ids","_asset$zone","_asset$zone2","_asset$groups","_options$features","_asset$zone3","_asset$zone4","is_restricted","rulesForResource","hidden","groups","grp","bookable","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone5","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_resources$","_this3$_org$region","_resources$2","_resources$3","_this3$_org$region2","_value$user","_value$user2","_value$user3","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","update_master","saveBooking","user_name","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_this$_org$region2","_asset$zone6","_asset$zone7","_this$_org$region3","_unavailable$map","_getNearbyResources","t2","t3","call","user_id","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","active_bookings","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_BookingLinkModalComponent","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","RecurrenceDays","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","_data$title","_b_valid_asset_cache","_b_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","permission","toUpperCase","guests","tags","induction","process_state","recurrence_type","recurrence_days","recurrence_nth_of_month","recurrence_interval","recurrence_end","removeEmptyFields","_this$extension_data","addHours","add","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","_booking$extension_da5","validators_1","endInFuture","company","featured","other_asset_type","attendance_type","plate_number","_form$get","_form$get2","disable","emitEvent","_resource$zone","_resource$zone2","roundingMethod","_findNearbyFeature","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","svg_viewer_1","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","BOOKINGS_ENDPOINT","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","encodeURIComponent","updateBooking","updateBookingInductionStatus","updateBookingInstance","removeBookingInstance","approveBooking","approveBookingInstance","rejectBooking","rejectBookingInstance","setBookingState","utm_source","queryBookingGuests","user_class_1","GuestUser","checkinBookingGuest","guest_id","bookingAddGuest","guest","bookingRemoveGuest","json","message","checkinBookingAttendee","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","_createBookingsForEvent","patch","response_type","_item$items","components_module_1","form_fields_module_1","events_module_1","spaces_module_1","users_module_1","_SharedBookingsModule","SharedSpacesModule","SharedUsersModule","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","_DeskConfirmModalComponent","DeskConfirmModalComponent","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r3","ctx_r3","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","placeholder_r6","_DeskListFieldComponent","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","_DeskQuestionsModalComponent","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","_DeskDetailsComponent","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","desk_filters_component_1","show_fav","_DeskFiltersDisplayComponent","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","feat_r11","DeskFiltersComponent_section_36_div_3_Template","_DeskFiltersComponent","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","lvl","setLevel","l","reg","allow_time_changes","hide_levels","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","end_date","tmp_13_0","tmp_15_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_DeskListComponent","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","_DeskMapComponent","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","_DeskSelectModalComponent","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","preset","setPreset","edit_presets","updatePreset","formatLabel","toFixed","_DeskSettingsModalComponent","sitting_height","standing_height","last_height","parseInt","localStorage","new_height","_setDeskHeight","sys_id","module","DeskSettingsModalComponent_div_0_Template","DeskSettingsModalComponent_ng_template_1_Template","desk_height_tooltip_r4","desk_confirm_modal_component_1","_DesksService","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","ɵɵelementContainer","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","_InviteVisitorFormComponent","InviteVisitorFormComponent","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","ɵɵstyleProp","size","_LockerGridComponent","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","_LockerListFieldComponent","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r2","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","_LockerBankListComponent","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","_LockerFiltersDisplayComponent","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r6","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r8","LockerFiltersComponent_section_39_div_3_Template","_LockerFiltersComponent","active_levels","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_18_0","tmp_20_0","explore_locker_bank_info_component_1","lvl_r1","_LockerMapComponent","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","_this2$level","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","map_view_r4","_r8","_LockerSelectModalComponent","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","bank_view_r9","_LockersService","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_ParkingSpaceDetailsComponent","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","_ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","_ParkingSpaceFiltersComponent","_form","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","_ParkingSpaceListComponent","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","_ParkingSpaceLocationPinComponent","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","_ParkingSpaceSelectMapComponent","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","_ParkingSpaceSelectModalComponent","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","_ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent","disable_date","ParkingSpaceListFieldComponent_div_1_Template","_ParkingService","level_list","blds","buildingsForRegion","bld_ids","_blds$find","_lvls$","_$assigned_to","_email","assigned_to","user_details","_$email","_email2","deny_parking_access","deny","booked_space","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","queryCalendars","CALENDAR_ENDPOINT","calendar_class_1","queryCalendarAvailability","querySpaceCalendarAvailability","org","calendarsToSpaces","queryUserFreeBusy","querySpaceFreeBusy","cal","catering_item_class_1","handleFileEvent","_CateringImportMenuModalComponent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","load_state_r3","keycodes_1","invalid","touched","auto_r3","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","saveChanges","dirty","option_r9","_CateringItemModalComponent","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r4","duplicateOrder","editOrder","removeOrder","optionList","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","_CateringListFieldComponent","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","row_r2","row","setEnabled","isEnabled","data_r4","symbol","row_r6","addOption","editItem","show_children","menu_r7","row_r10","editOption","removeOption","CateringMenuComponent_ng_template_7_div_0_button_7_Template","CateringMenuComponent_ng_template_7_div_0_button_8_Template","CateringMenuComponent_ng_template_7_div_0_Template","_CateringMenuComponent","CateringMenuComponent","_catering","_orders","menu","deleteOption","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringOrdersService","CateringMenuComponent_ng_template_1_Template","CateringMenuComponent_ng_template_3_Template","CateringMenuComponent_ng_template_5_Template","CateringMenuComponent_ng_template_7_Template","ɵɵpureFunction5","_c5","active_template_r12","_c2","_c3","price_template_r13","_c4","actions_template_r14","child_template_r15","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r4","_CateringItemOptionModalComponent","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","_CateringOrderItemComponent","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","catering_vars_1","data_r1","CateringOrderListComponent_ng_template_6_span_2_Template","CateringOrderListComponent_ng_template_8_span_3_Template","data_r5","status_r7","row_r8","updateStatus","colour","CateringOrderListComponent_ng_template_10_button_8_Template","tmp_11_0","data_r9","menu_r10","statuses","row_r12","CateringOrderListComponent_ng_template_12_ng_template_4_Template","notes_template_r13","row_r15","item_r14","CateringOrderListComponent_ng_template_14_ul_0_li_1_Template","CateringOrderListComponent_ng_template_14_ul_0_Template","_CateringOrderListComponent","CateringOrderListComponent","CATERING_STATUSES","CateringOrderListComponent_ng_template_2_Template","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","ɵɵpureFunction8","_c8","state_template_r16","time_template_r17","location_template_r18","host_template_r19","_c6","status_template_r20","_c7","actions_template_r21","child_template_r22","utilities_1","item_r2","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template","_CateringOrderModalComponent","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","tag_r3","opt_r6","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r5","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r8","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","multi_options_r9","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","_CateringItemDetailsComponent","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","empty_state_r10","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","_CateringItemFiltersComponent","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","_CateringItemListItemComponent","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","placeholder_r3","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","empty_state_r6","_CateringItemListComponent","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","load_state_r7","_CateringOrderStateService","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_NewCateringOrderModalComponent","_order","NewCateringOrderModalComponent_button_14_Template","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r2","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","_CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","events_fn_1","_CateringOrdersService","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_CateringStateService","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","_SharedCateringModule","i_r2","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","_ChargeCodeListModalComponent","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","str","IGNORE_VALUES","hasNewVersion","_new_version","cache","_timer","setInterval","activateUpdate","_activateUpdate","clearCacheCheck","checkForUpdate","notifyInfo","_AsyncHandler","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","addToDate","filterResourcesFromRules","ruleset_list","_rulesForResource","checkRulesMatch","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","_details$resource$zon","_details$resource$zon2","ruleset","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","_event$duration","_event$organiser","_event$host","chunks","formatCalFileText","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","formatAllDay","formatUTC","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","timezone_helpers_1","utc_date","localToTimezone","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","_FeatureAvailableGuard","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","requestScreenWakeLock","_requestScreenWakeLock","_wake_lock","release","navigator","wakeLock","visibilityState","charAt","slice","_app_name","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","_openConfirmModal","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","predictableRandomInt","ceil","rand","timeFormatString","is24HourTime","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","degreesToRadians","dLon","sin","cos","atan2","hexToRgb","interpolateColors","rgbToHex","shiftColorTowards","hex1","hex2","fraction","resultRgb","shuffleArray","j","random","shuffleArrayWithFirstItem","first_index","firstItem","unshift","confirm_modal_component_1","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","sfc32","xmur3","h","imul","seed","localeString","querySelector","getAttribute","language","degrees","PI","hex","rgb1","rgb2","round","componentToHex","_GoogleAnalyticsService","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","_HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_KeepAliveService","KeepAliveService","_system_id","_delay","_bindTo","GoogleMaps","Mapbox","_MapsPeopleService","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","snackbar","_disable_logging","notify","on_action","_msg","_msg2","warn","snackbar_ref","onAction","_setupPlace","protocol","port","domain","hostname","use_domain","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","generateQRCode","_qr$toImage","qr","vanillaqr_min_1","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","_RemoteLoggingService","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_SettingsService","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","queryShortURLs","ENDPOINT","showShortURL","getShortUrlQRCode","_getShortUrlQRCode","createShortURL","updateShortURL","saveShortURL","patchShortURL","deleteShortURL","QR_STORE","response","cookie","apiKey","fetch","URL","createObjectURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","offset_diff","date_fns_tz_1","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","_Intl","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","_UploadsService","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","Observable","observer","blobUtil","arrayBufferToBlob","cloud_uploads_1","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","_UserIdleTimeService","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","reloadUserData","_current_user","EMPTY_USER","StaffUser","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","p","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","_VorlonService","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","_AccessibilityTooltipComponent","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","_ActionIconComponent","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r8","rule_r7","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r9","set_r4","rule_types","show_rules","i_r5","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","_AttachedResourceConfigModalComponent","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","_AuthenticatedImageDirective","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ElementRef","_AuthorisedAdminGuard","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_AuthorisedUserGuard","_access","_this$_access","space_utilities_1","space_r5","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","_AvailableRoomsStateModalComponent","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","_BindingDirective","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r2","_BuildingSelectComponent","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","_BuildingPipe","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","_ChangelogModalComponent","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","empty_state_r2","hint","message_r5","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","_ChatComponent","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_ChatService","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","desk_height_presets_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","_ComponentsModule","useValue","UserAvatarComponent","NgIf","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","DeskHeightPresetsComponent","TranslatePipe","onConfirm","_ConfirmModalComponent","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r3","display_column","column_r2","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r7","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","cell_outlet_r8","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","index_outlet_r9","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r11","row_clicked","empty","_CustomTableComponent","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","__ngFactoryType__","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_CustomTooltipData","_CustomTooltipComponent","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_superPropGet","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","_DateFromPipe","DateFromPipe","direction","json_display_component_1","obj_r3","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r4","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_DebugConsoleComponent","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","onClose","_DeskHeightPresetsComponent","not_set","desk_sitting_height","desk_standing_height","saveSetting","DeskHeightPresetsComponent_div_5_Template","DeskHeightPresetsComponent_button_23_Template","_DurationPipe","DurationPipe","shorten","_FixedPipe","FixedPipe","_GlobalBannerComponent","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","_GlobalLoadingComponent","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","_HelpTooltipComponent","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","_IconComponent","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r1","ImageCarouselComponent_div_1_img_1_Template","ImageCarouselComponent_div_5_button_1_Template","_ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","_ImageViewerComponent","ImageViewerComponent","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_IndoorMapsComponent","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","_get_location","custom_coordinates","get_location","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","locate","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","getZoom","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_InteractiveMapComponent","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","mapsindoors_template_r5","_JsonDisplayComponent","_updateFormatting","formatted_json","lang_r2","setLocale","flag","_LanguageSelectComponent","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","_LevelPipe","LevelPipe","ALLOWED_NUMBERS","ALLOWED_DECIMALS","ALLOWED_LETTERS","ALLOWED_ALPHANUMERIC","_LimitInputDirective","LimitInputDirective","_el","restriction","custom_list","ctrlKey","metaKey","hostBindings","onKeyDown","logo","toPassword","login","username_r3","_LoginComponent","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","loading_state_r5","_MapCanvasComponent","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_MapLocateModalComponent","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_MapPinComponent","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","_MapPolygonComponent","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","_MapRadiusComponent","MapRadiusComponent","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r3","injectors","i_r4","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_MapRendererComponent","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","RESOURCE_MAP","_MapsIndoorsComponent","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","hasOwnProperty","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","clearDirections","_last_position","setDirectionsFromLocation","_setDirectionsFromLocation","from","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_last_building","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_updateMapStyling2","_this$metadata2","id_simple","_$properties","_$properties2","_setResource","extrusionHeight","extrusionVisible","_focusOnLocation2","_item$properties2","_item$properties3","_this9","_$properties3","_this10","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","padLength","_MediaDurationPipe","MediaDurationPipe","period_length","show_ms","seconds","milliseconds","_MisconfiguredComponent","MisconfiguredComponent","_PopoutMenuComponent","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","_PrintableComponent","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","_RedirectComponent","RedirectComponent","_RegionSelectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","_SafePipe","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","_SanitizePipe","sanitize","selectAll","checked","data_view$","column_r4","setSort","SimpleTableComponent_button_2_app_icon_3_Template","selectable","sortable","active_columns","i_r7","active_row","column_r9","SimpleTableComponent_ng_container_3_div_2_div_3_span_2_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_ng_container_1_Template","tmp_8_0","SimpleTableComponent_ng_container_3_div_2_div_3_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_Template","j_r12","columnType","SimpleTableComponent_ng_container_3_div_3_ng_container_1_Template","child_template","ɵɵpureFunction4","SimpleTableComponent_ng_container_3_div_1_Template","SimpleTableComponent_ng_container_3_div_2_Template","SimpleTableComponent_ng_container_3_div_3_Template","empty_message","setPage","total_pages","total_count","_SimpleTableComponent","SimpleTableComponent","rowClicked","_data$","_filter$","_sort$","_JSON$stringify","a_value","b_value","column","_selectAll","SimpleTableComponent_div_1_Template","SimpleTableComponent_button_2_Template","SimpleTableComponent_ng_container_3_Template","SimpleTableComponent_div_6_Template","SimpleTableComponent_div_8_Template","column_template","link_r1","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","error_msg_r3","links","_StatusOverlayComponent","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","load_state_r4","_StatusPillComponent","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","_ThumbnailPipe","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","_UnauthorisedComponent","_UploadPermissionsModalComponent","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","image_state_r2","_UserAvatarComponent","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","work_location_tooltip_component_1","region_select","building_select","help_tooltip","work_location_tooltip","desk_height_tooltip_r3","language_tooltip","newSupportTicket","reloadPage","_UserControlsComponent","accessibility_tooltip","WorkLocationTooltipComponent","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_ng_template_23_Template","UserControlsComponent_div_25_Template","UserControlsComponent_button_26_Template","UserControlsComponent_button_31_Template","disable_building_select","desk_height","has_new_version","focusInput","key_r3","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r4","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","_VirtualKeyboardComponent","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","loc_r3","ctx_r4","setLocation","WorkLocationTooltipComponent_div_7_div_1_button_12_Template","WorkLocationTooltipComponent_div_7_div_1_div_17_Template","timeFrom","block_r6","location_icon","WorkLocationTooltipComponent_div_7_div_1_Template","active_preference","blocks","_WorkLocationTooltipComponent","overrides","pref","day_of_week","getDay","work_preferences","work_overrides","location_name_time","_setLocation","updateUser","_defineProperty","editSettings","WorkLocationTooltipComponent_div_7_Template","WorkLocationTooltipComponent_ng_template_8_Template","empty_state_r7","ZONE_LIST","EMPTY_ZONE","PlaceZone","_ZonePipe","ZonePipe","showZone","AttendeeListComponent_ng_container_7_div_1_div_5_Template","AttendeeListComponent_ng_container_7_div_1_Template","show_host","_AttendeeListComponent","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_ng_container_7_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","_EventCardComponent","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","_this3$event$extensio","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","menu_r4","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r7","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r6","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","request_r9","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","show_attendees","no_edit_message","act_r15","_r14","EMPTY_ACTIONS","_EventDetailsModalComponent","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","_EventFormService","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","_this$last_success","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","ignore_space_check","ignore_owner","_this7$event","_form$get3","_spaces$","_this7$event2","_this7$event3","_this7$event4","_value$organiser","_value$organiser2","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_this7$_org$region","_this7$_org$building","_spaces$5","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","_EventLinkModalComponent","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","_valid_asset_cache","_valid_cache_expiry","event_start","event_end","host_email","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","view_access","_this$recurrence","_this$system","parseRecurrence","all_day_date","_arr","queryAllEvents","EVENTS_ENDPOINT","createEvent","updateEvent","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","addEventGuest","removeEventGuest","isSpaceAvailable","system_ids","ignore_period","calendar_fn_1","short_list","_s$resource","inUseAt","method","attendee_list_component_1","event_card_component_1","group_event_card_component_1","_SharedEventsModule","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","i13","i14","GroupEventCardComponent","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","is_onsite","has_space","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","_GroupEventCardComponent","space_pipe","group_event_calendar","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_div_5_Template","GroupEventDetailsModalComponent_div_99_div_6_Template","GroupEventDetailsModalComponent_div_99_span_8_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_a_10_Template","showing_map","is_online","_GroupEventDetailsModalComponent","remove_blocks","_remove_blocks","block","last","lastIndexOf","_i2","_remove_blocks2","_this$event$attendees","guest_details","_this$guest_details","_this$event$attendees2","_toggleInterest","_this$event$system","_this$event$system2","toggleInterest","_toggleAttendance","_this$event$system4","_this$event$system3","toggleAttendance","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","attendance","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","getFreeTimeSlots","blk","getNextFreeTimeSlot","min_size","slots","addSeconds","bkn_start","bkn_end","isSameMinute","save","_SetupBreakdownModalComponent","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","_this$_event4","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","_form$get4","clearValidators","updateValueAndValidity","validateCateringField","setMockBookingStartDatetime","BOOKING_DATE","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","_booking$resources","organizer","setMinutes","catering_control","control","_catering_control$val","catering_field","isFuture","is_future","_control$parent","qr_code_1","_ExploreBookQrComponent","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","_ExploreBookingModalComponent","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","_ExploreDeskInfoComponent","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","_ExploreDesksService","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_ExploreDeviceInfoComponent","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","device_tooltip_r4","explore_locker_bank_modal_component_1","in_use_count","_ExploreLockerBankInfoComponent","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3","_ExploreLockerBankModalComponent","_ExploreLockersService","ExploreLockersService","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r5","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","_ExploreMapControlComponent","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r3","ExploreMapViewComponent_div_8_div_3_Template","_ExploreMapViewComponent","ExploreMapViewComponent","_s","_desks","_zones","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","_ExploreParkingInfoComponent","ExploreParkingInfoComponent","ExploreParkingInfoComponent_div_8_Template","is_concierge","explore_parking_info_component_1","_ExploreParkingService","on_book","user_events","active_spaces","_plate_numbers","assigned","_updateParkingSpaces","_updateParkingSpaces2","_space$groups","_this3$_options$getVa","_this3$_options$getVa2","_space$zone3","_space$zone4","_space$zone","_space$zone2","_yield$_this3$_setBoo","active_level","option_r3","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","_ExploreSearchComponent","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkButtonPosition","_this$_input_el","_this$_input_el2","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","closeSearch","showSearch","cancelClear","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r6","origin_r5","staff_fn_1","organisation_1","TYPES","typeIndex","is_role","_ExploreSearchService","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties4","_$properties5","_$properties6","_$properties7","_poi_metadata","_poi_list","can_search","_points_of_interest","poi_list","roled_contacts","mapspeople_items","points_of_interest","roles","role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","_ExploreSensorInfoComponent","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","feature_r3","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","_ExploreSpaceInfoComponent","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","space_tooltip_r4","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_ExploreSpacesService","_panning","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_arr2","_ExploreStateService","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_ExploreZonesService","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","setLabels","polygons","_ExploreZoomControlComponent","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","_SharedExploreModule","OverlayModule","MatFormField","MatError","MatInput","NgControlStatusGroup","FormGroupDirective","FormControlName","DurationFieldComponent","UserSearchFieldComponent","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","_SetDatetimeModalComponent","SetDatetimeModalComponent_main_6_Template","_ActionFieldComponent","ActionFieldComponent","show_tooltip","performAction","zone_r1","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r3","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r4","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r7","time_r8","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","_BookingRulesFormComponent","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","render_fn","_CounterComponent","CounterComponent","step","focused","ctrl_key","shift_key","CounterComponent_span_5_Template","day_r1","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","_DateCalendarComponent","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","short","week_start","_DateFieldComponent","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_Conditional_2_Template","DateFieldComponent_Conditional_3_Template","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","calendar_picker_r3","ɵɵconditional","has_error","weekday_r1","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","_DateRangeCalendarComponent","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","previousMonth","nextMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","setStartDate","setEndDate","start_date","_DateRangeFieldComponent","DateRangeFieldComponent","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","_DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","date_range_field_component_1","date_range_calendar_component_1","_FormFieldsModule","UserListFieldComponent","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","MatPrefix","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","ɵNgNoValidate","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r1","_HostSelectFieldComponent","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","image_viewer_component_1","url_r3","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","view_space","_ImageListFieldComponent","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","_file_input","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","addImage","chipList_r11","addChipItem","removeChipItem","item_r3","_ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","chipList_r5","USER_LIST","_PlaceUserPipe","formatted_value","_RecurrenceFieldComponent","RecurrenceFieldComponent","instance_of_month","old_value","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","_RecurrenceModalComponent","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","_RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","_SpaceListFieldComponent","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_5","SpaceListFieldComponent_div_15_Template","bld_r1","type_r2","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","_SupportTicketModalComponent","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","extra_info_fn","_TimeFieldComponent","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","_UploadFileFieldComponent","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","_UploadListFieldComponent","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r7","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","_UserListFieldComponent","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","auto_r10","chipList_r9","search_valid_email","blurInput","stopPropagation","empty_fn","_UserSearchFieldComponent","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_5_Template","UserSearchFieldComponent_mat_option_8_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","auto_r7","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","nextEventTime","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","MOCK_GUESTS","asset_count","tracking","bookings_data_1","MOCK_BOOKINGS","_$route_params","_$route_params2","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subMinutes","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","createAreaManagementModule","MockAreaManagementModule","overview","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","updateLocations","ts_md5_1","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","registerSystem","System","control_1","createSystemModule","createBookingsModule","ContactTracing","contact_tracing_1","createContactTracingModule","AreaManagement","desks_1","LocationServices","Camera","camera_1","createCameraModule","Display","display_1","createDisplayModule","Microphone","microphone_1","createMicrophoneModule","Capture","capture_1","createCaptureModule","MeetingPush","meeting_1","createMeetingPushModule","VidConf","video_conference_1","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","locker_locations_1","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","generateMockBuilding","BLD_COUNT","generateMockLevel","nested","level2","LVL_COUNT","level_name","IGNORE_KEYS","_data$bookable","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_OrganisationService","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","_region_settings","_building_settings","_updateSettingOverrides","_this$building","_this$buildings$","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","bld_list","Region","orgs","_this$_buildings$getV","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","querySettings","encryption_level","EncryptionLevel","None","settings_string","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","_this5$region","_iterator5","_step6","_iterator6","_this6$building","_this6$region","buildingSettings","regionSettings","generateMockOrganisation","ORG_COUNT","building_utilities_1","default_module","card_type","item_r4","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","_CardInputFieldComponent","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","success_state_r3","transaction_id","_PaymentModalComponent","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","_PaymentsModule","STRIPE_MODULE","_PaymentsService","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","_NewSpaceSelectModalComponent","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","_SpaceDetailsComponent","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r4","_SpaceFiltersDisplayComponent","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_2_Template","SpaceFiltersComponent_mat_form_field_15_mat_option_5_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_Template","SpaceFiltersComponent_div_28_div_6_Template","SpaceFiltersComponent_div_28_div_7_Template","feature_display","SpaceFiltersComponent_section_31_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_31_ng_container_3_Template","_SpaceFiltersComponent","using_mapspeople","viewing_map","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_form_field_15_Template","SpaceFiltersComponent_mat_form_field_17_Template","SpaceFiltersComponent_div_26_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_29_Template","SpaceFiltersComponent_section_31_Template","SpaceFiltersComponent_div_34_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","space_placeholder_r4","tmp_12_0","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","_SpaceListComponent","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","_SpaceLocationPinComponent","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_div_2_Template","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","_SpaceSelectMapComponent","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","support_url","configurations","updateSpaceList","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","_SpacePipe","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_LIST_REQUESTS","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","ctrl","isValidUrl","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","_SharedSpacesModule","SPACE_PIPE","_SpacesService","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","hour_r2","user_r5","offset_y","_FindAvailabilityModalComponent","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","_UserAvailabilityComponent","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","_NewUserModalComponent","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","_UserFormComponent","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","location_time","datetime","_this$work_overrides$","date_string","_pref$blocks","_this$work_preference","work_preference","in_hours","in_hours_time","_UserPipe","UserPipe","generateMockUser","external","USER_COUNT","delegates","delegate_count","USER_EMAILS","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","_SharedUsersModule","day_r2","weekdays_enabled","initialiseDay","type_r7","block_r5","day_r6","setStartTime","setEndTime","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_mat_option_5_Template","i_r8","addBlock","removeBlock","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_Template","WFHSettingsModalComponent_main_4_mat_checkbox_4_Template","WFHSettingsModalComponent_main_4_ng_container_7_Template","WFHSettingsModalComponent_main_4_ng_template_8_Template","has_working_days","empty_state_r9","_WFHSettingsModalComponent","available_weekdays","_this$options$find","cleanupBlocks","fromTime","_saveChanges","new_settings","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_main_4_Template","WFHSettingsModalComponent_footer_5_Template","WFHSettingsModalComponent_ng_template_6_Template","load_state_r11"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/fixed-device-helpers.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/desk-height-presets.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/limit-input.directive.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/simple-table.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/components/src/lib/work-location-tooltip.component.ts","./libs/components/src/lib/zone.pipe.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/group-event-card.component.ts","./libs/events/src/lib/group-event-details-modal.component.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking-info.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport { invalidateToken, isMock, setToken, token } from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({ declarations: [\n        AppComponent,\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        })], providers: [SpacePipe, provideHttpClient(withInterceptorsFromDi())] })\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    ParkingService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true)),\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings',\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource,\n                                            ),\n                                            system: space,\n                                        }),\n                                ),\n                            ),\n                            catchError((_) => of([])),\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind(),\n                            );\n                        }\n                        return obs;\n                    }),\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1),\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase(),\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event',\n                    ),\n            );\n        }),\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([])),\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly raw_events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = this.raw_events.pipe(\n        map((_) => _.filter((_) => !_.extension_data?.shared_event)),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[]))),\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n                include_deleted: 'recurring',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly group_events = this.raw_events.pipe(\n        map((_) => _.filter((_) => _.extension_data?.shared_event)),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id,\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(\n            ([\n                events,\n                visitors,\n                desks,\n                parking,\n                lockers,\n                group_events,\n            ]: any) => {\n                const filtered_events = events.filter(\n                    (ev) =>\n                        !desks.find(\n                            (bkn) => `${ev.meeting_id}` === `${bkn.id}`,\n                        ) &&\n                        ev.linked_bookings[0]?.booking_type !== 'group-event',\n                );\n                return [\n                    ...filtered_events,\n                    ...visitors,\n                    ...desks,\n                    ...parking,\n                    ...lockers,\n                    ...group_events,\n                ].sort((a, b) => a.date - b.date);\n            },\n        ),\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter((_) => {\n                if (\n                    this._deleted.includes(\n                        _.instance ? `${_.id}|${_.instance}` : _.id,\n                    )\n                )\n                    return false;\n                if (\n                    _.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('group-event')\n                ) {\n                    return false;\n                }\n                if (\n                    _ instanceof CalendarEvent &&\n                    !_.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('event')\n                ) {\n                    return false;\n                } else if (_ instanceof CalendarEvent) return true;\n                return filters?.shown_types?.includes((_ as any).booking_type);\n            }),\n        ),\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                const time_before = Math.min(60, auto_release.time_before || 0);\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) + time_before,\n                            ),\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) + time_before;\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0,\n                            ),\n                            Date.now(),\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0,\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now(),\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format,\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format,\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog,\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        }),\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog,\n        private _parking: ParkingService,\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api',\n                ),\n            ),\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll()),\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]',\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(\n            item.instance ? `${item.id}|${item.instance}` : item.id,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted),\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        console.log('Requests:', value);\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 }\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets } as AssetGroup))\n                    )\n                )\n            )\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        })\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            bookings = bookings.filter(\n                (_) => _.status !== 'declined' && _.status !== 'cancelled'\n            );\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id))\n                        )\n                ),\n            }));\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration)\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id)\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id)\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id))\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration)\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id)\n    ).toPromise();\n    console.log('Used IDs:', used_ids);\n    console.log('Changed Assets:', changed_assets);\n    console.log('Requests:', requests);\n    console.log('Bookings:', bookings);\n    console.log('Filtered:', filtered);\n    console.log('Unchanged:', unchanged);\n    console.log('Available Groups:', available_groups);\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            })\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id))\n            )\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        return createBooking(\n            new Booking({\n                type: 'asset-request',\n                booking_type: 'asset-request',\n                date,\n                duration,\n                all_day,\n                description: location_name,\n                user_email: host,\n                asset_id: asset_ids[0],\n                asset_ids,\n                asset_name: request.items.map((_) => _.name).join(', '),\n                title: request.items.map((_) => _.name).join(', '),\n                approved:\n                    !reset_state && booking?.approved && !request._changed,\n                rejected:\n                    !reset_state && booking?.rejected && !request._changed,\n                extension_data: {\n                    parent_id: id,\n                    request_id: request.id,\n                    location_id,\n                    request: new AssetRequest({ ...request, event: null }),\n                },\n                zones: zones || [],\n            }),\n            { ical_uid, event_id: from_booking ? '' : id }\n        );\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise())\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n\nexport * from './lib/parking.service';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{\n                                raw_description ||\n                                    booking?.asset_name ||\n                                    booking?.asset_id\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'declined' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id,\n            ),\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description,\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit(),\n                ),\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit()),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking, checkinBookingInstance } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [class.text-success-content]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress') &&\n                                booking.status !== 'declined'\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location:\n                this.booking?.extension_data?.map_id || this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request',\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        const building = this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id),\n        );\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find(\n                (region) =>\n                    (this.booking?.zones || []).includes(region.id) ||\n                    region.id === building?.parent_id,\n            );\n            if (region) return region;\n        }\n        return building;\n    }\n\n    public get can_edit() {\n        return (\n            this.booking.booking_type !== 'visitor' &&\n            this.booking.booking_type !== 'parking'\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`,\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        const bkn = this.booking;\n        const promise = (\n            bkn.instance\n                ? checkinBookingInstance(\n                      bkn.id,\n                      bkn.instance,\n                      !this.booking.checked_in,\n                  )\n                : checkinBooking(this.booking.id, !this.booking.checked_in)\n        )\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        await promise;\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`,\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}',\n        ),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1),\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1),\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0,\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`),\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    (this._settings.get('app.use_region')\n                        ? this._org.region?.id\n                        : this._org.building?.id) ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration,\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    [],\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp),\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_),\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id)\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([])),\n                ),\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id),\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        }),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        }),\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            }),\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService,\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1,\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            }),\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}',\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, ''],\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}',\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form,\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type,\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const resources = value.resources || [];\n        const zones = resources[0]?.zone\n            ? unique([\n                  this._org.organisation.id,\n                  this._org.region?.id,\n                  resources[0]?.zone?.parent_id,\n                  resources[0]?.zone?.id,\n              ])\n            : [this._org.organisation.id, this._org.region?.id];\n        const q: any = event_id\n            ? { ical_uid: value.ical_uid, event_id: event_id }\n            : parent_id\n              ? { booking_id: parent_id }\n              : {};\n        if (booking.instance && !value.update_master) {\n            q.instance = true;\n            q.start_time = booking.booking_start;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name || value.user_name,\n                user_email: value.user?.email || value.user_email,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n                zones: unique([...zones, ...(value.zones || [])]).filter(\n                    (_) => _,\n                ),\n            }),\n            q,\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: unique([...zones, ...(value.zones || [])]).filter(\n                        (_) => _,\n                    ),\n                },\n                value.assets,\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time',\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result),\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email,\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id,\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length,\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email',\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type,\n                ),\n            ),\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd',\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: (asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          this._org.region?.id,\n                          asset?.zone?.parent_id,\n                          asset?.zone?.id,\n                      ])\n                    : [this._org.organisation.id, this._org.region?.id]\n                ).filter((_) => _),\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`,\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType,\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected,\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id,\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || [],\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id,\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata))),\n                    ),\n                ),\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number,\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id,\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id),\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item),\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item,\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport enum RecurrenceDays {\n    SUNDAY = 1 << 6,\n    MONDAY = 1 << 5,\n    TUESDAY = 1 << 4,\n    WEDNESDAY = 1 << 3,\n    THURSDAY = 1 << 2,\n    FRIDAY = 1 << 1,\n    SATURDAY = 1 << 0,\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction?: 'tentative' | 'accepted' | 'declined';\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n    /** Unix epoch for the start time of the reccurence instance in seconds */\n    public readonly instance?: number;\n    /** Type of recurrence instance */\n    public readonly recurrence_type: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Bit flags for the recurrence days of the week */\n    public readonly recurrence_days?: number;\n    /** Week of the month to recur on */\n    public readonly recurrence_nth_of_month?:\n        | 1\n        | 2\n        | 3\n        | 4\n        | 5\n        | -1\n        | -2\n        | -3\n        | -4\n        | -5;\n    /** How often to recur */\n    public readonly recurrence_interval?: number;\n    /** Unix epoch for the end time of the recurrence in seconds */\n    public readonly recurrence_end?: number;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    private _b_valid_asset_cache = [];\n    private _b_valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._b_valid_cache_expiry > Date.now() &&\n            this._b_valid_asset_cache.length\n        ) {\n            return this._b_valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._b_valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._b_valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._b_valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                }),\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60),\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000,\n                ),\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction = data.induction || undefined;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0),\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf(),\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected || this.deleted\n                  ? 'declined'\n                  : this.approved\n                    ? 'approved'\n                    : 'tentative';\n        this.process_state = data.process_state || 'pending';\n\n        this.recurrence_type = data.recurrence_type || 'none';\n        this.recurrence_days = data.recurrence_days;\n        this.recurrence_nth_of_month = data.recurrence_nth_of_month;\n        this.recurrence_interval = data.recurrence_interval;\n        this.recurrence_end = data.recurrence_end;\n        this.instance = data.instance;\n\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any),\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        data.zones = data.zones.filter((_) => _);\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { current_user, currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false },\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || '',\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        user_name: new FormControl(booking.user_name),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource,\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY',\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n        plate_number: new FormControl(\n            booking.extension_data.plate_number || '',\n        ),\n        recurrence_type: new FormControl(booking.recurrence_type || 'none'),\n        recurrence_days: new FormControl(booking.recurrence_days),\n        recurrence_nth_of_month: new FormControl(\n            booking.recurrence_nth_of_month,\n        ),\n        recurrence_interval: new FormControl(booking.recurrence_interval),\n        recurrence_end: new FormControl(booking.recurrence_end),\n        notes: new FormControl(booking.extension_data.notes || ''),\n        update_master: new FormControl(false),\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.user.valueChanges.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                user: user,\n                user_id: user?.id,\n                user_email: user?.email,\n                user_name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    current_user.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                booked_by: user,\n                booked_by_id: user?.id,\n                booked_by_email: user?.email,\n                name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0]),\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = [],\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y),\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response (can be set to apply to only recurring bookings) */\n    include_deleted?: 'all' | 'recurring';\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n    /** Whether to also query rejected bookings */\n    rejected?: boolean;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List resources that are booked within the given parameters\n * @param q Parameters to pass to the API request\n */\nexport function bookedResourceList(\n    q: BookingsQueryParams,\n): Observable<string[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}/booked${query ? '?' + query : ''}`).pipe(\n        map((list) => list as string[]),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams,\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string },\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update the induction status of an existing booking\n * @param id ID of the booking to update\n * @param status New induction status of the booking\n */\nexport function updateBookingInductionStatus(\n    id: string,\n    status: 'tentative' | 'accepted' | 'declined',\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_induction?induction=${encodeURIComponent(status)}`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBookingInstance(\n    id: string,\n    start_time: number,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: {\n        booking_id?: string;\n        event_id?: string;\n        ical_uid?: string;\n        instance?: number;\n    },\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    const instance = q?.instance;\n    if (q) delete (q as any).instance;\n    return id\n        ? instance\n            ? updateBookingInstance(id, data.instance, data)\n            : updateBooking(id, data)\n        : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n */\nexport function removeBooking(id: string, q: any = {}) {\n    if (q.instance) {\n        return removeBookingInstance(id, q.start_time);\n    }\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Remove instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n */\nexport function removeBookingInstance(id: string, start_time: number) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the booking to `approved`\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `approved`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function approveBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to `rejected`\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `rejected`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function rejectBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string,\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true,\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking instance\n * @param id ID of the booking to grab\n * @param start_time Start time of the booking instance\n * @param state New checkin state of the booking instance\n */\nexport function checkinBookingInstance(\n    id: string,\n    start_time: number,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in/${start_time}?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0],\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) =>\n                            b.asset_id === id && (!ignore || ignore !== b.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0,\n        ),\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource,\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise()),\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id)),\n                ),\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id },\n            ).toPromise();\n        }),\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) {\n            this.displayed = null;\n            setTimeout(() => this._dialog_ref.close([item]), 50);\n        }\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div\n            class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\"\n            *ngIf=\"!edit_presets; else desk_height_tooltip\"\n        >\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <div class=\"flex items-center space-x-2 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript flex-1 w-1/2\"\n                    >\n                        <mat-select\n                            placeholder=\"No selected preset\"\n                            [(ngModel)]=\"preset\"\n                            (ngModelChange)=\"setPreset($event)\"\n                        >\n                            <mat-option value=\"\">None</mat-option>\n                            <mat-option value=\"standing\">Standing</mat-option>\n                            <mat-option value=\"sitting\">Seated</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"edit_presets = true\"\n                        class=\"rounded h-12 w-12 bg-secondary text-secondary-content\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                </div>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <ng-template #desk_height_tooltip>\n            <desk-height-presets\n                [show_close]=\"true\"\n                (close)=\"edit_presets = false\"\n            ></desk-height-presets>\n        </ng-template>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public edit_presets = false;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        if (!sitting_height && !standing_height) {\n            this.edit_presets = true;\n        }\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        console.log('Set preset:', value);\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s),\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`,\n            );\n        }\n        this.form.patchValue({ user: currentUser() });\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id,\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        }),\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id,\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking'),\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        }),\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking'),\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking'),\n            );\n        }),\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[],\n                        ),\n                    ),\n                ),\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[],\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny),\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id,\n                            ),\n                        )\n                        .filter((space) => !!space),\n                ),\n            ),\n        ),\n        map((_) => _[0]),\n        shareReplay(1),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\nimport { CateringItem } from './catering-item.class';\nimport { unique } from '@placeos/common';\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <simple-table\n            class=\"w-full min-w-[32rem] block text-sm\"\n            [data]=\"menu\"\n            [columns]=\"[\n                {\n                    key: 'active',\n                    name: ' ',\n                    content: active_template,\n                    size: '3.5rem',\n                    sortable: false\n                },\n                { key: 'name', name: 'Name' },\n                { key: 'category', name: 'Category' },\n                {\n                    key: 'unit_price',\n                    name: 'Price',\n                    content: price_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '6.5rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"filters?.search\"\n            [show_children]=\"show_children\"\n            [child_template]=\"child_template\"\n            [sortable]=\"true\"\n            empty_message=\"No Items in Menu\"\n        ></simple-table>\n        <ng-template #active_template let-row=\"row\">\n            <mat-checkbox\n                class=\"mx-auto\"\n                matTooltip=\"Allow Ordering Item for this zone\"\n                matTooltipPosition=\"right\"\n                [ngModel]=\"isEnabled(row)\"\n                (ngModelChange)=\"setEnabled(row, $event)\"\n            ></mat-checkbox>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <div\n                class=\"px-2 py-1 font-mono text-xs flex items-center mx-auto bg-secondary text-secondary-content rounded\"\n            >\n                {{ data / 100 | currency: (symbol | async) }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <div class=\"p-2 flex items-center mx-auto space-x-2\">\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!can_edit\"\n                    [class.opacity-0]=\"!can_edit\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"addOption(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>add</app-icon>\n                            <div>Add Option</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"editItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>edit</app-icon>\n                            <div>Edit Item</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"removeItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <div>Remove Item</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.options?.length\"\n                    [matTooltip]=\"\n                        row.options?.length\n                            ? (show_children[row.id] ? 'Hide' : 'Show') +\n                              ' Menu Item Options'\n                            : ''\n                    \"\n                    (click)=\"show_children[row.id] = !show_children[row.id]\"\n                >\n                    <app-icon>\n                        {{\n                            show_children[row.id]\n                                ? 'keyboard_arrow_down'\n                                : 'chevron_right'\n                        }}\n                    </app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #child_template let-row=\"row\">\n            <div\n                class=\"flex p-2 items-center border-b border-solid border-base-200 relative space-x-2\"\n                *ngFor=\"let option of row.options\"\n            >\n                <div\n                    class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                ></div>\n                <div class=\"flex-1 pl-4 pr-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.group }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Menu Item Option\"\n                    (click)=\"editOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"!mr-1\"\n                    matTooltip=\"Remove Menu Item Option\"\n                    (click)=\"removeOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon class=\"text-error\">delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    public show_children: Record<string, boolean> = {};\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n\n    public readonly addOption = (item) => this._catering.addOption(item);\n\n    public readonly editOption = (item, option) =>\n        this._catering.addOption(item, option);\n\n    public readonly removeOption = (item, option) =>\n        this._catering.deleteOption(item, option);\n\n    public readonly editItem = (item) => this._catering.addItem(item);\n\n    public readonly removeItem = (item) => this._catering.deleteItem(item);\n\n    public get filters() {\n        return this._orders.filters;\n    }\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(\n        private _catering: CateringStateService,\n        private _orders: CateringOrdersService\n    ) {}\n\n    public isEnabled(item: CateringItem) {\n        return !item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public setEnabled(item: CateringItem, state: boolean) {\n        let list = item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...item, hide_for_zones: list })\n        );\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-300 w-10 h-10 flex items-center justify-center font-mono text-sm\"\n                    >\n                        {{ item?.amount || item?.quantity || 1 }}×\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto\">\n            <!-- <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar> -->\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template,\n                        sortable: false\n                    },\n                    {\n                        key: 'event',\n                        name: 'Host',\n                        content: host_template,\n                        sortable: false\n                    },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    {\n                        key: 'invoice_number',\n                        name: 'Invoice No.',\n                        empty: 'No Invoice'\n                    },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem'\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-200 p-2 text-2xl flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\" let-row=\"row\">\n                <div class=\"p-4\">\n                    <div>Deliver at {{ data | date: time_format }}</div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ row?.event?.date | date: 'MMM d' }},\n                        {{ row?.event?.date | date: time_format }}\n                        -\n                        {{ row?.event?.date_end | date: 'MMM d' }},\n                        {{ row?.event?.date_end | date: time_format }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <div>\n                        {{ data?.organiser?.name || data?.host || '' }}\n                        <span\n                            class=\"opacity-30\"\n                            *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                        >\n                            Unknown Host\n                        </span>\n                    </div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ data?.organiser?.email || data?.host }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [hover]=\"true\"\n                        xPosition=\"end\"\n                        yPosition=\"top\"\n                        [content]=\"notes_template\"\n                        [disabled]=\"!row.notes\"\n                    >\n                        <app-icon>description</app-icon>\n                    </button>\n                    <ng-template #notes_template>\n                        <div\n                            class=\"p-2 rounded-lg bg-base-100 text-base-content max-w-[32rem] min-w-[8rem] shadow border border-base-200\"\n                        >\n                            <div class=\"mb-2\">Notes</div>\n                            <p class=\"text-sm px-4 py-2 bg-base-200 rounded\">\n                                {{ row.notes }}\n                            </p>\n                        </div>\n                    </ng-template>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\nexport * from './lib/fixed-device-helpers';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","let _wake_lock: WakeLockSentinel | null = null;\n\nexport async function requestScreenWakeLock() {\n    if (_wake_lock) {\n        await _wake_lock.release();\n    }\n    // create an async function to request a wake lock\n    try {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    } catch (err) {\n        throw err;\n    }\n}\n\ndocument.addEventListener('visibilitychange', async () => {\n    if (_wake_lock !== null && document.visibilityState === 'visible') {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    }\n});\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name,\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args,\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog,\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        },\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi',\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3],\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|'),\n                    )\n                    .join(seperator),\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents),\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(''),\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number,\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language,\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, ''],\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number,\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number,\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n\n/**\n * Shuffle the items in array into random order\n * @param array List of items to shuffle\n */\nexport function shuffleArray(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n/**\n * Shuffle the items in array into random order with a specific item as the first\n * @param array List of items to shuffle\n * @param first_index Index of the item in the list to set as first\n */\nexport function shuffleArrayWithFirstItem(array: any[], first_index: number) {\n    // Move the specified item to the beginning\n    const firstItem = array.splice(first_index, 1)[0];\n    array.unshift(firstItem);\n\n    // Shuffle the rest of the array (starting from index 1)\n    for (let i = array.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i - 1)) + 1;\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.35.0/mapsindoors-4.35.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg',\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=30;path=/api/engine/v2/short_url/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL,\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>,\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\nexport const LOCAL_TIMEZONE =\n    Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE\n) {\n    const offset_diff =\n        getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE\n) {\n    const offset_diff =\n        getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\nconst _change = new BehaviorSubject(0);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    combineLatest([showUser('current'), _change])\n        .pipe(\n            delay(1000),\n            retry(10),\n            map(([i]) => new StaffUser(i as any)),\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\nexport function reloadUserData() {\n    _change.next(Date.now());\n}\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"50fdaf3\",\n    \"hash\": \"50fdaf3\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"50fdaf3\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1725585146117\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth], video [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '', { async: false }) as any;\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _binding = new BehaviorSubject('');\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = combineLatest([\n        this._org.active_building,\n        this._binding,\n    ]).pipe(\n        filter(([b]) => !!b),\n        map(([_, biniding]) => biniding || this._org.binding('chat_room')),\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1),\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                '',\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => {\n                        log('CHAT', 'Connection error:', [e], 'error');\n                        this._cleanup();\n                    },\n                    () => this._cleanup(),\n                ),\n            );\n            return this._socket;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setBinding(system_id: string) {\n        this._binding.next(system_id);\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay,\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message, { async: false }) as any,\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message, { async: false }) as any,\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport {\n    provideHttpClient,\n    withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { SimpleTableComponent } from './simple-table.component';\nimport { LimitInputDirective } from './limit-input.directive';\nimport { DeskHeightPresetsComponent } from './desk-height-presets.component';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\nimport { ZonePipe } from './zone.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n    SimpleTableComponent,\n    WorkLocationTooltipComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n    ZonePipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n    DeskHeightPresetsComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    BindingDirective,\n    AuthenticatedImageDirective,\n    LimitInputDirective,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n        provideHttpClient(withInterceptorsFromDi()),\n    ],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n    /** Delay before closing the modal */\n    close_delay?: number;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '28em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header class=\"px-4 py-3\">\n            <h3 class=\"font-medium text-xl\">{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-4 p-4 max-w-[80vw]\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p content class=\"text-center\" [innerHTML]=\"content\"></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-4 space-x-4\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse flex-1\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"flex-1\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-4\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent extends AsyncHandler {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (this._data.close_delay) {\n            this.timeout(\n                'close',\n                () => this._dialog_ref.close(),\n                this._data.close_delay,\n            );\n        }\n    }\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-height-presets',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg mb-2\" i18n>Desk Height Presets</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Desk height presets allow you to store and recall your preferred\n                desk height when checking into a booked desk that supports\n                height adjustment.\n            </div>\n            <div\n                class=\"text-xs mb-4 -mx-2 p-2 rounded bg-warning text-warning-content\"\n                *ngIf=\"not_set && show_close\"\n            >\n                Before you can set a desk height, presets must be set\n            </div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience.\n            </div>\n            <div class=\"flex flex-col mt-2\">\n                <label>Sitting Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"80\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_sitting_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_sitting_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ desk_sitting_height.toFixed(1) }}cm\n                    </div>\n                </div>\n                <label>Standing Height</label>\n                <div class=\"flex items-center space-x-2  mr-2\">\n                    <mat-slider\n                        min=\"90\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_standing_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_standing_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right mr-2\">\n                        {{ desk_standing_height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button\n                btn\n                matRipple\n                (click)=\"onClose()\"\n                class=\"w-full mt-2\"\n                *ngIf=\"show_close\"\n            >\n                Save Presets\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskHeightPresetsComponent {\n    @Input() public show_close = false;\n    @Output() public close = new EventEmitter<void>();\n    public not_set = false;\n    public desk_sitting_height = 71;\n    public desk_standing_height = 101;\n\n    constructor(private _settings: SettingsService) {}\n\n    public ngOnInit() {\n        this.not_set =\n            !this._settings.get('desk_sitting_height') &&\n            !this._settings.get('desk_standing_height');\n        this.desk_sitting_height =\n            this._settings.get('desk_sitting_height') || 71;\n        this.desk_standing_height =\n            this._settings.get('desk_standing_height') || 101;\n    }\n\n    public onClose() {\n        this.saveSetting('desk_sitting_height', this.desk_sitting_height);\n        this.saveSetting('desk_standing_height', this.desk_standing_height);\n        this.close.emit();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            console.log('View Options:', view_options);\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        console.log('Pairs:', pairs, building);\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                console.log(\n                    'Locations:',\n                    locations,\n                    this.map_instance.getZoom()\n                );\n                this.search_result_items = locations;\n            }\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn'\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            console.log('Using custom coordinates:', this.coordinates);\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_)\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn'\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        console.log('Directions Service:', this.directions_service);\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        console.log('Route Parameters:', routeParameters);\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn'\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        console.log('Route:', result);\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone.id);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\nconst ALLOWED_NUMBERS = '0123456789'.split('');\nconst ALLOWED_DECIMALS = '0123456789.'.split('');\nconst ALLOWED_LETTERS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst ALLOWED_ALPHANUMERIC = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n\n@Directive({\n    selector: '[limitInput]',\n})\nexport class LimitInputDirective {\n    @Input() restriction:\n        | 'number'\n        | 'decimals'\n        | 'letters'\n        | 'alphanumeric'\n        | 'custom' = 'decimals';\n    @Input() custom_list: string[] = [];\n\n    constructor(private _el: ElementRef) {}\n\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\n        const e: KeyboardEvent = event;\n        const key = e.key;\n        if (\n            ['ArrowLeft', 'ArrowRight', 'Tab', 'Backspace', 'Home'].indexOf(\n                key\n            ) !== -1 ||\n            // Allow: Ctrl+A\n            (e.key === 'a' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+C\n            (e.key === 'c' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+V\n            (e.key === 'v' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+X\n            (e.key === 'x' && (e.ctrlKey || e.metaKey))\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        switch (this.restriction) {\n            case 'letters':\n                if (ALLOWED_LETTERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'alphanumeric':\n                if (ALLOWED_ALPHANUMERIC.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'custom':\n                if (this.custom_list.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'decimals':\n                if (ALLOWED_DECIMALS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'number':\n            default:\n                if (ALLOWED_NUMBERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n    /** Number of times to reset the map */\n    @Input() public reset = 0;\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n        if (\n            changes.reset &&\n            changes.reset.currentValue !== changes.reset.previousValue\n        ) {\n            this.zoom = 1;\n            this.center = { x: 0.5, y: 0.5 };\n            this.updateDisplay();\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\nconst RESOURCE_MAP: Record<string, any> = {};\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n    private _last_building: string;\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService,\n    ) {\n        super();\n        const data =\n            sessionStorage.getItem('PLACEOS.mapsindoors.resources') || '{}';\n        const value = JSON.parse(data);\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                RESOURCE_MAP[key] = value[key];\n            }\n        }\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _setResource(id: string, resource: any) {\n        RESOURCE_MAP[id] = resource;\n        this.timeout('set_resource', () => {\n            sessionStorage.setItem(\n                'PLACEOS.mapsindoors.resources',\n                JSON.stringify(RESOURCE_MAP),\n            );\n        });\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options,\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options,\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token,\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        console.log('Resource:', this._services.mapsindoors);\n        this._initialised.next(true);\n        if (this.zone) {\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e),\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e),\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e),\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e),\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100,\n        );\n        (window as any).maps_indoors = this._services;\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public clearDirections() {\n        this._services.directions_renderer.setRoute(null);\n        this.viewing_directions = false;\n    }\n\n    private _last_position: GeolocationPosition;\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this.clearDirections();\n            this._focusOnLocation();\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError(`Unable to find location \"${this.focus}\".`);\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                this._last_position = position;\n                this.setDirectionsFromLocation(\n                    {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    { lat: d_lat, lng: d_lng },\n                );\n            },\n            () => {\n                if (this._last_position) {\n                    this.setDirectionsFromLocation(\n                        {\n                            lat: this._last_position.coords.latitude,\n                            lng: this._last_position.coords.longitude,\n                        },\n                        { lat: d_lat, lng: d_lng },\n                    );\n                } else notifyError('Failed to get your current location.');\n            },\n            options,\n        );\n    }\n\n    public async setDirectionsFromLocation(\n        from: { lat: number; lng: number },\n        to: { lat: number; lng: number },\n    ) {\n        const distance = calculateDistance(to.lat, to.lng, from.lat, from.lng);\n        const routeParameters = {\n            origin: {\n                lat: from.lat,\n                lng: from.lng,\n            },\n            destination: { lat: to.lat, lng: to.lng },\n            travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n        };\n        console.log('Route Parameters:', routeParameters, distance);\n        const result = await this._services.directions\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn',\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                this.loading_directions = false;\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        console.log('Route:', result);\n        this._services.directions_renderer.setRoute(result);\n        this.viewing_directions = true;\n        this.loading_directions = false;\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50,\n                );\n            },\n            100,\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        log('MapsIndoors', 'Floor List:', this._floor_list);\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id,\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n        this._last_building = bld.id;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        log('MapsIndoors', `Registered Actions`, actions);\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private async _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            let resource = RESOURCE_MAP[id];\n            if (!resource) {\n                const id_simple = id.replace(/#/, '');\n                const list = await this._search(id_simple);\n                if (!list.length) continue;\n                resource = list.find(\n                    (_) =>\n                        _.properties?.externalId === id_simple ||\n                        _.properties?.roomId === id_simple ||\n                        _.id === id_simple,\n                );\n                if (resource) this._setResource(id, resource);\n            }\n            if (!resource) continue;\n            const value = {\n                extrusionHeight: 0,\n                extrusionVisible: false,\n                polygonVisible: true,\n                polygonFillColor: styles[id].fill,\n            };\n            this._services.mapsindoors.setDisplayRule(resource.id, value);\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        this.clearDirections();\n        if (!items?.length) {\n            notifyError(`Unable to find location ${this.focus}.`);\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [lng, lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (\n            !this._services ||\n            !this.zone ||\n            this.zone.parent_id === this._last_building ||\n            this.zone.id === this._last_building\n        )\n            return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id,\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            if (!this.focus) {\n                this._services.map.setCenter({\n                    lat: parseFloat(lat),\n                    lng: parseFloat(long),\n                });\n            }\n            this._setFloorFromZone();\n            this._last_building = this.zone.id;\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id ||\n                _.externalId === map_id ||\n                _.id === map_id,\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(period_length: number, show_ms: boolean = false): string {\n        const hours = Math.floor(period_length / 60 / 60);\n        const minutes = Math.floor((period_length / 60) % 60);\n        const seconds = Math.floor(period_length % 60);\n        const milliseconds = Math.floor((period_length * 1000) % 1000);\n        let str = `${padLength(minutes)}:${padLength(seconds)}`;\n        if (show_ms) {\n            str += `.${padLength(milliseconds, 3)}`;\n        }\n        if (hours > 0) str = `${padLength(hours)}:${str}`;\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, take } from 'rxjs/operators';\n\nexport interface TableColumn {\n    key: string;\n    name: string;\n    sortable?: boolean;\n    filterable?: boolean;\n    content?: string | TemplateRef<any> | Component;\n    size?: string;\n    show?: boolean;\n    empty?: string;\n}\n\n@Component({\n    selector: 'simple-table',\n    template: `\n        <div\n            role=\"table\"\n            class=\"grid border border-base-300\"\n            [style.gridTemplateColumns]=\"column_template\"\n            (click)=\"active_row >= 0 ? rowClicked.emit(active_row) : null\"\n            (touchend)=\"active_row = -1\"\n            (mouseleave)=\"active_row = -1\"\n        >\n            <div\n                *ngIf=\"selectable\"\n                id=\"column-selector\"\n                class=\"sticky top-0 flex items-center justify-between px-2 border-r border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"'1 / 2'\"\n            >\n                <mat-checkbox\n                    [checked]=\"selected.length === (data_view$ | async)?.length\"\n                    [indeterminate]=\"\n                        selected.length > 0 &&\n                        selected.length < (data_view$ | async)?.length\n                    \"\n                    (change)=\"selectAll($event.checked)\"\n                ></mat-checkbox>\n            </div>\n            <button\n                header\n                matRipple\n                *ngFor=\"let column of active_columns; let i = index\"\n                [id]=\"'column-' + column.key\"\n                class=\"sticky top-0 flex items-center justify-between p-4 border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"\n                    1 +\n                    i +\n                    (selectable ? 1 : 0) +\n                    ' / ' +\n                    (2 + i + (selectable ? 1 : 0))\n                \"\n                [class.pointer-events-none]=\"\n                    !sortable || column.sortable === false\n                \"\n                (click)=\"setSort(column.key)\"\n                [class.active]=\"sort?.key === column.key\"\n                [class.border-r]=\"i !== active_columns.length - 1\"\n                [class.width]=\"column.size\"\n            >\n                <div class=\"font-medium\">{{ column.name || column.key }}</div>\n                <app-icon\n                    class=\"text-[1.25em]\"\n                    *ngIf=\"sortable && column.sortable !== false\"\n                >\n                    {{\n                        sort?.key === column.key && sort?.reverse\n                            ? 'arrow_upward'\n                            : 'arrow_downward'\n                    }}\n                </app-icon>\n            </button>\n            <ng-container\n                *ngFor=\"\n                    let row of data_view$\n                        | async\n                        | slice\n                            : page * (page_size || 9999)\n                            : (page + 1) * (page_size || 9999);\n                    let i = index\n                \"\n            >\n                <div\n                    *ngIf=\"selectable\"\n                    id=\"column-selector\"\n                    class=\"flex items-center justify-between px-2 border-r border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"'1 / 2'\"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <mat-checkbox\n                        [checked]=\"selected.includes(i)\"\n                        (change)=\"select(i, $event.checked)\"\n                    ></mat-checkbox>\n                </div>\n                <div\n                    *ngFor=\"let column of active_columns; let j = index\"\n                    class=\"flex items-center justify-between border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"\n                        1 +\n                        j +\n                        (selectable ? 1 : 0) +\n                        ' / ' +\n                        (2 + j + (selectable ? 1 : 0))\n                    \"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    [class.border-r]=\"j !== active_columns.length - 1\"\n                    [class.width]=\"column.size\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <ng-container [ngSwitch]=\"columnType(column)\">\n                        <div class=\"p-4\" *ngSwitchDefault>\n                            {{\n                                row[column.key] ||\n                                    (column.key === '_index' ? i + 1 : '')\n                            }}\n                            <span\n                                *ngIf=\"\n                                    (row[column.key] == null ||\n                                        row[column.key] === '') &&\n                                    column.key !== '_index'\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                {{ column.empty || 'N/A' }}\n                            </span>\n                        </div>\n                        <ng-container *ngSwitchCase=\"'template'\">\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    column.content;\n                                    context: {\n                                        first: i === 0,\n                                        last:\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1 ||\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1,\n                                        index: i,\n                                        data: row[column.key],\n                                        row: row,\n                                        key: column.key,\n                                        name: column.name || column.key,\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div\n                    child-node\n                    *ngIf=\"show_children[row.id] && child_template\"\n                    [style.gridColumn]=\"'span ' + active_columns.length\"\n                    class=\"border-b last:border-t last:border-b-0 border-base-200\"\n                >\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            child_template;\n                            context: {\n                                first: i === 0,\n                                last:\n                                    i === (data_view$ | async)?.length - 1 ||\n                                    i === (data_view$ | async)?.length - 1,\n                                index: i,\n                                row: row,\n                            }\n                        \"\n                    ></ng-container>\n                </div>\n            </ng-container>\n            <div\n                *ngIf=\"!(data_view$ | async)?.length\"\n                [style.gridColumnStart]=\"'span ' + active_columns.length\"\n                class=\"flex items-center justify-center p-8 opacity-30\"\n            >\n                {{ empty_message }}\n            </div>\n            <!-- TODO: Add pagination -->\n        </div>\n        <div\n            *ngIf=\"page_size\"\n            class=\"sticky bottom-0 w-full flex items-center justify-end space-x-2 p-2 bg-base-200\"\n        >\n            <div class=\"px-4 py-2\">\n                {{ page * (page_size || 9999) + 1 }} &ndash;\n                {{\n                    (page + 1) * (page_size || 9999) > total_count\n                        ? total_count\n                        : (page + 1) * (page_size || 9999)\n                }}\n                of {{ total_count }}\n            </div>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === 0\"\n                (click)=\"setPage(page - 1)\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(page + 1)\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <button icon matRipple [disabled]=\"page === 0\" (click)=\"setPage(0)\">\n                <app-icon>first_page</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(total_pages - 1)\"\n            >\n                <app-icon>last_page</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            :host > button {\n                min-width: 100%;\n            }\n\n            [header] app-icon {\n                opacity: 0;\n            }\n            [header]:hover app-icon {\n                opacity: 0.3;\n            }\n            [header]:hover.pointer-events-none app-icon {\n                opacity: 0;\n            }\n            [header].active app-icon {\n                opacity: 1;\n            }\n        `,\n    ],\n})\nexport class SimpleTableComponent<T extends {} = any> extends AsyncHandler {\n    @Input() public data: T[] | Observable<T[]>;\n    @Input() public columns: TableColumn[] = [];\n    @Input() public selectable = false;\n    @Input() public filter: string = '';\n    @Input() public sortable = false;\n    @Input() public selected: number[] = [];\n    @Input() public page_size = 0;\n    @Input() public empty_message = 'No data to list';\n    @Input() public child_template: TemplateRef<any> = null;\n    @Input() public show_children: Record<string, boolean> = {};\n    @Output() public selectedChange = new EventEmitter<number[]>();\n    @Output() public rowClicked = new EventEmitter<number>();\n\n    public page = 0;\n    public total_count = 0;\n    public total_pages = 0;\n    public active_row = -1;\n    public active_columns = [];\n\n    private _data$ = new BehaviorSubject<T[]>([]);\n    private _filter$ = new BehaviorSubject<string>('');\n    private _sort$ = new BehaviorSubject<{ key: string; reverse: boolean }>(\n        null,\n    );\n\n    public data_view$?: Observable<T[]> = null;\n\n    public get sort() {\n        return this._sort$.getValue();\n    }\n\n    public get data$(): Observable<T[]> {\n        return this.data instanceof Array ? this._data$ : this.data;\n    }\n\n    public get column_count() {\n        return this.active_columns.length + (this.selectable ? 1 : 0);\n    }\n\n    public get column_template() {\n        const template = this.active_columns\n            .map((_) => _.size || 'auto')\n            .join(' ');\n        return this.selectable ? `3.5rem ${template}` : template;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.filter) {\n            this._filter$.next(this.filter);\n        }\n        if (changes.columns) {\n            this.active_columns = this.columns.filter((_) => _.show !== false);\n        }\n        if (changes.data) {\n            this.data_view$ = combineLatest([\n                this.data$,\n                this._filter$,\n                this._sort$,\n            ]).pipe(\n                debounceTime(300),\n                map(([data, filter, sort]) => {\n                    data = [...data];\n                    if (filter) {\n                        data = data.filter((_) =>\n                            Object.values(_).some((i) =>\n                                JSON.stringify(i)\n                                    ?.toLowerCase()\n                                    .includes((filter || '').toLowerCase()),\n                            ),\n                        );\n                    }\n                    if (sort && data.length) {\n                        const type = typeof data[0][sort.key];\n                        if (type === 'number') {\n                            data = data.sort((a, b) => {\n                                const result = a[sort.key] - b[sort.key];\n                                return sort.reverse ? -result : result;\n                            });\n                        } else {\n                            data = data.sort((a, b) => {\n                                const a_value = JSON.stringify(\n                                    a[sort.key] || '',\n                                );\n                                const b_value = JSON.stringify(\n                                    b[sort.key] || '',\n                                );\n                                const result = a_value.localeCompare(b_value);\n                                return sort.reverse ? -result : result;\n                            });\n                        }\n                    }\n                    this.selected = [];\n                    this.page = 0;\n                    if (this.page_size) {\n                        this.total_count = data.length;\n                        this.total_pages = Math.ceil(\n                            this.total_count / this.page_size,\n                        );\n                    }\n                    return data;\n                }),\n                shareReplay(1),\n            );\n        }\n    }\n\n    public columnType(column: TableColumn) {\n        return column.content instanceof TemplateRef ? 'template' : 'raw';\n    }\n\n    public gridSquare(row: number, column: number) {\n        return `${row} / ${column} / ${row + 1} / ${column + 1}`;\n    }\n\n    public select(index: number, state: boolean) {\n        if (state) this.selected.push(index);\n        else this.selected = this.selected.filter((i) => i !== index);\n    }\n\n    public async selectAll(state: boolean) {\n        const list = await this.data_view$.pipe(take(1)).toPromise();\n        if (state) this.selected = list.map((_, i) => i);\n        else this.selected = [];\n    }\n\n    public setSort(key: string) {\n        const sort = this._sort$.getValue();\n        if (!sort || sort.key !== key) {\n            this._sort$.next({ key, reverse: false });\n        } else if (!sort.reverse) {\n            this._sort$.next({ key, reverse: true });\n        } else {\n            this._sort$.next(null);\n        }\n    }\n\n    public setPage(page: number) {\n        this.timeout('set_page', () => (this.page = page), 100);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img auth class=\"h-full w-full\" [source]=\"user.photo\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\nimport { first } from 'rxjs/operators';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                *ngIf=\"features.includes('wfh')\"\n                customTooltip\n                [content]=\"work_location_tooltip\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length || !desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"desk_height_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n                *ngIf=\"desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>desk</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Desk Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <ng-template #desk_height_tooltip>\n                <desk-height-presets></desk-height-presets>\n            </ng-template>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n    public readonly work_location_tooltip = WorkLocationTooltipComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get desk_height() {\n        return this._settings.get('app.desks.height_enabled');\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank',\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md',\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n\n    public saveSetting(name: string, value: any) {\n        console.log('Save setting', name, value);\n        this._settings.saveUserSetting(name, value);\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.keyset) {\n            if (!this.keyset) this.keyset = DEFAULT_KEYS;\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser } from '@placeos/common';\nimport { updateUser } from '@placeos/ts-client';\nimport { WorktimePreference } from '@placeos/users';\nimport { format, set, startOfMinute } from 'date-fns';\n\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\n\n@Component({\n    selector: 'work-location-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center justify-between px-2 pt-2\">\n                <h3 class=\"px-2 font-medium\">Work Location</h3>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Work Location Preferences\"\n                    class=\"bg-base-200\"\n                    (click)=\"editSettings()\"\n                >\n                    <app-icon>settings</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"pb-2\"\n                *ngIf=\"active_preference?.blocks?.length; else empty_state\"\n            >\n                <div\n                    class=\"relative flex items-center px-4 py-2 space-x-2\"\n                    *ngFor=\"\n                        let block of active_preference?.blocks;\n                        let i = index\n                    \"\n                    [class.opacity-30]=\"now > timeFrom(block.end_time)\"\n                >\n                    <div\n                        class=\"rounded-full h-10 w-10 flex items-center justify-center bg-base-200 z-20\"\n                        [class.bg-base-200]=\"\n                            now < timeFrom(block.start_time) ||\n                            now > timeFrom(block.end_time)\n                        \"\n                        [class.bg-info]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                        [class.text-info-content]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                    >\n                        <app-icon class=\"text-2xl\">{{\n                            location_icon(timeFrom(block.start_time))\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 ml-2\">\n                        <button class=\"font-medium flex items-center space-x-2\">\n                            <div>\n                                {{ location(timeFrom(block.start_time)) }}\n                            </div>\n                            <app-icon>expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button\n                                mat-menu-item\n                                *ngFor=\"let loc of locations\"\n                                (click)=\"setLocation(i, loc.id)\"\n                            >\n                                {{ loc.name }}\n                            </button>\n                        </mat-menu>\n                        <div class=\"text-xs opacity-60\">\n                            {{ timeFrom(block.start_time) | date: 'shortTime' }}\n                            &ndash;\n                            {{ timeFrom(block.end_time) | date: 'shortTime' }}\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"i > 0\"\n                        class=\"absolute -top-2 left-7 h-4 w-0 border-l-2 border-dashed border-base-200 -translate-x-px\"\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-2 w-full opacity-30\"\n            >\n                <app-icon class=\"text-6xl\">event_busy</app-icon>\n                <p class=\"text-center text-sm\">No work location for today.</p>\n                <p class=\"text-center text-sm\">\n                    Click the cog to edit your work location preferences.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WorkLocationTooltipComponent {\n    public readonly locations = [\n        { id: 'wfo', name: 'Office' },\n        { id: 'wfh', name: 'Home' },\n        { id: 'aol', name: 'Leave' },\n    ];\n    public settings: WorktimePreference[];\n    public overrides: Record<string, WorktimePreference>;\n\n    public get active_preference() {\n        const date = format(new Date(), 'yyyy-MM-dd');\n        if (this.overrides[date]) return this.overrides[date];\n        return this.settings.find(\n            (pref) => pref.day_of_week === new Date().getDay(),\n        );\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.overrides = user.work_overrides;\n    }\n\n    public location_icon(time: number) {\n        const user = currentUser();\n        return user.location_icon(time + 1 * 60 * 1000);\n    }\n\n    public location(time: number) {\n        const user = currentUser();\n        return user.location_name_time(time + 1 * 60 * 1000);\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(new Date(), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n                seconds: 0,\n                milliseconds: 0,\n            }),\n        ).getTime();\n    }\n\n    public editSettings() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async setLocation(index: number, location: string) {\n        const user = currentUser();\n        const active_preference = this.active_preference;\n        await updateUser(user.id, {\n            ...user,\n            work_overrides: {\n                ...user.work_overrides,\n                [format(new Date(), 'yyyy-MM-dd')]: {\n                    ...active_preference,\n                    blocks: [\n                        ...active_preference.blocks.slice(0, index),\n                        {\n                            ...active_preference.blocks[index],\n                            location,\n                        },\n                        ...active_preference.blocks.slice(index + 1),\n                    ],\n                },\n            },\n        } as any).toPromise();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PlaceZone, showZone } from '@placeos/ts-client';\n\nconst ZONE_LIST: Record<string, PlaceZone> = {};\nconst EMPTY_ZONE = new PlaceZone();\n\n@Pipe({\n    name: 'zone',\n})\nexport class ZonePipe implements PipeTransform {\n    public async transform(id: string): Promise<PlaceZone> {\n        if (ZONE_LIST[id]) return ZONE_LIST[id];\n        const zone = await showZone(id)\n            .toPromise()\n            .catch((_) => null);\n        if (!zone) return EMPTY_ZONE;\n        ZONE_LIST[id] = zone;\n        return zone;\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\nexport * from './lib/group-event-details-modal.component';\nexport * from './lib/group-event-card.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                              ? 'Attendee'\n                              : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <ng-container *ngFor=\"let user of list\">\n                    <div\n                        attendee\n                        class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                        *ngIf=\"\n                            !user.resource && (host !== user.email || show_host)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div class=\"flex-1 w-1/2\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div\n                                class=\"opacity-60 text-sm\"\n                                *ngIf=\"host === user.email\"\n                            >\n                                Host\n                            </div>\n                        </div>\n                        <div class=\"p-2\">\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [class.bg-success]=\"user.checked_in\"\n                                [class.bg-pending]=\"!user.checked_in\"\n                                [matTooltip]=\"\n                                    user.checked_in\n                                        ? 'Checked in'\n                                        : 'Not checked in'\n                                \"\n                            ></div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public show_host = true;\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email,\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            if (this.event.extension_data?.shared_event) {\n                this._dialog.open(GroupEventDetailsModalComponent, {\n                    data: { event: this.event, concierge: false },\n                });\n                return;\n            }\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_),\n                ),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon class=\"text-2xl\">{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"pr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request',\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0,\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0,\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0,\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email,\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id),\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id,\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _changed = new BehaviorSubject<number>(0);\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}'),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get options_value() {\n        return this._options.getValue();\n    }\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'room_booking_rules').toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_region.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.region?.id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([]))),\n                ),\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features)))),\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces',\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_),\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length)),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings',\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i)),\n                            ),\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                }),\n            );\n        }),\n        shareReplay(1),\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n        this._changed,\n    ]).pipe(\n        debounceTime(300),\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || [],\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    let booking_list = bookings[idx] || [];\n                    if (this.last_success?.system?.id === _.id) {\n                        booking_list = [...booking_list, this.last_success];\n                    }\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        booking_list.filter((_) => _.ical_uid !== ical_uid),\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || [],\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration],\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || [],\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => []),\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1),\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            }),\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        }),\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email,\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000,\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event }),\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}',\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id],\n                        ) || [],\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : '',\n        );\n    }\n\n    public postForm(\n        force: boolean = false,\n        ignore_space_check: string[] = [],\n        ignore_owner: boolean = false,\n    ) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form,\n                    ).join(', ')}]`,\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            let spaces = form.get('resources')?.value || [];\n            if (ignore_space_check.length) {\n                spaces = spaces.filter(\n                    (_) =>\n                        !ignore_space_check.includes(_.email) &&\n                        !ignore_space_check.includes(_.id),\n                );\n            }\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id),\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || '',\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            spaces = form.get('resources')?.value || [];\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource'),\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email',\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner && !ignore_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`,\n                    );\n                    if (overflow?.setup) {\n                        setup = Math.max(setup, overflow.setup);\n                    }\n                    if (overflow?.breakdown) {\n                        breakdown = Math.max(breakdown, overflow.breakdown);\n                    }\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n                (value as any).setup_time = value.setup_time || setup;\n                (value as any).breakdown_time =\n                    value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON(),\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query,\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected,\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {},\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time',\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`,\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any,\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: unique([\n                            this._org.organisation.id,\n                            this._org.region?.id,\n                            this._org.building?.id,\n                            ...spaces[0]?.zones,\n                        ]).filter((_) => !!_),\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times,\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result),\n            );\n            this.setView('success');\n            this.timeout('post_finshed', () => this._changed.next(Date.now()));\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>,\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any),\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string,\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration],\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore,\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`,\n                ),\n            ]),\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get images() {\n        return this.extension_data.images || [];\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get view_access() {\n        return this.extension_data.view_access || 'PRIVATE';\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    }),\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30),\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            (data as any).host_email ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email',\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1,\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host,\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000,\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000,\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_),\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                  ? 'external'\n                  : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any),\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.images =\n            this.extension_data.images || data.images || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any),\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end,\n        );\n    }\n\n    private _valid_asset_cache = [];\n    private _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email',\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null }),\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        obj.system_id = this.system?.id;\n        for (const key of [\n            'catering',\n            'date',\n            'date_end',\n            'duration',\n            'status',\n            'linked_bookings',\n            '_valid_asset_cache',\n            '_valid_cache_expiry',\n            'type',\n        ]) {\n            if (key in obj) delete obj[key];\n        }\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([])),\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item)),\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch',\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON(),\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams,\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {},\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function addEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/attendee${query ? '?' + query : ''}`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function removeEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}${query ? '?' + query : ''}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0],\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id,\n                    ),\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration,\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        }),\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\nimport { setDefaultCreator } from './event.class';\nimport { currentUser, current_user } from 'libs/common/src/lib/user-state';\nimport { first } from 'rxjs/operators';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        SharedSpacesModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {\n    public async ngOnInit() {\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        setDefaultCreator(currentUser());\n    }\n}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { CalendarEvent } from './event.class';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition:\n                    box-shadow 300ms,\n                    border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { CalendarEvent } from './event.class';\nimport {\n    addEventGuest,\n    checkinEventGuest,\n    removeEventGuest,\n} from './events.fn';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.extension_data?.images?.length\"\n                    auth\n                    [source]=\"event.extension_data?.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ event.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"event.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            Event by\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ event.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ event.date | date: time_format }} -\n                                {{\n                                    event.date + event.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ event.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            event-details\n                            [innerHTML]=\"body | sanitize\"\n                        ></span>\n                        <span\n                            *ngIf=\"!raw_description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\"p-4 space-y-2\">\n                                <div *ngIf=\"is_onsite && has_space\">\n                                    {{\n                                        (system_id | space | async)\n                                            ?.display_name\n                                    }}\n                                </div>\n                                <div\n                                    *ngIf=\"is_onsite && !has_space\"\n                                    class=\"opacity-30\"\n                                >\n                                    Room to be confirmed\n                                </div>\n                                <div class=\"opacity-30 text-sm !mt-0\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                                <a\n                                    *ngIf=\"is_online\"\n                                    class=\"opacity-30 mt-4\"\n                                    [class.underline]=\"event.meeting_url\"\n                                    [href]=\"event.meeting_url\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {{\n                                        is_onsite\n                                            ? 'Can be attended online'\n                                            : 'Remote Event'\n                                    }}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [show_host]=\"false\"\n                    [list]=\"event.attendees\"\n                    [host]=\"event.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public event: CalendarEvent = this._data.event;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n    public raw_description = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.event as any).featured || this.event.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.event.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get body() {\n        if (this.is_online) return this.event.body;\n        let body = this.event.body;\n        const remove_blocks = [\n            `<div style=\"margin-bottom:24px; overflow:hidden; white-space:nowrap\">________________________________________________________________________________</div>`,\n            `<p>________________________________________________________________________________</p>`,\n        ];\n        for (const block of remove_blocks) {\n            const first = body.indexOf(block);\n            const last = body.lastIndexOf(block);\n            body = body.substring(0, first) + body.substring(last);\n        }\n        for (const block of remove_blocks) {\n            body = body.replace(block, '');\n        }\n        return body;\n    }\n\n    public get attendance() {\n        return (\n            this.event.attendees?.filter((_: any) => _.checked_in)?.length || 0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.space?.id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.event.attendees?.find((_) => _.email === user.email);\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { event: CalendarEvent; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        const map_id = (this.event.extension_data as any)?.map_id;\n        const id = this.space?.map_id || map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        const zones = (this.space?.zones as any) || [];\n        this.level = this._org.levelWithID(zones);\n        this.building =\n            this._org.buildings.find((_) => zones.includes(_.id)) ||\n            this._org.building;\n        this.locate = map_id || '';\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return (doc.body.textContent || '').trim();\n    }\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        if (this.is_interested && user) {\n            await removeEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = (this.event.attendees || []).filter(\n                (_: any) => _.email !== user.email,\n            );\n        } else {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinEventGuest(this.event.id, user.email, !this.is_going, {\n            system_id: this.event.system?.id,\n        }).toPromise();\n        const guest = this.event.attendees.find((_) => _.email === user.email);\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>,\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n            ical_uid: this._event?.ical_uid,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query,\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    LOCAL_TIMEZONE,\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { time } from 'console';\nimport { share } from 'rxjs/operators';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService,\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required],\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' }),\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || '',\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || '',\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false,\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n        attendance_type: new FormControl(\n            event.extension_data?.attendance_type || 'ONSITE',\n        ),\n        timezone: new FormControl(event.timezone || LOCAL_TIMEZONE),\n        shared_event: new FormControl(\n            event.extension_data?.shared_event || false,\n        ),\n        view_access: new FormControl(\n            event.extension_data?.view_access || 'PRIVATE',\n        ),\n        images: new FormControl(event.extension_data?.images || []),\n        featured: new FormControl(event.extension_data?.featured || false),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email),\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false },\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date()),\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end,\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n              ? requestable\n                  ? 'Available by Request'\n                  : 'Available'\n              : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n              ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n              : free_tomorrow\n                ? 'Unavailable today'\n                : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number },\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources?.find(\n                (space) => space.email === filter_options.space,\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            }),\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('parking_poll', this._parking.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ParkingSpace } from 'libs/bookings/src/lib/parking.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\ninterface ParkingSpaceExtended extends ParkingSpace {\n    user: string;\n    status: string;\n    plate_number: string;\n}\n\n@Component({\n    selector: 'explore-parking-info',\n    template: `\n        <div\n            class=\"absolute bg-base-300 p-2 rounded-lg !rounded-tl-none shadow top-1/2 left-1/2 text-left\"\n            [class.!bg-error]=\"status === 'busy'\"\n            [class.!text-error-content]=\"status === 'busy'\"\n            [class.!bg-warning]=\"status === 'reserved'\"\n            [class.!text-warning-content]=\"status === 'reserved'\"\n            [class.!bg-success]=\"status === 'free'\"\n            [class.!text-success-content]=\"status === 'free'\"\n        >\n            <div class=\"absolute top-0.5 left-0.5 triangle\"></div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col leading-tight min-w-24 pl-1\">\n                    <div class=\"whitespace-nowrap\">{{ name }}</div>\n                    <div class=\"capitalize text-sm font-medium\">\n                        {{ status }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col relative h-full px-2 rounded bg-base-100 text-base-content shadow leading-tight\"\n                    *ngIf=\"is_concierge && plate_number\"\n                >\n                    <div\n                        class=\"text-[0.625rem] w-full text-center pt-1 whitespace-nowrap font-medium\"\n                    >\n                        Plate Number\n                    </div>\n                    <div class=\"font-mono pb-1 w-full text-center uppercase\">\n                        {{ plate_number || 'ABC3' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .triangle {\n                width: 0px;\n                height: 0px;\n                border-style: solid;\n                border-width: 0.5rem 0.5rem 0 0;\n                border-color: currentColor transparent transparent transparent;\n                transform: rotate(0deg);\n            }\n        `,\n    ],\n})\nexport class ExploreParkingInfoComponent {\n    public readonly status =\n        this._data.assigned_to === this._data.user && this._data.user\n            ? 'reserved'\n            : this._data.status;\n    public readonly user = this._data.user;\n    public readonly name = this._data.name;\n    public readonly map_id = this._data.map_id;\n    public readonly plate_number = this._data.plate_number;\n\n    public get is_concierge() {\n        return this._settings.app_name.toLowerCase().includes('concierge');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _data: ParkingSpaceExtended,\n        private _element: ElementRef<HTMLDivElement>,\n        private _settings: SettingsService,\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\nimport { PlaceZone, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ParkingService } from 'libs/bookings/src/lib/parking.service';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n    zone?: PlaceZone;\n    groups?: string[];\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n    public on_book: (ParkingSpace) => Promise<void> = null;\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking'))),\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now()),\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now()),\n                      ),\n                      type: 'parking',\n                      zones: this._settings.get('app.use_region')\n                          ? bld?.parent_id\n                          : bld?.id,\n                      rejected: false,\n                  }),\n        ),\n        shareReplay(1),\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly user_events = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            }),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id }),\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1),\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id)),\n    );\n\n    private _users: Record<string, string> = {};\n    private _plate_numbers: Record<string, string> = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n        this._parking.users,\n    ]).pipe(\n        map(([events, spaces, users]) => {\n            const available = spaces.filter((_) => {\n                const event = events.find((e) => e.asset_id === _.id);\n                const assigned = `${\n                    event?.user_email || _.assigned_to || ''\n                }`.toLowerCase();\n                const user = users.find(\n                    (u) => u.email.toLowerCase() === assigned.toLowerCase(),\n                );\n                this._users[_.id] = assigned;\n                this._plate_numbers[_.id] =\n                    event?.extension_data?.plate_number ||\n                    user?.plate_number ||\n                    undefined;\n                return !assigned;\n            });\n            this._updateParkingSpaces(spaces, available);\n            return available;\n        }),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _parking: ParkingService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this.subscription('spaces', this.available_spaces.subscribe());\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n    }\n\n    public startPolling() {\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n        this._poll.next(Date.now());\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private async _updateParkingSpaces(\n        spaces: ParkingSpace[],\n        available: ParkingSpace[],\n    ) {\n        const styles = {};\n        const features = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        let options = this._options.getValue();\n        const assigned_space = await this._parking.assigned_space\n            .pipe(take(1))\n            .toPromise();\n        const deny_parking_access = await this._parking.deny_parking_access\n            .pipe(take(1))\n            .toPromise();\n        const booked_space = await this._parking.booked_space\n            .pipe(take(1))\n            .toPromise();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const assigned_space = !!space.assigned_to;\n            const status = can_book\n                ? 'free'\n                : assigned_space\n                  ? 'pending'\n                  : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                location: `${space.map_id}`,\n                content: ExploreParkingInfoComponent,\n                z_index: 20,\n                hover: true,\n                data: {\n                    ...space,\n                    user: this._users[space.id],\n                    plate_number: this._plate_numbers[space.id],\n                    status:\n                        status === 'pending' && assigned_space\n                            ? 'reserved'\n                            : status,\n                },\n            });\n            if (!can_book) continue;\n            const book_fn = async () => {\n                if (this.on_book) {\n                    await this.on_book(space);\n                    this._poll.next(Date.now());\n                    return;\n                }\n                if (deny_parking_access) {\n                    return notifyError(\n                        `Your user account has been denied parking access to ${\n                            space.zone?.display_name || space.zone?.name\n                        }.`,\n                    );\n                }\n                if (assigned_space) {\n                    return notifyError(\n                        `You are already assigned to parking space \"${\n                            space.name || space.id\n                        }\".`,\n                    );\n                }\n                if (booked_space?.find((_) => _.id === space.id)) {\n                    return notifyError(\n                        `You already have a parking space booked for the selected time.`,\n                    );\n                }\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`,\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`,\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                options = this._options.getValue();\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any,\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    if (e === 'User cancelled') throw e;\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`,\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`,\n                );\n                this._poll.next(Date.now());\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : [],\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setFeatures('parking', features);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null,\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90,\n                ),\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setFilter($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (focus)=\"cancelClear()\"\n                (blur)=\"clear()\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0 : 5\"\n                    [value]=\"option.name\"\n                    (click)=\"select(option)\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public clear() {\n        this.timeout('clear', () => {\n            this.show = false;\n            this.search_str = '';\n            this.setFilter('');\n        });\n    }\n\n    public cancelClear() {\n        this.clearTimeout('clear');\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300,\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        console.log('Selected Item:', item);\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                  ? 'locate'\n                  : 'user';\n        query[type] = item.id;\n        if (type === 'locate') {\n            query.name = item.name;\n            query.zone = item.zone;\n        }\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n        this.focusInput();\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n    can_search?: boolean;\n}\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n    /** ID of the zone that the item is located */\n    zone?: string;\n}\n\nconst TYPES = ['space', 'contact', 'feature', 'user'];\n\nfunction typeIndex(item: SearchResult): number {\n    return TYPES.indexOf(item.is_role ? 'contact' : item.type);\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1),\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[])),\n                  )\n                : of([] as StaffUser[]),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any,\n                                          ),\n                                      } as any),\n                              ),\n                      ),\n                  )\n                : of([]),\n        ),\n        catchError(() => []),\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([]),\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    }) as SearchResult,\n            );\n        }),\n        shareReplay(1),\n    );\n\n    private _map_features: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'map_features',\n                }).pipe(catchError(() => of({ details: [] }))),\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.map_features;\n                    if (!metadata) continue;\n                    const feature_list =\n                        metadata.details instanceof Array\n                            ? metadata.details\n                            : [];\n                    for (const feature of feature_list) {\n                        list.push({\n                            id: feature.id,\n                            type: 'feature',\n                            name: feature.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            }),\n        );\n\n    private _poi_metadata = this._org.initialised.pipe(\n        filter((_) => _),\n        switchMap(() =>\n            showMetadata(this._org.organisation.id, 'points-of-interest').pipe(\n                catchError((_) => of({ details: {} })),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    private _poi_list = combineLatest([\n        this._org.active_building,\n        this._poi_metadata,\n    ]).pipe(\n        filter(([bld]) => !!bld.id),\n        map(([bld, metadata]) => {\n            const mapping = metadata.details || {};\n            const levels = this._org.levelsForBuilding(bld);\n            const list: PointOfInterest[] = flatten(\n                levels.map((lvl) => mapping[lvl.id] || []),\n            );\n            return list.filter((_) => _.can_search);\n        }),\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._poi_list.pipe(\n            map((poi_list) => {\n                return poi_list.map(\n                    (item) =>\n                        ({\n                            id: item.id || item.location,\n                            type: 'feature',\n                            name: item.name,\n                            description: '',\n                            zone: item.level_id,\n                        }) as SearchResult,\n                );\n            }),\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._map_features,\n        this._maps_people_search,\n        this._points_of_interest,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n                points_of_interest,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search),\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    }) as any,\n                            ),\n                        ),\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search),\n                    ),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                    ...points_of_interest.filter((_) =>\n                        _.name.toLowerCase().includes(search),\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                }) as any,\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search),\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ];\n                results.sort(\n                    (a, b) =>\n                        typeIndex(a) - typeIndex(b) ||\n                        a.name.localeCompare(b.name),\n                );\n                return results;\n            },\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data),\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService,\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices',\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`,\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`,\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ]),\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l)),\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise(),\n            ),\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                  ? 'free'\n                  : filled < 0.75\n                    ? 'pending'\n                    : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        },\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base space-x-2 p-2\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                decrease\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-error text-error rounded h-10 w-10\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div\n                value\n                class=\"relative p-1 flex items-center justify-center w-16 h-10 rounded border border-base-300\"\n            >\n                <span *ngIf=\"!focused\">\n                    {{ (render_fn ? render_fn(value) : value) || '0' }}\n                </span>\n                <input\n                    type=\"text\"\n                    class=\"absolute inset-0 opacity-0 focus:opacity-100 p-2\"\n                    [(ngModel)]=\"value\"\n                    (focus)=\"focused = true\"\n                    (blur)=\"setValue(+value); focused = false\"\n                    limitInput\n                />\n            </div>\n            <button\n                increase\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-success text-success rounded h-10 w-10\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 999;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n    public focused = false;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        if (new_value < this.min) new_value = this.min;\n        if (new_value > this.max) new_value = this.max;\n        if ((new_value / this.step) % 1 !== 0) {\n            new_value =\n                Math.round(new_value * (1 / this.step)) / (1 / this.step);\n        }\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                @if (date) {\n                    {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n                } @else {\n                    <span class=\"opacity-30\">No Date Selected</span>\n                }\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number;\n\n    public readonly now = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: string[]) {\n        this.list = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new StaffUser();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            console.log('Place User:', user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert(value);\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        console.log('TimeFieldComponent:', changes);\n        if (changes.no_past_times || changes.step || changes.from) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step,\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm'),\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`),\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] }),\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step,\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    }),\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15,\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step as any });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n            <input\n                #input\n                matInput\n                keyboard\n                name=\"user-search\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event || '')\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"placeholder || 'Search for user...'\"\n                [matAutocomplete]=\"auto\"\n                (keyup.enter)=\"\n                    validate && validate(search_str) ? setValue(search_str) : ''\n                \"\n                (blur)=\"resetSearchString()\"\n                (focus)=\"cancelReset()\"\n            />\n            <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n            <mat-spinner *ngIf=\"loading\" matSuffix diameter=\"16\"></mat-spinner>\n        </mat-form-field>\n        <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            (optionSelected)=\"setValue($event.option.value)\"\n        >\n            <mat-option\n                *ngFor=\"let option of user_list\"\n                (click)=\"setValue(option); blurInput()\"\n            >\n                <div class=\"leading-tight\">{{ option.name }}</div>\n                <div class=\"text-xs opacity-60\">\n                    {{ option.email }}\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"search_str && validate && validate(search_str)\"\n                class=\"relative pointer-events-none\"\n            >\n                <div\n                    class=\"absolute inset-0 px-4 pointer-events-auto\"\n                    (mousedown)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (touchstart)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (click)=\"\n                        setValue(search_str);\n                        $event.stopPropagation();\n                        $event.preventDefault()\n                    \"\n                >\n                    <div class=\"pointer-events-none\" i18n>\n                        Add external attendee \"{{ search_str }}\"\n                    </div>\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"!user_list?.length && (search_str || error)\"\n                [disabled]=\"!empty_fn\"\n                (click)=\"empty_fn()\"\n            >\n                {{ search_str ? 'No users found.' : '' }} {{ error }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { getUnixTime, subMinutes } from 'date-fns';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: getUnixTime(Date.now()),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isFixedDevice,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n} from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { AsyncHandler, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings,\n        ),\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay(1),\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id || this.buildings[0]?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id,\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(\n        private _service: SettingsService,\n        private _router: Router,\n    ) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(\n                filter(([_, bld]) => !!bld),\n                debounceTime(300),\n            )\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id,\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    /**\n     * Get list of levels for the given region\n     * @param region Region to list levels for\n     */\n    public levelsForRegion(region: Region = this.region): BuildingLevel[] {\n        const bld_list = this.buildingsForRegion(region);\n        return this.levels.filter(\n            (lvl) =>\n                lvl.parent_id &&\n                bld_list.find((bld) => bld.id === lvl.parent_id),\n        );\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone,\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([])),\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id'),\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id,\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        catchError(() => of({ data: {} as any })),\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None,\n                                    ) || { settings_string: '' },\n                                );\n                            } catch {\n                                return {};\n                            }\n                        }),\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || ''),\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2),\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2),\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id),\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id,\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        setTimeout(\n            () =>\n                (this._service.overrides = [\n                    this.buildingSettings(this.building?.id),\n                    this.regionSettings(this.region?.id),\n                    ...this._settings,\n                ]),\n            300,\n        );\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Address of the region */\n    public readonly address: string;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n        this.address = _data.address || '';\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                    [viewing_map]=\"view === 'map'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport {\n    flatten,\n    MapsPeopleService,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                favs\n                class=\"space-y-2 pb-4\"\n                *ngIf=\"!viewing_map || !(using_mapspeople | async)\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"\n                    (features | async)?.length &&\n                    (!viewing_map || !(using_mapspeople | async))\n                \"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    @Input() public viewing_map: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly regions = this._org.region_list;\n\n    public readonly using_mapspeople = this._mapspeople.available$;\n\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _mapspeople: MapsPeopleService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            })),\n        ),\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            })),\n        ),\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {}),\n        ),\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this._event_form.options.subscribe(({ zone_ids }) => {\n                const level = this._org.levelWithID(zone_ids);\n                if (level) this.level = level;\n            }),\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string): Observable<Space[]> {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({\n        q,\n        fields: [\n            'id',\n            'name',\n            'email',\n            'username',\n            'organisation',\n            'department',\n        ].join(','),\n    });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n              ? 'declined'\n              : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    blocks: WorktimeBlock[];\n}\n\nexport interface WorktimeBlock {\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public work_preference(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        if (this.work_overrides[date_string]?.blocks?.length) {\n            for (const block of this.work_overrides[date_string].blocks) {\n                const start = block.start_time;\n                const end = block.end_time;\n                if (\n                    start <= date.getHours() + date.getMinutes() / 60 &&\n                    end >= date.getHours() + date.getMinutes() / 60\n                ) {\n                    return block;\n                }\n            }\n        }\n        for (const pref of this.work_preferences) {\n            if (pref.day_of_week === day && pref.blocks?.length) {\n                for (const block of pref.blocks) {\n                    if (\n                        block.start_time <=\n                            date.getHours() + date.getMinutes() / 60 &&\n                        block.end_time >=\n                            date.getHours() + date.getMinutes() / 60\n                    ) {\n                        return block;\n                    }\n                }\n            }\n        }\n    }\n\n    public location_time(datetime: number) {\n        return this.work_preference(datetime)?.location || 'wfo';\n    }\n\n    public get location_name() {\n        return this.location_name_time(Date.now());\n    }\n\n    public location_name_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number) {\n        const block = this.work_preference(datetime);\n        return !!block;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, notifyError, reloadUserData } from '@placeos/common';\nimport { addDays, format, set, startOfMinute, startOfWeek } from 'date-fns';\nimport { WorktimeBlock, WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <header class=\"relative flex items-center justify-between\">\n            <h2 class=\"font-medium text-xl\">Working Location Settings</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"bg-base-200\"\n                *ngIf=\"!loading\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"relative flex flex-col rounded w-[40rem] max-w-full p-4 space-y-2 max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <h3>Working Days</h3>\n            <div\n                class=\"flex items-center justify-between w-full pb-4 space-x-2\"\n            >\n                <mat-checkbox\n                    *ngFor=\"let day of days\"\n                    [(ngModel)]=\"weekdays_enabled[day.getDay()]\"\n                    (ngModelChange)=\"$event && initialiseDay(day.getDay())\"\n                >\n                    {{ day | date: 'EEE' }}\n                </mat-checkbox>\n            </div>\n            <h3>Work Hours</h3>\n            <ng-container *ngIf=\"has_working_days; else empty_state\">\n                <ng-container *ngFor=\"let day of days\">\n                    <ng-container *ngIf=\"weekdays_enabled[day.getDay()]\">\n                        <div\n                            class=\"flex w-full space-x-2 hover:bg-base-200 rounded px-2 pt-1\"\n                        >\n                            <label class=\"w-12 min-w-0 px-2 pt-3\">\n                                {{ day | date: 'EEE' }}\n                            </label>\n                            <div class=\"flex-1 w-1/2\">\n                                <div\n                                    class=\"flex items-center space-x-2\"\n                                    *ngFor=\"\n                                        let block of settings[day.getDay()]\n                                            .blocks;\n                                        let i = index\n                                    \"\n                                >\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.start_time)\"\n                                        (ngModelChange)=\"\n                                            setStartTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(\n                                                (i > 0\n                                                    ? settings[day.getDay()]\n                                                          .blocks[i - 1]\n                                                          ?.end_time\n                                                    : 0) || 0\n                                            )\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.end_time)\"\n                                        (ngModelChange)=\"\n                                            setEndTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(block.start_time + 0.25)\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <mat-form-field\n                                        appearance=\"outline\"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    >\n                                        <mat-select\n                                            [(ngModel)]=\"block.location\"\n                                        >\n                                            <mat-option\n                                                *ngFor=\"let type of options\"\n                                                [value]=\"type.id\"\n                                            >\n                                                {{ type.name }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [disabled]=\"\n                                            settings[day.getDay()].blocks\n                                                .length > 2\n                                        \"\n                                        (click)=\"\n                                            addBlock(settings[day.getDay()], i)\n                                        \"\n                                    >\n                                        <app-icon>add</app-icon>\n                                    </button>\n                                    <button\n                                        icon\n                                        matRipple\n                                        class=\"text-error\"\n                                        [class.opacity-0]=\"i === 0\"\n                                        (click)=\"\n                                            removeBlock(\n                                                settings[day.getDay()],\n                                                i\n                                            )\n                                        \"\n                                    >\n                                        <app-icon>delete</app-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n            <ng-template #empty_state>\n                <div\n                    class=\"flex flex-col items-center justify-center px-8 py-16 space-y-4\"\n                >\n                    <img src=\"assets/icons/no-results.svg\" class=\"m-auto\" />\n                    <p class=\"opacity-30\">\n                        No work days are currently set for this user\n                    </p>\n                </div>\n            </ng-template>\n        </main>\n        <footer\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">\n                    Saving changes to work location settings...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Office' },\n        { id: 'wfh', name: 'Home' },\n        { id: 'aol', name: 'Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays_enabled: Record<number, boolean> = {};\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n\n    public get has_working_days() {\n        return Object.keys(this.weekdays_enabled).some(\n            (day) => this.weekdays_enabled[day],\n        );\n    }\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>,\n        private _cdr: ChangeDetectorRef,\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = [\n            ...(user.work_preferences || []).map((_) => ({\n                ..._,\n                blocks: [...(_?.blocks || [])],\n            })),\n        ];\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(addDays(new Date(), 1), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n            }),\n        ).getTime();\n    }\n\n    public fromTime(time: number) {\n        const date = new Date(time);\n        return date.getHours() + date.getMinutes() / 60;\n    }\n\n    public initialiseDay(day: number) {\n        if (!this.settings[day])\n            this.settings[day] = { day_of_week: day as any, blocks: [] };\n        if (!this.settings[day].blocks) this.settings[day].blocks = [];\n        if (this.settings[day].blocks.length === 0) {\n            this.addBlock(this.settings[day], 0);\n        }\n    }\n\n    public addBlock(pref: WorktimePreference, index: number) {\n        pref.blocks.splice(index + 1, 0, {\n            start_time: 9,\n            end_time: 17,\n            location: 'wfo',\n        });\n        this.cleanupBlocks(pref);\n    }\n\n    public removeBlock(pref: WorktimePreference, index: number) {\n        pref.blocks.splice(index, 1);\n    }\n\n    public setEndTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.end_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public setStartTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.start_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public cleanupBlocks(pref: WorktimePreference) {\n        if (!pref?.blocks?.length) return;\n        for (let i = 0; i < pref.blocks.length; i++) {\n            const block = pref.blocks[i];\n            if (i > 0) {\n                if (block.start_time < pref.blocks[i - 1].end_time) {\n                    block.start_time = pref.blocks[i - 1].end_time;\n                }\n            }\n            if (block.end_time <= block.start_time) {\n                block.end_time = block.start_time + 1;\n            }\n        }\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const user = await showUser('current').toPromise();\n        const new_settings = {};\n        for (const day of this.days) {\n            const day_of_week = day.getDay();\n            if (this.weekdays_enabled[day_of_week]) {\n                new_settings[day_of_week] = {\n                    day_of_week: day_of_week,\n                    blocks: this.settings[day_of_week].blocks,\n                };\n            }\n        }\n        await updateUser(user.id, {\n            ...user,\n            work_preferences: new_settings,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError('Unable to save user work preferences.');\n                throw e;\n            });\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            reloadUserData();\n            this._dialog_ref.close();\n        }\n    }\n}\n"],"x_google_ignoreList":[]}