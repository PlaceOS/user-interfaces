{"version":3,"file":"main.js","mappings":"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CACL,iBACA,sBACA,kBACA,oBACA,uBAGJ,CACE79E,MAAS,wBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,qBACA,YAGJ,CACE79E,MAAS,4BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,kBACA,uBACA,qBACA,kBACA,cAGJ,CACE79E,MAAS,kCACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,oBACA,qBAGJ,CACE79E,MAAS,yBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,YAGJ,CACE79E,MAAS,gCACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,8BACR8S,IAAO,CACL,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,sBAGJ,CACE79E,MAAS,wBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,YAGJ,CACE79E,MAAS,iCACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACE79E,MAAS,+BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,iBACA,0BAGJ,CACE79E,MAAS,2BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACE79E,MAAS,wBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACE79E,MAAS,2BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,0BACA,wBACA,yBAGJ,CACE79E,MAAS,0BACT09E,KAAQ,MACRC,QAAU,IACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,oBAGJ,CACE79E,MAAS,yBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,qBAGJ,CACE79E,MAAS,yBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qCACR8S,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACE79E,MAAS,kCACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,uBACA,mBAGJ,CACE79E,MAAS,2BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,mDACR8S,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACE79E,MAAS,2BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,mBACA,sBAGJ,CACE79E,MAAS,6BACT09E,KAAQ,MACRC,QAAU,IACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,qBAGJ,CACE79E,MAAS,iCACT09E,KAAQ,QACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,sBAGJ,CACE79E,MAAS,0BACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACE79E,MAAS,2BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACE79E,MAAS,0BACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,wBACR8S,IAAO,CACL,oBAGJ,CACE79E,MAAS,2BACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yBACR8S,IAAO,CACL,uBAGJ,CACE79E,MAAS,sBACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBAGJ,CACE79E,MAAS,SACT09E,KAAQ,IACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,4CACR8S,IAAO,CACL,kBACA,yBACA,cAGJ,CACE79E,MAAS,6BACT09E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,IAET,CACE79E,MAAS,uBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,uBACA,oBAGJ,CACE79E,MAAS,2BACT09E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,sBACA,cAGJ,CACE79E,MAAS,wBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mBACR8S,IAAO,CACL,oBACA,oBAGJ,CACE79E,MAAS,MACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mCACR8S,IAAO,CACL,uBACA,YAGJ,CACE79E,MAAS,oBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACE79E,MAAS,sBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACE79E,MAAS,oBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACE79E,MAAS,0BACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,4BACR8S,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACE79E,MAAS,0BACT09E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+DACR8S,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACE79E,MAAS,+BACT09E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gEACR8S,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACE79E,MAAS,wBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACE79E,MAAS,iCACT09E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+CACR8S,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACE79E,MAAS,kCACT09E,KAAQ,QACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACE79E,MAAS,wBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,oBAGJ,CACE79E,MAAS,oBACT09E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACE79E,MAAS,4BACT09E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,gBAGJ,CACE79E,MAAS,sBACT09E,KAAQ,M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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","_r7","ctx_r6","date","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","duration","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","ctx_r3","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","ɵɵsanitizeUrl","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","_r6","user_r9","ɵɵi18n","MeetingFlowConfirmComponent_section_25_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r11","MeetingFlowConfirmComponent_section_26_ng_container_6_Template","_event_form","_sheet_ref","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_section_25_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_button_28_Template","all_day","spaces_1","date_fns_1","_toggleType","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","_objectSpread","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","_ref18","system_id","mod","execute","Booking","valueOf","locker_id","locker_name","extension_data","bookings","_ref20","_ref21","p","l","_ref22","_ref23","filters","_filters$shown_types","_filters$shown_types2","parse","interval","document","visibilityState","stopPolling","clearInterval","setAsDeleted","push","clear","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","AssetListFieldComponent_div_1_Template","toggleFav","active","activeChange","fav","AssetDetailsComponent","changes","ɵɵNgOnChangesFeature","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetStateService","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","MAT_DIALOG_DATA","setSelected","AssetSelectModalComponent_button_14_Template","isSelected","count","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","zone_id","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","products","showGroupFull","purchase_orders","_loop2","_purchase_orders$find","_step3","_iterator3","_loop3","removeAssetRequests","updateAssetRequestsForResource","_x2","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","start","addMinutes","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c2","_r14","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_47_Template","BookingDetailsModalComponent_button_48_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_URLS","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$user","_value$user2","_value$user2$id","_value","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","group_name","_asset$zone4","_asset$zone5","t1","_getNearbyResources","t2","t3","idx","organisation","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","_ref13","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","booker","emitEvent","disable","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","tmp_8_0","tmp_15_0","tmp_17_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r29","ctx_r28","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r35","ctx_r34","onDone","ctx_r36","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","locker","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","available","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","_lockers","lockers_banks$","locker_bank_id","locker_bank","LockersService","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_14_0","tmp_16_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","lockers$","bank_list","level_id","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","zone_ids","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","level_list","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","tags","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","_r37","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","_this$item","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","setHours","stringToMinutes","trigger","transition","opacity","animate","str","_timer","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","formatRecurrence","pattern","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","notifyWarn","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","breakdown","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","nativeElement","authority","ElementRef","Renderer2","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","core_3","icon_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","debug_console_component_1","scrolling_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","useValue","NgIf","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","DebugConsoleComponent","NgForOf","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r19","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","CustomTooltipData","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r18","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","item_r16","EventDetailsModalComponent_ng_container_69_div_5_Template","_c22","EventDetailsModalComponent_div_72_div_3_Template","item_r21","EventDetailsModalComponent_ng_container_73_div_5_Template","linked_bookings","_r23","show_attendees","_this$event$system","_this$event2$ext","_this$event3$linked_b","has_assets","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","event_link_modal_component_1","helpers_2","asset_utilities_1","events_fn_2","_newForm","_assets","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","availability_method","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_form$get","_form$get2","_ref19","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","recurrence","is_owner","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","_pattern","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","removeEvent","_makeBooking2","toJSON","_checkSelectedSpacesAreAvailable","exclude","space_ids","exclude_range","_x10","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","event_start","event_end","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring_master_id","from_bookings","master","mailbox","range_start","range_end","days_of_week","attachments","eventStatus","is_external","_this$recurrence","_this$system","EVENTS_ENDPOINT","createEvent","updateEvent","method","showEvent","approveEvent","rejectEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","_b$resources","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","blocks","blk","getNextFreeTimeSlot","addSeconds","startOfMinute","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","conditions","_host$groups","is_before","is_after","min_length","max_length","_rulesForSpace","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","_save","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","_desk_bookings","Desk","_bind","processBindingChange","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","actives","current_state","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this5$_options$getVa","_this5$_options$getVa2","_user","_yield$_this5$_setBoo","_setBookingTime","custom","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","pair_r2","ExploreMapViewComponent_div_16_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","toggleZones","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_this$_org$levelWithI","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","priority","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_16_Template","tmp_7_0","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","limit","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","slide_toggle_1","overlay_1","bookings_module_1","MatSlideToggleModule","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","addYears","old_date","new_date","getHours","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","calendar_fn_1","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","blob","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","ImageListFieldComponent","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formattedValue","RecurrenceFieldComponent","getDay","RecurrenceModalComponent","day_of_week","setSimple","RecurrenceFieldComponent_mat_option_15_Template","openCustomRecurrenceModal","occurrences","ends_key","toggleDayOfWeek","Quill","RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","SpaceListFieldComponent","NewSpaceSelectModalComponent","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","barcode","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","query_params","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateMockDeskMetadata","generateParkingSpaces","PARKING_SPACES","assignee","assigned_name","map_regions","DESK_FEATURES","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","source","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","region_list","active_region","region","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","loadRegionData","_this2$building","_updateSettingOverrides","_this$region","loadBuildingData","regions","_this$building2","_this$building3","_this$_organisation","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","Region","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this6$building3","geolocation","getCurrentPosition","_this6$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this6$building2","tz_start","_this$building4","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","user_r4","today","current_hour","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","updateWidth","updateScroll","container_size","user_list_size","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_21_Template","FindAvailabilityModalComponent_div_23_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_2_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","wfh_settings_modal_component_1","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","WFHSettingsModalComponent","MatCheckbox","i12","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field formControlName=\"assets\"></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            [src]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    *ngIf=\"space?.images?.length > 0\"\n                    src=\" space.images \"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return of([]);\n            const mod = getModule(system_id, 'Lockers');\n            return mod.execute('lockers_allocated_to_me').catch((_) => []);\n        }),\n        map((_) =>\n            _.map(\n                (i) =>\n                    new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        asset_id: i.locker_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    })\n            )\n        ),\n        catchError(() => of([])),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => {\n                document.visibilityState === 'visible'\n                    ? this._poll.next(Date.now())\n                    : '';\n            },\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [src]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [src]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        switchMap(([{ zone, date, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zone_id: bld.id || zone || '',\n                    zones: zone || '',\n                    period_start: getUnixTime(startOfDay(date)),\n                    period_end: getUnixTime(endOfDay(date)),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { addYears } from 'date-fns';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query), queryAssets(query)]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) => (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            old_assets?.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/new-desks',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this.form.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            );\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            await this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string, \n    resource_calendar: string, \n    event_id: string, \n    host_email: string\n};\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>,  q?: { event_id?: string, ical_uid?: string }) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>, q?: { event_id?: string, ical_uid?: string }) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data, q);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: user,\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$ = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${encodeURIComponent(map[key])}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push(['DTSTART', `${new Date(event.date).toISOString()}`]);\n    chunks.push([\n        'DTEND',\n        `${addMinutes(event.date, event.duration ?? 60).toISOString()}`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'outlook'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    breakdown: 15,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"80f1374\",\n    \"hash\": \"80f1374\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"80f1374\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1686097320207\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard  {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table [dataSource]=\"data_source\" matSort>\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column] }}</ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10 border-b border-gray-300 dark:border-neutral-400\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 border-b border-gray-200 dark:border-neutral-500\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [src]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">{{ item.name }}</h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"event.system?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{ event.linked_bookings.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"let item of event.linked_bookings\"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.asset_name || item.title }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"edit.emit(space)\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit event</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"remove.emit()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div i18n>Delete event</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\n\nconst BOOKING_URLS = [\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(zone_ids.map((id) => requestSpacesForZone(id)));\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, all_day } = this._form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                if (all_day) {\n                    date = startOfDay(date).valueOf();\n                    duration = 24 * 60 - 1;\n                }\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff < 14\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event,\n            ...event.extension_data,\n            date:\n                !event.id && isBefore(event.date || 0, Date.now())\n                    ? Date.now()\n                    : event.date,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form) this.newForm();\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            console.log(\n                'Payments:',\n                this._payments.payment_module,\n                spaces.length\n            );\n            if (this._payments.payment_module && spaces.length) {\n                console.log('Make Payment...');\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n                console.log('Payment success.', receipt);\n            }\n            const d = value.all_day\n                ? startOfDay(value.date).valueOf()\n                : value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            let asset_list = [];\n            if (assets?.length || event.extension_data.assets?.length) {\n                asset_list = await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(result.id).toPromise();\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        const space_ids = (\n            await Promise.all(\n                spaces.map((_) => this._space_pipe.transform(_.id || _.email))\n            )\n        ).map((_) => _.id);\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        const availability_method = this.has_calendar\n            ? querySpaceAvailability\n            : queryResourceAvailability;\n        let availability: boolean[] = await availability_method(\n            spaces.map((_) => _.id),\n            date,\n            duration,\n            ignore\n        ).toPromise();\n        if (!availability.every((_) => _))\n            throw `${\n                availability.filter((_) => _).length\n            } space(s) are not available at the selected time`;\n        return true;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week.map((_) =>\n                    typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                ),\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(endOfDay(this.recurrence.end)),\n                days_of_week: this.recurrence.days_of_week.map(\n                    (_) => DAYS_OF_WEEK[_]\n                ),\n            };\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id ? updateEvent(data.id, data, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    _.filter(\n                        (b) =>\n                            b.resources?.find((s) => s.id === id) &&\n                            b.id !== ignore &&\n                            b.ical_uid !== ignore\n                    ).length === 0\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes,\n    addSeconds,\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.get('date').valueChanges.subscribe(() =>\n        form.get('duration').updateValueAndValidity()\n    );\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._options,\n        this._poll,\n    ]).pipe(\n        filter(([lvl]) => !!lvl),\n        debounceTime(600),\n        switchMap(([lvl, { date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(date || Date.now())),\n                period_end: getUnixTime(addMinutes(date || Date.now(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            }).pipe(catchError(() => of([] as Booking[])))\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n        if (options.date) this._poll.next(Date.now());\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe(({ value }) =>\n                        this._status.next(\n                            value?.filter((_) => _.location === 'locker') || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        console.log(\n            'Init Search:',\n            mod,\n            this._org.binding('location_services')\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (this._statuses[space.id] !== 'free' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        {{\n                            option.date\n                                ? (option.date\n                                      | date\n                                          : (option.id >= 24 * 60\n                                                ? 'mediumDate'\n                                                : 'h : mm a')) + ' ('\n                                : ''\n                        }}{{ option.name }}{{ option.date ? ')' : '' }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addYears } from 'date-fns';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    Last {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option>\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formattedValue() }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            this.value.start = this.date;\n            if (!this.value.pattern) {\n                this.value.days_of_week = [new Date(this.date).getDay()];\n            }\n        }\n    }\n\n    public readonly formattedValue = () => formatRecurrence(this.value);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            if (data) this.setValue({ ...data, _pattern: 'custom_display' });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 3).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"monthly\">\n                            month{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\">Repeat on</h2>\n            <div class=\"flex items-center space-x-2 mb-4\" name=\"repeat-on\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button value=\"never\">Never</mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button btn class=\"w-32\" matRipple [mat-dialog-close]=\"data\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 13,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [src]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: Space[]) => {\n            if (!spaces) spaces = ref.componentInstance.selected;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.date | date: 'h : mm a' }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        this.loadRegionData(item).then(() => {\n            if (\n                this.building?.parent_id !== item.id &&\n                this.buildingsForRegion(item).length\n            ) {\n                this.building = this.buildingsForRegion(item)[0];\n            } else this._updateSettingOverrides();\n        });\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld?.id);\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list\n            .filter(\n                (lvl) =>\n                    !!this.buildings.find((bld) => bld.id === lvl.parent_id)\n            )\n            .map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = localStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        } else {\n            const timezone = this.timezone;\n            for (const bld of this.buildings) {\n                if (bld.timezone === timezone) {\n                    this.building = bld;\n                    break;\n                }\n            }\n            if (this.building) return;\n            const tz_start = timezone.split('/')[0];\n            for (const bld of this.buildings) {\n                if (bld.timezone.startsWith(tz_start)) {\n                    this.building = bld;\n                    break;\n                }\n            }\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","\nexport class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[user.email]\n                                    : []\n                            \"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div\n                        header\n                        class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\"\n                    >\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    public readonly availability = this.users.pipe(\n        debounceTime(300),\n        switchMap((users) => {\n            if (!users.length) return of([]);\n            return queryUserFreeBusy({\n                calendars: [this.host.email, ...users.map((_) => _.email)].join(\n                    ','\n                ),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\"\n            [style.width]=\"width + 'px'\"\n        >\n            <div\n                class=\"absolute w-[120rem] h-full inset-y-0\"\n                [style.left]=\"-offset + 'px'\"\n            >\n                <div\n                    event\n                    *ngFor=\"let event of availability\"\n                    class=\"absolute inset-y-0 bg-primary text-white p-2 overflow-hidden border border-white rounded\"\n                    [style.left]=\"event.start + '%'\"\n                    [style.width]=\"event.size + '%'\"\n                >\n                    <div class=\"text-xs\">Unavailable</div>\n                    <div class=\"text-xs max-w-full\">\n                        {{ event.date | date: 'shortTime' }} -\n                        {{\n                            event.date.valueOf() + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}