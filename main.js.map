{"version":3,"file":"main.js","mappings":"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AE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKjM,EAAUgM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,GAA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","filtered_events","ev","bkn","meeting_id","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","_ignore_cancel","_checkCancel","interval","_ref27","_ref29","_ref30","_auto_release$resourc","is_home","auto_release","_iterator","_step","_iterator2","_step2","booking","time_after","_createForOfIteratorHelper","n","done","addMinutes","time_before","closeAll","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_loop","assetgroup","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","item_r4","request_r1","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","items","EMPTY_FAVS","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","time","changes","AssetRequest","new_value","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","Math","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","request","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_data$extension_data2","_data$extension_data3","_data$extension_data4","startOfMinute","event_id","asset_ids","amount","_status","status","notes","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","day_r6","_r8","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","_r11","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r15","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","min","diff","differenceInMinutes","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_data","_this$_data$exact_tim","selected_ids","state","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","rejected","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","groups_cache","queryAssetGroupsExtended","has","forkJoin","limit","setTimeout","delete","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","_removeAssetRequests","requests","_$asset_ids","removeBooking","_updateAssetRequestsForResource","new_assets","ical_uid","from_booking","location_name","location_id","reset_state","filtered","item_list","used_ids","booking_id","slice","duplicates","Error","_request$items","createBooking","user_email","approved","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","products","_booking$asset_ids2","removeAssetRequests","updateAssetRequestsForResource","_x4","booking_details_modal_component_1","async_handler_class_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","_this$booking8","_this$booking9","is_today","format","_this$booking10","_this$booking11","_this$booking12","_this$booking13","is_all_day","dur","formatDuration","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r18","request_r16","_r20","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_c4","actions","BookingDetailsModalComponent_ng_container_38_interactive_map_1_Template","BookingDetailsModalComponent_ng_container_38_ng_template_3_Template","use_mapsindoors$","_r23","_r25","ctx_r24","_r27","ctx_r26","_r29","ctx_r28","_booking","_maps_people","hide_map","has_assets","linked_bookings","available$","_this$booking6","ts","booking_start","booking_end","_this$level","setCustomZone","_this$booking14","_this$booking15","_toggleCheckedIn","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","MapsPeopleService","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","booking_status","can_edit","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","groups","grp","bookable","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_ref11","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","_getNearbyResources","t2","t3","call","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","getTime","removeEmptyFields","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","feat_r21","_c21","DeskFiltersComponent_section_32_div_3_Template","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r4","center","coordinates","DeskMapComponent","is_displayed","_change","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this2$level","_this2$level2","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_option_3_Template","DeskMapComponent_interactive_map_6_Template","DeskMapComponent_ng_template_8_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","lvl_r1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","ParkingSpaceSelectMapComponent_ng_container_0_interactive_map_1_Template","ParkingSpaceSelectMapComponent_ng_container_0_ng_template_3_Template","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","optionList","CateringListFieldComponent_div_1_div_25_span_3_Template","order_r1","removeOrderItem","currency_code","CateringListFieldComponent_div_1_div_8_Template","duplicateOrder","editOrder","removeOrder","show_order","CateringListFieldComponent_div_1_div_25_Template","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","catering_vars_1","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r13","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","row","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","KeepAliveService","_system_id","_delay","_bindTo","module","GoogleMaps","Mapbox","_map_service","_map_token","_ready","_injected","_custom_zone","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","cloud_uploads_1","blobUtil","Observable","observer","arrayBufferToBlob","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","_r22","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","indoor_maps_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","IndoorMapsComponent","AsyncPipe","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r10","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","direction","json_display_component_1","obj_r10","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r8","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","search_result_items","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_api_service","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","levels_list","buildings_list","floor_mapping","get_location","custom_coordinates","_getUserLocation","initMapView","_ngOnChanges","renderSpaceStatus","mapActions","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","actions_hashmap","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","services","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","accumulator","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors","LocationsService","getLocations","searchElement","_getUserLocation2","customPosition","coords","accuracy","geolocation","watchPosition","_closeToBuildingLocation","_updateGeolocation","_handleGeolocationError","getCurrentPosition","enableHighAccuracy","lat_str","long_str","long","acos","sin","cos","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","updated_location","_updated_location$coo","_getRoute","_this$directions_rend","routeParameters","destination","anchor","travelMode","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","currentValue","_this$maps_service6","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","MapLocateModalComponent_div_6_interactive_map_1_Template","MapLocateModalComponent_div_6_ng_template_3_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","padLength","MediaDurationPipe","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","building_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_button_23_Template","UserControlsComponent_button_28_Template","disable_building_select","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_ng_container_67_interactive_map_1_Template","EventDetailsModalComponent_ng_container_67_ng_template_3_Template","EventDetailsModalComponent_div_68_div_3_Template","request_r31","_r35","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","show_attendees","_r39","no_edit_message","_r41","ctx_r40","act_r42","_r44","ctx_r43","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","startWith","_assertThisInitialize","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_assertThisInitialized","differenceInDays","previous","_ref17","_this$_event$getValue","_newForm","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","catering_charge_code","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event3","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data4","_form$getRawValue","changed_times","is_owner","breakdown","overflow","processed_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","_valid_asset_cache","_valid_cache_expiry","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","_this$recurrence","_this$system","parseRecurrence","all_day_date","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","i9","i10","MatMenu","MatMenuItem","MatMenuTrigger","i11","i12","CurrencyPipe","i13","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","roled_contacts","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_panning","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_arr","_i2","_arr2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_count_key","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","has_error","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","UserListFieldComponent","MatFormField","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","UserSearchFieldComponent","MatPrefix","MatInput","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","i14","ImageListFieldComponent","i15","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i16","MatSelect","i17","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i18","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","url_r7","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","item_r2","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","USER_LIST","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","location_name_time","location_icon","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r16","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","querySettings","encryption_level","EncryptionLevel","None","settings_string","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","bld_r11","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r14","start_date","SpaceFiltersComponent_div_30_div_6_Template","SpaceFiltersComponent_div_30_div_7_Template","feat_r24","feature_display","SpaceFiltersComponent_section_41_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_41_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_div_29_Template","SpaceFiltersComponent_div_30_Template","SpaceFiltersComponent_section_41_Template","SpaceFiltersComponent_div_43_Template","tmp_17_0","tmp_19_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","_split$map","_split$map2","SpaceSelectMapComponent_mat_option_3_Template","SpaceSelectMapComponent_interactive_map_6_Template","SpaceSelectMapComponent_ng_template_8_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","work_preferences","work_overrides","location_time","datetime","_this$work_overrides$","_this$work_preference","date_string","in_hours","in_hours_time","pref","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","type_r9","idx_r7","start_times","changed","end_times","WFHSettingsModalComponent_div_0_div_31_mat_option_8_Template","WFHSettingsModalComponent_div_0_span_24_Template","WFHSettingsModalComponent_div_0_div_31_Template","option_name","available_weekdays","type_r19","weekdays","_this$options$find","_this$settings","_initWeekdays","_saveChanges","dow","updateUser","setDay","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    checkinBooking,\n    queryBookings,\n    removeBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const filtered_events = e.filter(\n                (ev) => !d.find((bkn) => `${ev.meeting_id}` === `${bkn.id}`)\n            );\n            return [...filtered_events, ...v, ...d, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                auto_release.time_after &&\n                auto_release.resources?.length\n            ) {\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                auto_release.time_before || 0\n                            )\n                        ),\n                        period_end: getUnixTime(\n                            addMinutes(Date.now(), auto_release.time_after || 5)\n                        ),\n                        type,\n                    }).toPromise();\n                    for (const booking of bookings) {\n                        if (this._ignore_cancel.includes(booking.id)) continue;\n                        this._dialog.closeAll();\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} booking`,\n                                content: `You have indicated you are not in the office. \n                                Your booking will be cancelled after ${auto_release.time_after} minutes. \n                                Do you wish to keep this booking?`,\n                                icon: { content: 'cancel' },\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        await checkinBooking(booking.id, true).toPromise();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < request.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        this.asset_requests = (value || []).map(\n            (_) => new AssetRequest({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map(\n                            (_) =>\n                                (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id\n                        );\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 }\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public _changed = false;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, randomInt } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\nimport { group } from 'console';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets } as AssetGroup))\n                    )\n                )\n            )\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        })\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            for (const product of products) {\n                product.assets = product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                booking.asset_id === asset.id ||\n                                booking.asset_ids?.includes(asset.id)\n                        )\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[]\n) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration)\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    await Promise.all(\n        bookings.map((item) => removeBooking(item.id).toPromise())\n    );\n    const filtered = requests.filter(\n        (_) => !_.rejected && !bookings.find((b) => b.id === _.id)\n    );\n    const item_list = await queryAssetGroupsExtended().toPromise();\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    await Promise.all(\n        new_assets.map((request) => {\n            // Handle duplicate asset ids\n            let asset_ids = flatten(\n                request.items.map((_) =>\n                    _.item_ids.length\n                        ? _.item_ids\n                        : (_ as any).assets\n                              ?.map((_) => _.id)\n                              .slice(0, _.quantity)\n                )\n            );\n            if (!asset_ids.length) {\n                throw `No assets metadata to select for furfillment of request ${request.id}`;\n            }\n            const duplicates = asset_ids.filter((_) => used_ids.includes(_));\n            if (duplicates?.length) {\n                for (const item of request.items) {\n                    const group = item_list.find((_) => _.id === item.id);\n                    if (group && group.assets.length) {\n                        item.item_ids = new Array(item.quantity)\n                            .fill(0)\n                            .map((_) => {\n                                const asset = group.assets.find(\n                                    (_) => !used_ids.includes(_.id)\n                                );\n                                used_ids.push(asset.id);\n                                if (asset) return asset.id;\n                                throw new Error(\n                                    'Unable to find available assets'\n                                );\n                            });\n                    }\n                }\n                asset_ids = flatten(request.items.map((_) => _.item_ids));\n            }\n            // Grab any existing bookings for the asset for the parent event/booking\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    request.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            used_ids = [...used_ids, ...asset_ids];\n            return createBooking(\n                new Booking({\n                    type: 'asset-request',\n                    booking_type: 'asset-request',\n                    date,\n                    duration,\n                    all_day,\n                    description: location_name,\n                    user_email: host,\n                    asset_id: request.id,\n                    asset_ids,\n                    asset_name: request.items.map((_) => _.name).join(', '),\n                    title: request.items.map((_) => _.name).join(', '),\n                    approved:\n                        !reset_state && booking?.approved && !request._changed,\n                    rejected:\n                        !reset_state && booking?.rejected && !request._changed,\n                    extension_data: {\n                        parent_id: id,\n                        location_id,\n                        request: new AssetRequest({ ...request, event: null }),\n                    },\n                    zones: zones || [],\n                }),\n                { ical_uid, event_id: from_booking ? '' : id }\n            ).toPromise();\n        })\n    );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                        <ng-template #mapspeople>\n                            <indoor-maps\n                                [styles]=\"styles | async\"\n                                [actions]=\"actions | async\"\n                            ></indoor-maps>\n                        </ng-template>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _maps_people: MapsPeopleService\n    ) {}\n\n    public ngOnInit() {\n        this._maps_people.setCustomZone(this.level?.id);\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get valid_assets() {\n        const list = this.linked_bookings;\n        return (this.extension_data.assets || [])\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find((_) => _.asset_id === request.id);\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n        phone: new FormControl(booking.extension_data.phone),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    return id ? updateBooking(id, data) : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise())\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                    [custom_coordinates]=\"coordinates\"\n                ></indoor-maps>\n            </ng-template>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this._maps_people.setCustomZone(level?.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                ></indoor-maps>\n            </ng-template>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space?.display_name ||\n                        order.event?.space?.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space?.display_name ||\n                            order.event?.space?.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|')\n                    )\n                    .join(seperator)\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"7c23a51\",\n    \"hash\": \"7c23a51\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"7c23a51\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1709010289836\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    HashMap,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"flex items-center w-full even:bg-base-200 hover:bg-base-300 rounded p-2 space-x-2\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <div class=\"flex-1\">\n                            {{ item.properties.name }}\n                        </div>\n                        <button\n                            icon\n                            name=\"get-directions\"\n                            matRipple\n                            aria-label=\"get directions button\"\n                            (click)=\"getRoute(item)\"\n                            class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                        >\n                            <app-icon class=\"text-sm\">near_me</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n    public floor_mapping: { [id: string]: string } = {};\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = this._org.levels;\n        this.buildings_list = this._org.buildings;\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation().then();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this.initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    initMapView(): Promise<void> {\n        if (!this._api_service.is_ready) {\n            this.timeout('init', () => this.initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider();\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        console.log('Directions Service:', this.directions_service, provider);\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping = pairs?.reduce((accumulator, [key, value]) => {\n            accumulator[key] = value;\n            return accumulator;\n        }, {});\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => (this.search_result_items = locations)\n        );\n    }\n\n    private async _getUserLocation(): Promise<GeolocationPosition> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn'\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            console.log('Custom GeoLocation:', this.coordinates);\n            const customPosition = {\n                coords: {\n                    latitude: this.coordinates.latitude,\n                    longitude: this.coordinates.longitude,\n                    accuracy: 10,\n                },\n                timestamp: new Date().getTime(),\n            };\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n\n            return customPosition as GeolocationPosition;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => {\n                    if (!this._closeToBuildingLocation(_)) return;\n                    log('MapsIndoors', 'Settings location to user:', [\n                        _.coords,\n                    ]);\n                    this._updateGeolocation(_);\n                },\n                (_) => this._handleGeolocationError(_)\n            );\n            return new Promise<GeolocationPosition>((resolve) => {\n                const options = { timeout: 10000, enableHighAccuracy: true };\n                navigator.geolocation.getCurrentPosition(\n                    async (position: GeolocationPosition) => {\n                        if (!this._closeToBuildingLocation(position)) {\n                            return resolve(await this._setLocationToBuilding());\n                        }\n                        log('MapsIndoors', 'Settings location to user:', [\n                            position.coords,\n                        ]);\n                        this._updateGeolocation(position);\n                        resolve(position);\n                    },\n                    async () => resolve(await this._setLocationToBuilding()),\n                    options\n                );\n            });\n        }\n    }\n\n    private _closeToBuildingLocation(position: GeolocationPosition) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance =\n                Math.acos(\n                    Math.sin(lat) * Math.sin(position.coords.latitude) +\n                        Math.cos(lat) *\n                            Math.cos(position.coords.latitude) *\n                            Math.cos(position.coords.longitude - long)\n                ) * 6371;\n            if (distance >= 1) return false; // Only use geolocation if user is within 1km of building\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        this.user_latitude = parseFloat(lat);\n        this.user_longitude = parseFloat(long);\n        return {\n            coords: {\n                latitude: this.user_latitude,\n                longitude: this.user_longitude,\n                accuracy: 10,\n            },\n            timestamp: new Date().getTime(),\n        } as GeolocationPosition;\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        if (!this.directions_service || !location) return;\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n            travelMode: 'WALKING',\n        };\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log('MapsIndoors', 'Error fetching route: ', [e], 'error');\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) throw e;\n                notifyError('Error: Origin location is outside of map area.');\n                throw e;\n            });\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <ng-template #mapspeople>\n                    <indoor-maps\n                        [styles]=\"styles | async\"\n                        [actions]=\"actions | async\"\n                    ></indoor-maps>\n                </ng-template>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this._maps_people.setCustomZone(this.level?.id);\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._maps_people.setCustomZone('');\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                        <ng-template #mapspeople>\n                            <indoor-maps\n                                [styles]=\"styles | async\"\n                                [actions]=\"actions | async\"\n                            ></indoor-maps>\n                        </ng-template>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _maps_people: MapsPeopleService\n    ) {\n        this._load().then();\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        console.log('Valid Assets:', this.event.valid_assets);\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n        this._maps_people.setCustomZone(this.level?.parent_id);\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n            this._maps_people.setCustomZone(this.level?.parent_id);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day, organiser } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        (bookings[idx] || []).filter(\n                            (_) => _.ical_uid !== ical_uid\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest(_)\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                date_end,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            let changed_times = false;\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource')\n                );\n                spaces.push(space);\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const processed_assets = assets.map((_) =>\n                new AssetRequest(_).toJSON()\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    console.error(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time'\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                        reset_state: changed_times,\n                    },\n                    assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    private _valid_asset_cache = [];\n    private _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find((_) => _.asset_id === request.id);\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    const id = data.id;\n    delete (data as any)?.status;\n    delete (data as any).id;\n    return id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || id : id,\n              data,\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter(\n                (_) =>\n                    !events.find((e) => e.asset_id === _.id) && !_.assigned_to\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning) return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => this.bookSpace(space),\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n    area_count_key: string;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const count =\n                zone[\n                    this._count_key[zone.area_id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ];\n            const filled = count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_zone_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [src]=\"url | safe: 'resource'\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            console.log('Place User:', user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, filter, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(filter(([region, bld]) => !!bld))\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(map((_) => _?.details))\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None\n                                    ) || { settings_string: '' }\n                                );\n                            } catch {\n                                return {};\n                            }\n                        })\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                    [custom_coordinates]=\"coordinates\"\n                ></indoor-maps>\n            </ng-template>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public location_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        return (\n            this.work_overrides[date_string]?.location ||\n            this.work_preferences.find((_) => _.day_of_week === day)\n                ?.location ||\n            'wfo'\n        );\n    }\n\n    public get location_name() {\n        return this.location_name_time(Date.now());\n    }\n\n    public location_name_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        const pref =\n            this.work_overrides[date_string] ||\n            this.work_preferences.find((_) => _.day_of_week === day);\n        if (!pref) return false;\n        const start = pref.start_time;\n        const end = pref.end_time;\n        const now = date.getHours() + date.getMinutes() / 60;\n        return start <= now && now < end;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser } from '@placeos/common';\nimport { addDays, format, set, setDay, startOfWeek } from 'date-fns';\nimport { WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[40rem] max-w-full\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-[20rem] max-w-[calc(100%-2rem)] mx-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"flex-1 w-1/2\">{{ option_name }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2 mx-auto\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>{{\n                            option === 'wfh' ? 'home' : 'domain'\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a {{ option === 'aol' ? 'leave' : 'working' }}\n                        <span *ngIf=\"option !== 'aol'\"\n                            >from\n                            {{ option === 'wfh' ? 'home' : 'office' }}</span\n                        >\n                        day<br />\n                        {{ option === 'aol' ? 'Unavailable' : 'Available' }} for\n                        {{ option === 'wfh' ? 'online' : '' }} meetings\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Office Day Defaults\n                </h3>\n                <div\n                    class=\"flex items-center space-x-2 w-full overflow-hidden even:bg-base-200 rounded p-2\"\n                    *ngFor=\"let idx of available_weekdays\"\n                >\n                    <label class=\"w-24 min-w-0 m-0\">{{\n                        days[idx] | date: 'EEEE'\n                    }}</label>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"start_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                    ></a-time-field>\n                    <a-time-field\n                        class=\"h-12 w-36\"\n                        [(ngModel)]=\"end_times[idx]\"\n                        (ngModelChange)=\"changed = true\"\n                        [from]=\"start_times[idx]\"\n                    ></a-time-field>\n                    <mat-form-field\n                        class=\"flex-2 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            [(ngModel)]=\"settings[idx].location\"\n                            (ngModelChange)=\"changed = true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of options\"\n                                [value]=\"type.id\"\n                            >\n                                {{ type.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Working from office' },\n        { id: 'wfh', name: 'Working from home' },\n        { id: 'aol', name: 'Away on Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n    public start_times: number[] = [];\n    public end_times: number[] = [];\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.option = user.location || 'wfo';\n        if (this.settings?.length < 7) {\n            this.settings = new Array(7).fill({}).map((_, idx) => ({\n                day_of_week: idx as any,\n                start_time: 9,\n                end_time: 17,\n                location: 'wfo',\n            }));\n        }\n        this.start_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.start_time);\n            const minutes = Math.round((_.start_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this.end_times = this.settings.map((_, idx) => {\n            const hours = Math.floor(_.end_time);\n            const minutes = Math.round((_.end_time - hours) * 60);\n            return set(this.days[idx], { hours, minutes }).valueOf();\n        });\n        this._initWeekdays();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const dow = new Date().getDay();\n        const today = format(Date.now(), 'yyyy-MM-dd');\n        var overrides = {};\n        overrides[today] = {\n            day_of_week: dow,\n            start_time: 9,\n            end_time: 17,\n            location: this.option,\n        };\n        for (const day of this.settings) {\n            const start = new Date(this.start_times[day.day_of_week]);\n            const end = new Date(this.end_times[day.day_of_week]);\n            day.start_time = start.getHours() + start.getMinutes() / 60;\n            day.end_time = end.getHours() + end.getMinutes() / 60;\n            if (day.day_of_week === dow) {\n                overrides[today].start_time = day.start_time;\n                overrides[today].end_time = day.end_time;\n            }\n        }\n        const user = await showUser('current').toPromise();\n        await updateUser(user.id, {\n            ...user,\n            work_preferences: this.settings,\n            work_overrides: overrides,\n        }).toPromise();\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            location.reload();\n            this._dialog_ref.close();\n        }\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n}\n"],"x_google_ignoreList":[]}