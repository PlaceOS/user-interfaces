{"version":3,"file":"main.js","mappings":"uOACA,IAAAA,EAAAC,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OAIAM,EAAAN,EAAA,OACAO,EAAAP,EAAA,OACAQ,EAAAR,EAAA,OACAS,EAAAT,EAAA,OACAU,EAAAV,EAAA,kBAEMW,YAAiB,CACnB,CAAEC,KAAM,eAAgBC,UAAWR,EAAAS,uBACnC,CAAEF,KAAM,MAAOC,UAAWP,EAAAS,mBAC1B,CACIH,KAAM,GACNI,YAAa,CAACX,EAAAY,qBACdC,QAAS,CAACb,EAAAY,qBACVE,SAAU,CACN,CACIP,KAAM,UACNC,UAAWX,EAAAkB,sBAEf,CACIR,KAAM,OACNO,SAAU,CACN,CAAEP,KAAM,SAAUC,UAAWX,EAAAkB,sBAC7B,CAAER,KAAM,iBAAkBC,UAAWV,EAAAkB,2BACrC,CAAET,KAAM,UAAWC,UAAWJ,EAAAa,yBAC9B,CAAEV,KAAM,kBAAmBC,UAAWH,EAAAa,gCACtC,CAAEX,KAAM,QAASC,UAAWN,EAAAiB,sBAC5B,CAAEZ,KAAM,gBAAiBC,UAAWL,EAAAiB,+BAG5C,CACIb,KAAM,gBACNC,UAAWZ,EAAAyB,oBAEf,CACId,KAAM,kBACNC,UAAWV,EAAAkB,2BAEf,CACIT,KAAM,WACNC,UAAWT,EAAAuB,2BAEf,CAAEf,KAAM,KAAMgB,UAAW,OAAQC,WAAY,mBAGrD,CAAEjB,KAAM,KAAMgB,UAAW,OAAQC,WAAY,mBAOpCC,mBAAgB,eAAhBC,EAAgBC,EAAA,SAAAD,IAAAE,EAAAC,KAAAH,EAAA,GAAhBA,SAAgB,mBAAAI,iBAAhBJ,EAAgB,EAAhBA,EAAgB,UAAAK,EAAA,iCAAhBL,MAAgB,UAAAK,EAAA,qCAHfrC,EAAAsC,aAAaC,QAAQ3B,EAAQ,CAAE4B,SAAS,IACxCxC,EAAAsC,gBAEDN,CAAgB,mNC5D7B/B,EAAA,OACAA,EAAA,OADA,IAEAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,MAOA0C,EAAA1C,EAAA,OAaA2C,GADA3C,EAAA,MACAA,EAAA,QACA4C,EAAA5C,EAAA,OAEA6C,EAAA7C,EAAA,8FAea8B,eAAa,eAAbgB,EAAa,SAAAC,GAAAC,EAAAF,EAAAC,GAAA,IAUrBE,EAVqBC,EAAAC,EAAAL,GAGtB,SAAAA,EACYM,EACAC,EACAC,EACAC,GAAsB,IAAAC,EAAAvB,SAAAC,KAAAY,IAE9BU,EAAAN,EAAAO,KAAAvB,OALQkB,YACAI,EAAAH,OACAG,EAAAF,SACAE,EAAAD,YANZC,EAAAE,MAAQ,gBAAgBF,CASxB,CAACxB,SAAAc,EAAA,EAAAa,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACHC,eAAQC,KAAI,+BACZC,OAAOC,QAAQC,aAAe,SAACC,EAAYC,GAAkB,KAE7DvC,EAAAwC,KAAI,MAAO,SAAUrC,IAAK,EAE1BH,EAAAyC,iBAAgBjD,KAAKqB,WACrBoB,QAAQC,KAAI,uCAAwCJ,EAAAE,KAAA,EAC9CxC,KAAKkB,UAAUgC,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClEb,eAAQC,KAAI,+CAAgDJ,EAAAE,KAAA,GACtDe,OAAOC,UAAS,QACtBf,eAAQC,KAAI,wBAAyBJ,EAAAE,KAAA,GAC/BxC,KAAKyD,kBAAiB,QACkB,GAA9ChB,QAAQC,KAAI,mCAAkC,EAC1CnC,EAAAmD,SAAO,CAAApB,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,SAAS3D,KAAK4D,qBAAmB,QAC5CnB,eAAQC,KAAI,uBAAwBJ,EAAAC,KAAA,GAEhCE,QAAQC,KAAI,gCACZ1C,KAAK6D,QACD,QACA,WACI,KAAM,+BACV,EACA,KAEE5B,EAAkB,QAATF,EAAGwB,cAAM,IAAAxB,GAAM,QAANC,EAAND,EAAQ+B,YAAI,IAAA9B,OAAN,EAANA,EAAc+B,iBAAgBzB,EAAAE,KAAA,GAC7BP,GAAa+B,QAAQC,UAAS,QACtB,GADrB/B,EAAGI,EAAA4B,KACTlE,KAAKmE,aAAa,SACbjC,EAAG,CAAAI,EAAAE,KAAA,cAAQ,gCAA+B,QAC/CC,eAAQC,KAAI,wBAAA0B,OAAyBlC,IACrCmC,eAAeC,QAAQ,eAAgBpC,GAAKI,EAAAE,KAAA,GACtCxC,KAAKyD,iBAAgB,GAAM,QACjCzD,KAAK4D,oBAAoBtB,EAAAE,KAAA,iBAEO,GAFPF,EAAAC,KAAA,GAAAD,EAAAiC,GAAAjC,EAAAkC,MAAA,IAEzB/B,QAAQC,KAAK+B,KAAKC,UAASpC,EAAAiC,KAChB,QADqBpC,EAC3BoB,cAAM,IAAApB,GAAS,QAATC,EAAND,EAAQwC,eAAO,IAAAvC,GAAfA,EAAiBwC,GAAE,CAAAtC,EAAAE,KAAA,SACpBC,eAAQC,KAAI,gCAAiCJ,EAAAE,KAAA,GACvCxC,KAAKyD,iBAAgB,GAAM,QAAAnB,EAAAE,KAAA,iBAAAF,SAAAE,KAAA,GAE3BxC,KAAK6E,0BAAyB,yBAAAvC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,cAG/C,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAAA,eAAAwD,EAAAvD,EAEO,eAAAwD,EAAAnF,KAAsBoF,IAAKH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAAO,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAAC,EAAA,OAAA5D,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACtC,SAAAhC,EAAAkF,YAAWP,EAAKjE,UAAUyE,IAAI,oBACxBH,EAAWL,EAAKjE,UAAUyE,IAAI,aAAe,IAC1CC,YAAcR,EACvBI,EAASK,QAAU,QACnBL,EAASM,OACHX,EAAKjE,UAAUyE,IAAI,SACrBI,SAASC,OAAOC,SAAS,mBAAmBR,EAAAjD,KAAA,KAC1ChC,EAAA0F,YAAWV,GAAShB,MAAO,SAACnB,GAAC,OAAKZ,QAAQ0D,MAAM9C,EAAE,GAAC,wBAAAoC,EAAAX,OAAA,EAAAS,EAAA,EARnB3D,EAQmB,GAC5D,gBAAA6B,IAAA,OAAAyB,EAAAF,MAAAhF,KAAAiF,UAAA,EAXA,IAWA,CAAAxD,IAAA,oBAAAC,MAAA,eAAA0E,EAAAzE,EAAAC,IAAAC,KAEO,SAAAwE,IAAA,IAAAC,EAAAC,EAAAC,EAAAxG,KAAA,OAAA4B,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OACJ,SAAAhC,EAAAkG,YAAW1G,KAAKoB,QACXpB,KAAKkB,UAAUyE,IAAI,yBACpB3F,KAAK6D,QAAQ,gBAAiB,kBAAM2C,EAAKG,aAAa,EAAE,KAC3DF,EAAAjE,KAAA,EACKhC,EAAAoG,aAAazD,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OACtDtD,KAAKmE,aAAa,kBAAe,EACjCzD,EAAAmG,sBAAkBrG,EAAAsG,iBAAa,EAC/BrG,EAAAsG,uBACI/G,KAAKkB,UAAUyE,IAAI,qCAAmC,IAAAvB,OACjC,QADiCkC,KAC9C9F,EAAAsG,sBAAa,IAAAR,GAAO,QAAPC,EAAbD,EAAeU,aAAK,IAAAT,OAAP,EAAbA,EAAsBU,MAAM,KAAK,KAC3C,wBAAAR,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACL,gBAAA4D,IAAA,OAAAwC,EAAApB,MAAAhF,KAAAiF,UAAA,EAdA,IAcA,CAAAxD,IAAA,0BAAAC,MAAA,eAAAwF,EAAAvF,EAAAC,IAAAC,KAEO,SAAAsF,IAAA,IAAAC,EAAApH,KAAA,OAAA4B,IAAAS,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,OAwByC,GAvB7CC,QAAQC,KAAI,iCACZ1C,KAAK6D,QAAQ,cAAe,WACxB,IAAMnF,EAAI,GAAA0F,OAAM2B,SAASC,QAAM5B,OAAG2B,SAASuB,SAAQ,iBACnD7E,QAAQC,KAAI,kDAAA0B,OAC0C1F,IAEtD6E,OAAOoB,QAAQC,GAAG2C,mBACd7I,EACA,CAAE8I,OAAQ,GAAIC,MAAO,IACrB,SAACC,GACGjF,QAAQC,KAAI,4CACZ,IAAMiF,EAASD,EAAOhG,MACtBiG,EAAOC,gBACHrE,OAAOsE,UAAUC,sBACjB,SAACpE,GACOA,MAAOnD,EAAAwH,UAASrE,GACpB0D,EAAKxD,oBACL+D,EAAOK,OACX,EAER,EAER,GACAvF,QAAQC,KAAI,QAAA0B,OAASzB,OAAOoD,SAASkC,QAEjCtF,OAAOoD,SAASkC,KAAKhC,SAAS,kBAC9B5B,eAAe6D,QAAQ,WAAU,CAAAb,EAAA7E,KAAA,SAEjC6B,sBAAeC,QAAQ,UAAW,QAClC7B,QAAQC,KAAI,+CACZ1C,KAAKmE,aAAa,eAAekD,EAAA7E,KAAA,EAC3BxC,KAAKyD,iBAAgB,GAAM,aAC5BlD,EAAAmD,SAAO,CAAA2D,EAAA7E,KAAA,gBAAA6E,EAAA1D,OAAA,kBACZJ,OAAOoB,QAAQC,GAAGuD,iBAAc5H,EAAAmD,UAAW,IAAI,yBAAA2D,EAAAvC,OAAA,EAAAqC,EAAAnH,KAAA,IAEtD,gBAAA6E,IAAA,OAAAqC,EAAAlC,MAAAhF,KAAAiF,UAAA,EAtCA,IAsCA,CAAAxD,IAAA,cAAAC,MAEO,WAAW,IAAA0G,GACf,EAAI7H,EAAA8H,WAAyB,QAAjBD,KAAI5H,EAAAsG,sBAAa,IAAAsB,GAAbA,EAAeE,kBAC/B/H,EAAAgI,mBACAxC,SAASyC,SACb,KAAC5H,CAAA,CA3HqB,CAAQJ,EAAAiI,cAArB7H,SAAa,mBAAAX,iBAAbW,GAAYV,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAAC,UAAA9I,EAAAwI,4BAAAO,EAAAC,aAAA,EAAZtI,EAAa,UAAAV,EAAA,kCAAbU,EAAYuI,UAAA,eAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GANjBvJ,EAAAyJ,oBAAA,kBAAAzJ,CAA+B,mBAA/BA,CAA+B,qGAM1BU,CAAa,wJCzC1B,IAAAgJ,EAAA9L,EAAA,OACA+L,EAAA/L,EAAA,OACAgM,EAAAhM,EAAA,OACAiM,EAAAjM,EAAA,OAEAkM,EAAAlM,EAAA,OACAmM,EAAAnM,EAAA,MACAoM,EAAApM,EAAA,OAEAqM,EAAArM,EAAA,MACAsM,EAAAtM,EAAA,OACAuM,EAAAvM,EAAA,OACAwM,EAAAxM,EAAA,MACAyM,EAAAzM,EAAA,OAEA0M,EAAA1M,EAAA,OACA2M,EAAA3M,EAAA,OACA4M,EAAA5M,EAAA,OACA6M,EAAA7M,EAAA,OACA8M,EAAA9M,EAAA,OACA+M,EAAA/M,EAAA,OAQAgN,EAAAhN,EAAA,OACAiN,EAAAjN,EAAA,OACAkN,EAAAlN,EAAA,kBAGA,SAAgBmN,EAAkBC,GAC9B,OAAO,IAAIH,EAAAI,oBAAoBD,EAAM,mBAAoB,QAC7D,mBAFAtL,oBAAAqL,EAmDarL,YAAS,eAATwL,EAAStL,EAAA,SAAAsL,IAAArL,EAAAC,KAAAoL,EAAA,GAATA,SAAS,mBAAAnL,iBAATmL,EAAS,EAATA,EAAS,UAAAlL,EAAA,iCAATkL,EAASC,UAAA,CAFNZ,EAAA7J,gBAEHwK,EAAS,UAAAlL,EAAA,sCAHP,CAAC2K,EAAAS,WAAUC,QAAA,CA9BlB1B,EAAA2B,cACAzB,EAAA0B,wBACAf,EAAA7K,iBACA8K,EAAAe,WACAd,EAAAe,sBACA5B,EAAA0B,wBACA3B,EAAA8B,iBACAhC,EAAAiC,YACA5B,EAAA6B,oBACA9B,EAAA+B,kBACAf,EAAAgB,gBACA7B,EAAA8B,eACA5B,EAAA6B,aACA3B,EAAA4B,iBACAvC,EAAAwC,oBACA9B,EAAA+B,qBACAjC,EAAAkC,oBACAxB,EAAAyB,gBAAgBnM,QAAQ,CACpBoM,gBAAiB,KACjBC,OAAQ,CACJC,QAAS5B,EAAA6B,gBACTC,WAAY3B,EACZ4B,KAAM,CAAC/C,EAAAgD,eAIf5C,EAAA6C,oBAAoBC,SAAS,iBAAkB,CAC3CC,QAASzC,EAAA0C,YAAYC,gBAMpB/B,CAAS,4ICpFtBtN,EAAA,iCAoCa8B,oBAAiB,eAAjBf,EAAiB,WAC1B,SAAAA,EAAmBuO,GAAcrN,EAAAC,KAAAnB,GAAdmB,KAAAoN,QAAiB,CAACtN,SAAAjB,EAAA,EAAA4C,IAAA,WAAAC,MAErC,WAAkB,KAAC7C,CAAA,CAHO,GAAjBA,SAAiB,mBAAAoB,iBAAjBpB,GAAiBqB,EAAAwI,4BAAAC,EAAA0E,QAAA,EAAjBxO,EAAiB,UAAAqB,EAAA,kCAAjBrB,EAAiBsK,UAAA,wBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,gaAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/BfvJ,EAAAqN,yBAAA,UAAArN,CAEV,cAFUA,CAEV,WAKWA,EAAAyJ,oBAAA,WAMJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAgC,UAAhCA,CAAgC,YAGpBA,EAAAuN,iBAAA,qBAAcvN,EAAAsN,wBAAAtN,KAI1BA,EAAAqN,yBAAA,UAAArN,CAAgC,YAExBA,EAAAuN,iBAAA,iBACAvN,EAAAqN,yBAAA,aAA8BrN,EAAAuN,iBAAA,IAAiBvN,EAAAsN,yBAAQtN,EAAAuN,iBAAA,uBAE3DvN,EAAAsN,wBAAAtN,cAFkCA,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA0D,OAAAQ,IAAA,SAOrC/O,CAAiB,gJCrC9Bf,EAAA,WACA+P,EAAA/P,EAAA,OACAgQ,EAAAhQ,EAAA,OAEAkM,EAAAlM,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACAqQ,EAAArQ,EAAA,OACAkN,EAAAlN,EAAA,OACAsQ,EAAAtQ,EAAA,OACAgN,EAAAhN,EAAA,MACAuQ,EAAAvQ,EAAA,OACAwQ,EAAAxQ,EAAA,MACAyQ,EAAAzQ,EAAA,OACA0Q,EAAA1Q,EAAA,OACA2Q,EAAA3Q,EAAA,MACA4Q,EAAA5Q,EAAA,OACA6Q,EAAA7Q,EAAA,OACA8Q,EAAA9Q,EAAA,OACA+Q,EAAA/Q,EAAA,OACAgR,EAAAhR,EAAA,OAEAiR,GADAjR,EAAA,OACAA,EAAA,QACAkR,EAAAlR,EAAA,OACAK,EAAAL,EAAA,OACAiM,EAAAjM,EAAA,kBA4Ca8B,wBAAqB,eAArB+L,EAAqB7L,EAAA,SAAA6L,IAAA5L,EAAAC,KAAA2L,EAAA,GAArBA,SAAqB,mBAAA1L,iBAArB0L,EAAqB,EAArBA,EAAqB,UAAAzL,EAAA,iCAArByL,MAAqB,UAAAzL,EAAA,qCAb1B6J,EAAA0B,wBACAsD,EAAAE,qBACAD,EAAAE,mBACA/Q,EAAAgR,iBA7BJrB,EAAAsB,gBACApF,EAAA+B,kBACAgC,EAAAsB,oBACArB,EAAAsB,gBACArB,EAAAsB,mBACAT,EAAAU,cACAtB,EAAAuB,eACAtB,EAAAuB,yBACAhB,EAAAiB,qBACA9B,EAAA+B,sBACA5E,EAAAgB,gBACAoC,EAAAyB,eACA/E,EAAAgF,gBACAzB,EAAA0B,cACAzB,EAAA0B,kBACArB,EAAAsB,mBACA1B,EAAA2B,cACAtB,EAAAuB,eACA3B,EAAA4B,iBACA3B,EAAA4B,eACAxB,EAAAyB,gBAcIvB,EAAAE,qBACAD,EAAAE,mBACA/Q,EAAAgR,oBAGKxD,CAAqB,qLCtElC7N,EAAA,OACAA,EAAA,OADA,0DAsCa8B,uBAAoB,eAApBN,EAAoB,WAO7B,SAAAA,EACYiR,EACAC,GAAe,IAAAlP,EAAAtB,KAAAD,EAAAC,KAAAV,GADfU,KAAAuQ,WACAvQ,KAAAwQ,UARIxQ,KAAAyQ,UAAY,kBAAMnP,EAAKiP,SAASE,WAAW,CASxD,CAAC3Q,SAAAR,EAAA,EAAAmC,IAAA,OAAAkE,IAPJ,WACI,OAAO3F,KAAKuQ,SAASG,IACzB,GAAC,CAAAjP,IAAA,cAAAC,OAAAiP,EAAAhP,EAAAC,IAAAC,KAOM,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGxC,KAAKuQ,SAASK,cAAa,OACjC5Q,KAAKwQ,QAAQK,SAAS,CAAC,QAAS,QAAS,YAAY,wBAAAvO,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACxD,SAAA8Q,IAAA,OAAAH,EAAA3L,MAAAhF,KAAAiF,UAAA,MAAA3F,EAVA,IAAAqR,CAUA,CAf4B,GAApBrR,SAAoB,mBAAAW,iBAApBX,GAAoBY,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAwE,QAAA,EAApB/N,EAAoB,UAAAY,EAAA,kCAApBZ,EAAoB6J,UAAA,mBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,0XAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAhCzBvJ,EAAAqN,yBAAA,UAAArN,CAA8D,UAA9DA,CAA8D,UAIjBA,EAAAuN,iBAAA,eAASvN,EAAAsN,yBAC9CtN,EAAAyJ,oBAAA,uBACAzJ,EAAAqN,yBAAA,UAAArN,CAEC,cAMOA,EAAA8Q,qBAAA,0BAAStH,EAAAoH,aAAa,GAEtB5Q,EAAAuN,iBAAA,iBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+G,WAAW,GAEpBvQ,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAAtN,cAZIA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,KAAAhP,MAAAwP,oEAmBX5R,CAAoB,yLCtCjCxB,EAAA,WACA0C,EAAA1C,EAAA,2KA6DwBoC,EAAAqN,yBAAA,qBAKIrN,EAAAuN,iBAAA,eACJvN,EAAAsN,+HAGRtN,EAAAqN,yBAAA,WAAArN,CAGC,WAHDA,CAGC,qBAIWA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,wBAAA,UAEbrR,EAAAsR,sBAAAF,EAAAZ,KAAAe,WAAA,CAAAC,mBAAAP,EACI,SAAW,KAE5B,GAE0BjR,EAAAuN,iBAAA,sBACJvN,EAAAsN,wBAAAtN,IAAe,4CATXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAjB,KAAAhP,MAAAgQ,mBAAAxR,CAA2C,iBAAAA,EAAA0R,0BAAA,EAAAC,GAAA,wBAyB3D3R,EAAAqN,yBAAA,cAAArN,CAA0C,SAA1CA,CAA0C,WAK9BA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,mBAAavN,EAAAsN,wBAAAtN,GAEtCA,EAAAyJ,oBAAA,yBACJzJ,EAAAsN,uFAzGJtN,EAAAqN,yBAAA,UAAArN,CAIC,cAJDA,CAIC,SAJDA,CAIC,WAMeA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,wBAAAtN,GAEhCA,EAAAqN,yBAAA,UAAArN,CAAsD,UAAtDA,CAAsD,aAE3BA,EAAAuN,iBAAA,gBAASvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACnCA,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,eAMAzJ,EAAAqN,yBAAA,gBAAWrN,EAAAuN,iBAAA,iCAA0BvN,EAAAsN,wBAAAtN,KAG7CA,EAAAqN,yBAAA,WAAArN,CAAkC,eACZA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAC7BA,EAAAqN,yBAAA,sBACIrN,EAAAuN,iBAAA,4CACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,eAETA,EAAAuN,iBAAA,iBAAUvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACzCA,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAU,GAAA,IAAAC,EAAA7R,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAO,EAAArB,KAAAe,WAAA,CAAAO,KAAAb,IAAiC,GAErDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAmC,eACTA,EAAAuN,iBAAA,eAAQvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACrCA,EAAAyJ,oBAAA,0BASAzJ,EAAA+R,qBAAA,GAAAC,EAAA,uBAOJhS,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAAE,EAAA,cAkBJjS,EAAAsN,yBAEAtN,EAAAqN,yBAAA,eAAArN,CAAqB,UAArBA,CAAqB,YAKTA,EAAAuN,iBAAA,UACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAqBrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,wBAAAtN,GAE7BA,EAAAyJ,oBAAA,yBACJzJ,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAG,EAAA,kBAWJlS,EAAAsN,wBAAA,6CAvGItN,EAAA+Q,qBAAA,YAAAoB,EAAA3B,MAoCgBxQ,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA3B,KAAAhP,MAAAsQ,KAAA9R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAC,IAU3B3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAqB,EAAAD,EAAA3B,KAAA/K,IAAA,cAAA2M,EAAA5Q,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAQ/BA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAE,eASRrS,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAG,kBA6BatS,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAI,aAAA,EAerB7S,2BAAyB,eAAzB8S,EAAyB,SAAA7R,GAAAC,EAAA4R,EAAA7R,GAAA,IAAAG,EAAAC,EAAAyR,GAOlC,SAAAA,EACYnC,EACArP,GAA0B,IAAAI,EAAAvB,SAAAC,KAAA0S,IAElCpR,EAAAN,EAAAO,KAAAvB,OAHQuQ,WACAjP,EAAAJ,YARII,EAAAoP,KAAOpP,EAAKiP,SAASG,KAAKpP,CAW1C,CAACxB,SAAA4S,EAAA,EAAAjR,IAAA,eAAAkE,IATD,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,4BAC9B,GAAC,CAAAlE,IAAA,WAAAC,MASM,WAAQ,IAAAiR,EAAAC,EAAAzN,EAAAnF,KACXA,KAAKuQ,SAASsC,WAAW,CAAEC,KAAM,SACjC9S,KAAK+S,aACD,SAEqB,QAFbJ,EACR3S,KAAKuQ,SAASG,KACT/K,IAAI,oBAAY,IAAAgN,GACH,QADGC,EADrBD,EAEMK,oBAAY,IAAAJ,OADG,EADrBA,EAEoBK,UAAU,SAACC,GAAI,OAC3BA,EAAK7N,OAASF,EAAKgO,gBAAgBD,EAAK,IAAM,EAAE,GAGhE,GAAC,CAAAzR,IAAA,kBAAAC,MAEO,SAAgB0R,GAAU,IAAAC,EAAAC,EACzBF,GACLpT,KAAKuQ,SAASG,KAAKe,WAAW,CAC1BP,SAAUkC,GAAMG,GAChBC,WAAYJ,EAAKK,KACjBC,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BI,YAAaP,EAAKK,KAClBG,aAAc,OACdC,MAAOT,EAAKU,KAAO,CAAU,QAAVT,EAACD,EAAKU,YAAI,IAAAT,OAAA,EAATA,EAAWU,UAAoB,QAAXT,EAAEF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,IAAM,GAC3DS,cAAeZ,GAEvB,KAACV,CAAA,CArCiC,CAAQlS,EAAAiI,cAAjCiK,SAAyB,mBAAAzS,iBAAzByS,GAAwBxS,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA,EAAxB8J,EAAyB,UAAAxS,EAAA,kCAAzBwS,EAAwBvJ,UAAA,wBAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,utCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA9G7BvJ,EAAA+R,qBAAA,EAAAgC,EAAA,oBAEK/T,EAAA+Q,qBAAA,OAAAvH,EAAAgH,yTA4GAgC,CAAyB,sJCrHtC5U,EAAA,uGAmCa8B,8BAA2B,eAA3BL,EAA2BO,EAGpC,SAAAP,EAAoBgR,GAA4BxQ,EAAAC,KAAAT,GAA5BS,KAAAuQ,WAFJvQ,KAAAkU,aAAelU,KAAKuQ,SAAS2D,YAEM,GAH1C3U,SAA2B,mBAAAU,iBAA3BV,GAA2BW,EAAAwI,4BAAAC,EAAAoI,oBAAA,EAA3BxR,EAA2B,UAAAW,EAAA,kCAA3BX,EAA2B4J,UAAA,2BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,0PAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA9BhCvJ,EAAAqN,yBAAA,UAAArN,CAEC,UACwBA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,yBACvCtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,6BACAvN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAwDvN,EAAAsN,yBAC3DtN,EAAAuN,iBAAA,4FAOJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,oBACJvN,EAAAsN,wBAAAtN,UAXOA,EAAAwN,oBAAA,GAAAxN,EAAAiU,6BAAA,MAAAzK,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAV,cAAA,MAAA9J,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAhD,WACHhR,EAAAwN,oBAAA,GAAAxN,EAAAkU,6BAAA,yCAAAlU,EAAAmU,sBAAA,UAAA3K,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAlC,KAAA,uBAAA9R,EAAAmU,sBAAA,WAAA3K,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAlC,KAAA,mBAAA9R,EAAAmU,sBAAA,aAAA3K,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAlC,MAAA,UAAAtI,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAI,UAAA,sBAQiBpU,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA/Q,EAAA0R,0BAAA,GAAAC,4LAcpBtS,CAA2B,kJCnCxCzB,EAAA,OAIAA,EAAA,OAJA,IAKA0C,EAAA1C,EAAA,OAEAyW,GADAzW,EAAA,OACAA,EAAA,yEAoCa8B,0BAAuB,eAAvBR,EAAuB,WAShC,SAAAA,EACYmR,EACAC,EACAgE,GAA6B,IAAAlT,EAAAtB,KAAAD,EAAAC,KAAAZ,GAF7BY,KAAAuQ,WACAvQ,KAAAwQ,UACAxQ,KAAAwU,gBATIxU,KAAAyQ,UAAY,kBAAMnP,EAAKiP,SAASE,WAAW,CAUxD,CAAC3Q,SAAAV,EAAA,EAAAqC,IAAA,OAAAkE,IARJ,WACI,OAAO3F,KAAKuQ,SAASG,IACzB,GAAC,CAAAjP,IAAA,cAAAC,MAQM,WAAW,IAAA4E,EAAAnB,EAAAnF,KAGd,GAFKA,KAAK0Q,KAAKhP,MAAM+S,MACjBzU,KAAK0Q,KAAKe,WAAW,CAAEgD,KAAmB,QAAfnO,KAAE9F,EAAAsG,sBAAa,IAAAR,OAAA,EAAbA,EAAeU,SAC3ChH,KAAK0Q,KAAKgE,MACX,SAAOlU,EAAAmU,aAAW,6BAAAvQ,UACe5D,EAAAoU,kBAAiB5U,KAAK0Q,MAAMmE,KACrD,MACH,MAET7U,KAAK8U,UAAY9U,KAAKwU,cAAcO,KAAKR,EAAAS,6BACzChV,KAAK8U,UAAUG,SAASC,YAAa,EACrClV,KAAK8U,UAAUK,iBAAiBlC,UAAU,SAACvR,GACnCA,IACAyD,EAAKqL,QAAQK,SAAS,CAAC,QAAS,UAAW,YAC3C1L,EAAKoL,SAAS6E,QAAQ,WAE9B,EACJ,KAAChW,CAAA,CAhC+B,GAAvBA,SAAuB,mBAAAa,iBAAvBb,GAAuBc,EAAAwI,4BAAAC,EAAA0M,kBAAAnV,EAAAwI,4BAAAG,EAAAwE,QAAAnN,EAAAwI,4BAAAK,EAAAuM,gBAAA,EAAvBlW,EAAuB,UAAAc,EAAA,kCAAvBd,EAAuB+J,UAAA,sBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,+WAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/B5BvJ,EAAAqN,yBAAA,UAAArN,CAA8D,UAA9DA,CAA8D,UAIjBA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACjDtN,EAAAyJ,oBAAA,0BACAzJ,EAAAqN,yBAAA,UAAArN,CAEC,cAKOA,EAAA8Q,qBAAA,0BAAStH,EAAAoH,aAAa,GAEtB5Q,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+G,WAAW,GAEpBvQ,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAAtN,oEAOPd,CAAuB,4LC3CpCtB,EAAA,WACA0C,EAAA1C,EAAA,OAQAyX,GAFAzX,EAAA,OACAA,EAAA,MACAA,EAAA,gRAiDgCoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAuE,GAEAtV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA6H,EAAAC,cAAAD,EAAA/B,KAAA,2GApBhBvT,EAAAqN,yBAAA,WAAArN,CAGC,cACsBA,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC3BtN,EAAAqN,yBAAA,sBAAArN,CAAoD,mBAI5CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAsE,GAAA,IAAAC,EAAAzV,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAmE,EAAAC,YAAAzE,GAAmB,6FAOpCjR,EAAA+R,qBAAA,EAAA4D,EAAA,mDAMJ3V,EAAAsN,wBAAAtN,IAAa,8CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAC,EAAAC,UAAA9V,CAA4B,iBAAAA,EAAA0R,0BAAA,GAAAC,GAA5B3R,CAA4B,sBAAA+V,EAAA/V,EAAA4V,sBAAA,IAAAC,EAAAC,WAAA,KAAAC,EAAAR,gBAAA,OAAAQ,EAAA/V,EAAA4V,sBAAA,IAAAC,EAAAC,WAAA,KAAAC,EAAAxC,OASRvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,KAAAC,EAAAG,WAAA,wBAsDxBhW,EAAAqN,yBAAA,qBAIKrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,gDAIpBtN,EAAAqN,yBAAA,WAAArN,CAAgD,cAC1BA,EAAAuN,iBAAA,UAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,wBAAAtN,GAC7BA,EAAAyJ,oBAAA,0BAIJzJ,EAAAsN,uFAGRtN,EAAAqN,yBAAA,cAAArN,CAA6C,SAA7CA,CAA6C,WAKjCA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,eAASvN,EAAAsN,yBAC9BtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAC,EAAAlW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA4E,EAAAC,oBAAmB,GAE5BnW,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAG,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAAC,WAAAC,WAAAF,EAAAC,WAAAC,UAA4C,GAErDtW,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,2BAIJzJ,EAAAsN,wBAAAtN,EAAM,4CAbYA,EAAAwN,oBAAA,IAAAxN,EAAAiU,4BAAA7C,EAAAiF,WAAAC,UAAA,6BAOdtW,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAK,EAAAiF,WAAAC,UAAA,wIAqCRtW,EAAAqN,yBAAA,cAAArN,CAA0C,SAA1CA,CAA0C,WAK9BA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC7BtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqF,GAAA,IAAAC,EAAAxW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAkF,EAAAH,WAAAI,UAAAD,EAAAH,WAAAI,SAA0C,GAEnDzW,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,6BAQJzJ,EAAAsN,wBAAAtN,EAAM,4CAjBYA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAyC,EAAAL,WAAAI,SAAA,6BAOdzW,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA2F,EAAAL,WAAAI,SAAA,eAIIzW,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA2W,0BAAA,EAAAC,EAAAF,EAAAlG,KAAAhP,MAAAsQ,KAAA4E,EAAAlG,KAAAhP,MAAA4S,SAAA,MAAAsC,EAAAlG,KAAAhP,MAAAqV,UAAA,UAAAH,EAAAlG,KAAAhP,MAAAqV,UAAA,GAAAC,MAAA,KAAAJ,EAAAlG,KAAAhP,MAAAqV,UAAA,GAAAC,MAAAjD,WAAA,2BAoCZ7T,EAAAqN,yBAAA,cAAArN,CAAyC,UAAzCA,CAAyC,WAK7BA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAE9BA,EAAAqN,yBAAA,WAAArN,CAAkC,cACXA,EAAAuN,iBAAA,uCAAiCvN,EAAAsN,yBACpDtN,EAAAyJ,oBAAA,wBAKJzJ,EAAAsN,wBAAAtN,4CAXQA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAoE,EAAAkF,aAAA,2EAvPhB/W,EAAAqN,yBAAA,UAAArN,CAIC,cAJDA,CAIC,SAJDA,CAIC,WAMeA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,yBAC5BtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8F,GAAA,IAAAC,EAAAjX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA2F,EAAAZ,WAAAa,SAAAD,EAAAZ,WAAAa,QAAwC,GAEjDlX,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAA+R,qBAAA,GAAAoF,EAAA,8CAyBAnX,EAAAqN,yBAAA,YAAArN,CAAmD,YAAnDA,CAAmD,eAExBA,EAAAuN,iBAAA,gBAASvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACnCA,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMAzJ,EAAAqN,yBAAA,gBACKrN,EAAAuN,iBAAA,iCAA0BvN,EAAAsN,wBAAAtN,KAIvCA,EAAAqN,yBAAA,YAAArN,CAA0B,eACJA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAC7BA,EAAAqN,yBAAA,sBACIrN,EAAAuN,iBAAA,4CACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,eAG5BA,EAAAuN,iBAAA,iBAAUvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAEtBA,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA8F,GAAA,IAAAI,EAAApX,EAAAqR,0BAAA,OAE7BrR,EAAAsR,sBAAA8F,EAAA5G,KAAAe,WAAA,CAAAO,KAAAb,IACD,GAC2BjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAmC,eACTA,EAAAuN,iBAAA,eAAQvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACrCA,EAAAqN,yBAAA,0BAMIrN,EAAAuN,iBAAA,2CACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAsF,EAAA,uBAMJrX,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAAuF,EAAA,cAOJtX,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAAwF,EAAA,mBAoCAvX,EAAAqN,yBAAA,eAAArN,CAAqB,UAArBA,CAAqB,YAKTA,EAAAuN,iBAAA,UACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAqBrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACzBtN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8F,GAAA,IAAAQ,EAAAxX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAkG,EAAAnB,WAAAQ,WAAAW,EAAAnB,WAAAQ,UAA4C,GAErD7W,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,0BAIJzJ,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAA0F,EAAA,mBAiCAzX,EAAAqN,yBAAA,eAAArN,CAAqB,UAArBA,CAAqB,YAKTA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAqBrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAC3BtN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8F,GAAA,IAAAU,EAAA1X,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoG,EAAArB,WAAAsB,QAAAD,EAAArB,WAAAsB,OAAsC,GAE/C3X,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,0BAGJzJ,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAA6F,EAAA,mBAkBJ5X,EAAAsN,wBAAA,6CAjQItN,EAAA+Q,qBAAA,YAAAoB,EAAA3B,MAgBsBxQ,EAAAwN,oBAAA,IAAAxN,EAAAiU,4BAAA9B,EAAAkE,WAAAa,QAAA,6BAOdlX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAAkE,WAAAa,QAAA,eAIKlX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAqB,EAAApS,EAAA4V,sBAAA,MAAAzD,EAAA6D,YAAA,KAAA5D,EAAAjN,QAAA,GAoDOnF,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA3B,KAAAhP,MAAAsQ,KAAA9R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAC,IAY3B3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAA3B,MAAA,MAAA2B,EAAA3B,KAAAhP,MAAA,KAAA2Q,EAAA3B,KAAAhP,MAAAsQ,KAAA9R,CAA0B,MAAAmS,EAAA0F,cAOzB7X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAE,eAMPrS,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAA2F,qBASQ9X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAA4F,gBAkDA/X,EAAAwN,oBAAA,IAAAxN,EAAAiU,4BAAA9B,EAAAkE,WAAAQ,UAAA,6BAOd7W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAAkE,WAAAQ,UAAA,eAQc7W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAA4E,cAsCV/W,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4E,aAAA,aASU/W,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAkE,WAAAsB,OAAA,6BAOd3X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAAkE,WAAAsB,OAAA,eAOc3X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAA6F,WAAA,EAuBrBtY,8BAA4B,eAA5BuY,EAA4B,SAAAtX,GAAAC,EAAAqX,EAAAtX,GAAA,IAAAG,EAAAC,EAAAkX,GA2DrC,SAAAA,EACY5H,EACArP,EACAkX,EACAjX,GAAyB,IAAAG,EAAAvB,SAAAC,KAAAmY,IAEjC7W,EAAAN,EAAAO,KAAAvB,OALQuQ,WACAjP,EAAAJ,YACAI,EAAA8W,UACA9W,EAAAH,OA9DIG,EAAAoP,KAAOpP,EAAKiP,SAASG,KAE9BpP,EAAAiV,WAAsC,GAE7BjV,EAAA0U,SAAW1U,EAAKH,KAAKkX,gBACrB/W,EAAA4U,UAAY5U,EAAKH,KAAKmX,cAAchX,CA4DpD,CAACxB,SAAAqY,EAAA,EAAA1W,IAAA,eAAAkE,IA1DD,WACI,QACM3F,KAAKkB,UAAUyE,IAAI,kCACnB3F,KAAKkB,UAAUyE,IAAI,0BAE7B,GAAC,CAAAlE,IAAA,aAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,wBAChC,GAAC,CAAAlE,IAAA,iBAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,4BAChC,GAAC,CAAAlE,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAlE,IAAA,sBAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,iCAC9B,GAAC,CAAAlE,IAAA,gBAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,2BAC9B,GAAC,CAAAlE,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,0BAC9B,GAAC,CAAAlE,IAAA,oBAAAC,MAEM,WAAiB,IAAAyD,EAAAnF,KACpBuY,EAAiDvY,KAAK0Q,KAAKhP,MAA7BsQ,GAAIuG,EAAJvG,KAAMsC,GAAQiE,EAARjE,SAC9BkE,GAAMxY,KAAKoY,QAAQrD,KAAKQ,EAAAkD,+BAAgC,CAC1D3V,KAAM,CACF4V,MAHSH,EAAT/B,UAIA/B,KAJoB8D,EAATI,YAILA,EAAanY,EAAAsG,eACnBkL,QACAsC,eAGRkE,GAAII,cAAc3F,UAAU,SAAC4F,IACpBA,IACL1T,EAAKuL,KAAKe,WAAW,CACjBO,KAAMwG,GAAIM,kBAAkB9G,KAC5BwE,UAAWgC,GAAIM,kBAAkBJ,MAAMK,WACvCzE,SAAUkE,GAAIM,kBAAkBxE,UAExC,EACJ,GAAC,CAAA7S,IAAA,cAAAC,MAWM,SAAYsX,GACfhZ,KAAKmB,KAAK6U,SAAWgD,EACrBhZ,KAAKmB,KAAK8X,aAAaD,EAAIzF,GAC/B,KAAC4E,CAAA,CAvEoC,CAAQ3X,EAAAiI,cAApC0P,SAA4B,mBAAAlY,iBAA5BkY,GAA2BjY,EAAAwI,4BAAAC,EAAA0M,kBAAAnV,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAmQ,WAAAhZ,EAAAwI,4BAAAO,EAAAH,qBAAA,EAA3BqP,EAA4B,UAAAjY,EAAA,kCAA5BiY,EAA2BhP,UAAA,2BAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,muDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAzQhCvJ,EAAA+R,qBAAA,EAAAkH,EAAA,oBAEKjZ,EAAA+Q,qBAAA,OAAAvH,EAAAgH,4fAqQG,CAAClQ,EAAA4Y,mCAEJjB,CAA4B,yJCvRzCra,EAAA,yGA2Ca8B,iCAA8B,eAA9BP,EAA8BS,EAGvC,SAAAT,EAAoBkR,GAA0BxQ,EAAAC,KAAAX,GAA1BW,KAAAuQ,WAFJvQ,KAAAkU,aAAelU,KAAKuQ,SAAS2D,YAEI,GAHxC7U,SAA8B,mBAAAY,iBAA9BZ,GAA8Ba,EAAAwI,4BAAAC,EAAA0M,kBAAA,EAA9BhW,EAA8B,UAAAa,EAAA,kCAA9Bb,EAA8B8J,UAAA,8BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,0PAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtCnCvJ,EAAAqN,yBAAA,UAAArN,CAEC,UACwBA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,yBACvCtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,gCACAvN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAEDvN,EAAAsN,yBACFtN,EAAAuN,iBAAA,4FAOJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAOIrN,EAAAuN,iBAAA,oBACJvN,EAAAsN,wBAAAtN,UAnBOA,EAAAwN,oBAAA,GAAAxN,EAAAiU,6BAAA,MAAAzK,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAnO,YAAA,MAAA2D,EAAAwK,cAAA,MAAAxK,EAAAwK,aAAAmF,OAAA,KAAA3P,EAAAwK,aAAAmF,OAAA5D,eAGHvV,EAAAwN,oBAAA,GAAAxN,EAAAkU,6BAAA,yCAAAlU,EAAAmU,sBAAA,UAAA3K,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAlC,KAAA,uBAAA9R,EAAAmU,sBAAA,WAAA3K,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAlC,KAAA,mBAAA9R,EAAAmU,sBAAA,aAAA3K,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAlC,MAAA,UAAAtI,EAAAwK,aAAA,KAAAxK,EAAAwK,aAAAI,UAAA,sBAYApU,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA/Q,EAAA0R,0BAAA,GAAAC,+LAgBHxS,CAA8B,qIC3C3C,IAAAmB,EAAA1C,EAAA,OACA8L,EAAA9L,EAAA,OACAD,EAAAC,EAAA,OACAkM,EAAAlM,EAAA,OACAmM,EAAAnM,EAAA,MAIAC,EAAAD,EAAA,OAEAyM,EAAAzM,EAAA,OACA8M,EAAA9M,EAAA,OACAK,EAAAL,EAAA,OACAwb,EAAAxb,EAAA,OACAyb,EAAAzb,EAAA,kBAOM0b,YAAkB,CACpB,CACI9a,KAAM,OACNC,UAAWZ,EAAAyB,sBAgCNI,aAAU,eAAV8L,EAAU5L,EAAA,SAAA4L,IAAA3L,EAAAC,KAAA0L,EAAA,GAAVA,SAAU,mBAAAzL,iBAAVyL,EAAU,EAAVA,EAAU,UAAAxL,EAAA,iCAAVwL,MAAU,UAAAxL,EAAA,qCAffM,EAAAiZ,aACA5b,EAAAsC,aAAauZ,SAASF,GACtB5O,EAAAe,sBACA/B,EAAAiC,YACAjC,EAAAwC,oBACAnC,EAAA6B,oBACA7B,EAAA0P,iBACApP,EAAA4B,iBACAoN,EAAAK,qBACA3P,EAAA6B,oBACA9B,EAAA+B,kBACAuN,EAAAO,sBACA1b,EAAAgR,oBAGKzD,CAAU,oJCxDvB5N,EAAA,OACAA,EAAA,OADA,IAGAgc,EAAAhc,EAAA,6DAOa8B,4BAAyB,eAAzBT,EAAyB,WAWlC,SAAAA,EAAoB4a,EAAkCvJ,GAAezQ,EAAAC,KAAAb,GAAjDa,KAAA+Z,SAAkC/Z,KAAAwQ,SAAkB,CAAC1Q,SAAAX,EAAA,EAAAsC,IAAA,OAAAkE,IAVzE,WACI,OAAO3F,KAAK+Z,OAAOrJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,MAUD,WAAQ,IAAAsY,EAAAC,EAAAC,EAAAC,EAAAC,EACJpa,KAAK+F,SAAmC,QAA3BiU,EAAGha,KAAK+Z,OAAO7F,oBAAY,IAAA8F,OAAA,EAAxBA,EAA0BjU,SAC1C/F,KAAKgS,QAAO8H,EAAAO,IAA2B,QAAzBJ,EAACja,KAAK+Z,OAAO7F,oBAAY,IAAA+F,OAAA,EAAxBA,EAA0BjI,MACzChS,KAAKsa,eAAcR,EAAAO,IACf,IAAIE,KAA6B,QAAzBL,EAACla,KAAK+Z,OAAO7F,oBAAY,IAAAgG,OAAA,EAAxBA,EAA0BlI,MAAMwI,mBACrC,QACA,CACIC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAIpB3a,KAAKsU,SAAmC,QAA3B6F,EAAGna,KAAK+Z,OAAO7F,oBAAY,IAAAiG,OAAA,EAAxBA,EAA0B7F,SAC1CtU,KAAK4a,aAAYd,EAAAO,IACb,IAAIE,MACwB,QAAxBH,EAAApa,KAAK+Z,OAAO7F,oBAAY,IAAAkG,OAAA,EAAxBA,EAA0BpI,MAAuB,GAAhBhS,KAAKsU,SAAgB,KACxDkG,mBAAmB,QAAS,CAC1BC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGpB,GAAC,CAAAlZ,IAAA,aAAAC,MACD,WACI1B,KAAKwQ,QAAQK,SAAS,CAAC,eAC3B,KAAC1R,CAAA,CAvCiC,GAAzBA,SAAyB,mBAAAc,iBAAzBd,GAAyBe,EAAAwI,4BAAAC,EAAA0M,kBAAAnV,EAAAwI,4BAAAG,EAAAwE,QAAA,EAAzBlO,EAAyB,UAAAe,EAAA,kCAAzBf,EAAyBgK,UAAA,wBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,gkBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICXtCvJ,EAAAqN,yBAAA,UAAArN,CAAwE,cAAxEA,CAAwE,UAAxEA,CAAwE,UAAxEA,CAAwE,YASpDA,EAAAuN,iBAAA,yBAAkBvN,EAAAsN,wBAAAtN,GAG1BA,EAAAqN,yBAAA,SACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBAEAtN,EAAAqN,yBAAA,UAAArN,CAAmD,YAE1CA,EAAAuN,iBAAA,+HAMLvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,WAAArN,CAAoC,eAI5BA,EAAA8Q,qBAAA,0BAAStH,EAAAmR,YAAY,GAGrB3a,EAAAqN,yBAAA,cAAsBrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,wBAAAtN,kBAfhCA,EAAAwN,oBAAA,IAAAxN,EAAA4a,6BAAA,yBAAApR,EAAA3D,SAAA,yCAAA7F,EAAAmU,sBAAA,KAAAnU,EAAA4V,sBAAA,KAAApM,EAAAsI,MAAA,uBAAA9R,EAAA4V,sBAAA,KAAApM,EAAA4Q,aAAA,MAAApa,EAAA4V,sBAAA,MAAApM,EAAAkR,WAAA,2DDPRzb,CAAyB,sLEVtC,IAAA2a,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,UAEAA,EAAA,4BAKa8B,wBAAqB,eAArBmb,EAAqB,WAiC9B,SAAAA,EAAoBhB,GAAwBha,EAAAC,KAAA+a,GAAxB/a,KAAA+Z,SAhCb/Z,KAAAgb,QAA+Bhb,KAAK+Z,OAAOkB,iBAE3Cjb,KAAAkb,uBACH,IAAIpB,EAAAqB,iBAAyB,GAEjCnb,KAAAob,mBAA2C,IAAItB,EAAAqB,gBAAqB,MACpEnb,KAAAqb,mBACIrb,KAAKob,mBAAmBE,eAK5Btb,KAAAub,UAAkC,IAAIzB,EAAAqB,gBAAqB,MAC3Dnb,KAAAwb,UAA6Bxb,KAAKub,UAAUD,eAQ5Ctb,KAAAyb,cAAuB,CACnB,CAAEhI,KAAM,wBAAyBF,GAAI,UAAW7R,OAAO,GACvD,CAAE+R,KAAM,mBAAoBF,GAAI,YAAa7R,OAAO,GACpD,CAAE+R,KAAM,2BAA4BF,GAAI,WAAY7R,OAAO,GAC3D,CAAE+R,KAAM,aAAcF,GAAI,UAAW7R,OAAO,GAC5C,CAAE+R,KAAM,aAAcF,GAAI,aAAc7R,OAAO,GAC/C,CAAE+R,KAAM,WAAYF,GAAI,WAAY7R,OAAO,GAC3C,CAAE+R,KAAM,YAAaF,GAAI,YAAa7R,OAAO,GAC7C,CAAE+R,KAAM,QAASF,GAAI,QAAS7R,OAAO,IAIrC1B,KAAKub,UAAU/Y,KAAKxC,KAAKyb,cAC7B,CAAC3b,SAAAib,EAAA,EAAAtZ,IAAA,oBAAAkE,IA1BD,WACI,OAAO3F,KAAKob,mBAAmBrC,UACnC,GAAC,CAAAtX,IAAA,WAAAkE,IAOD,WACI,OAAO3F,KAAKub,UAAUxC,UAC1B,EAAC2C,IALD,SAAaC,GACT3b,KAAKub,UAAU/Y,KAAKmZ,EACxB,GAAC,CAAAla,IAAA,sBAAAC,OAAAka,EAAAja,EAAAC,IAAAC,KAoBD,SAAAC,IAAA,IAAA+Z,EAAA,OAAAja,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAAxC,KAAKqb,mBAAqBrb,KAAKwb,UAAUrY,QACrC7C,EAAAwb,KAAI,SAACC,GAAG,OAAKA,EAAIC,OAAO,SAACC,GAAI,OAAmB,GAAdA,EAAKva,KAAa,EAAC,IACvDY,EAAAE,KAAA,EACIxC,KAAKqb,mBAAmBlY,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAChC,QAAvBuY,EAAA7b,KAAKqb,0BAAkB,IAAAQ,GAAvBA,EAAyB5I,UAAUjT,KAAKob,oBAAoB,wBAAA9Y,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC/D,SAAAmc,IAAA,OAAAP,EAAA5W,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,cAAAC,MAAA,eAAA0a,EAAAza,EAAAC,IAAAC,KACD,SAAA0D,IAAA,IAAA8W,EAAAC,EAAAhb,EAAAtB,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACUxC,KAAKqb,mBAAmBlY,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAAAmC,SAAAjD,KAAA,EAEtBxC,KAAKuc,qBAClCvc,KAAKwc,mBACR,OAFKF,SAAkB7W,EAAAvB,KAIxBlE,KAAKyc,gBAAkBzc,KAAKgb,QAAQ7X,QAChC7C,EAAAwb,KAAI,SAACY,GAAe,OAChBA,EAAOV,OAAO,SAACW,GACX,OAAOrb,EAAKsb,eAAeD,EAAME,cAAc5W,SAC3CqW,EAER,EAAE,IAER7W,EAAAjD,KAAA,EACwB,QADxB6Z,EACIrc,KAAKyc,uBAAe,IAAAJ,OAAA,EAApBA,EAAsBlZ,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OACrDtD,KAAKkb,uBAAuB1Y,MAAK,GAAM,wBAAAiD,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC1C,gBAAA8c,IAAA,OAAAV,EAAApX,MAAAhF,KAAAiF,UAAA,EAnBA,IAmBA,CAAAxD,IAAA,iBAAAC,MAED,SAAeqb,GACX,OAAOA,GAAOC,OAAOnI,MACzB,GAAC,CAAApT,IAAA,uBAAAC,MAAA,eAAAub,EAAAtb,EAAAC,IAAAC,KAED,SAAAwE,EAA2B0W,GAAY,OAAAnb,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACRua,GAAOjB,IAAI,SAACG,GAAI,OAAKA,EAAK1I,EAAE,GAAC,OAApD2J,OAAczW,EAAA9C,OAAA,SACX3D,KAAK4c,eADMnW,EAAAvC,OACwB,wBAAAuC,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IAC7C,gBAAAuc,EAAAY,GAAA,OAAAF,EAAAjY,MAAAhF,KAAAiF,UAAA,EALA,IAKA,CAAAxD,IAAA,cAAAC,MAED,WAAW,IAAA0b,EACPpd,KAAKob,mBAAmB5Y,KAAK,MACX,QAAlB4a,EAAApd,KAAKyb,qBAAa,IAAA2B,GAAlBA,EAAoBtB,IAAI,SAACH,GAAO,OAAMA,EAAQja,OAAQ,CAAK,GAC3D1B,KAAKub,UAAU/Y,KAAKxC,KAAKyb,eACzBzb,KAAKkb,uBAAuB1Y,MAAK,EACrC,GAAC,CAAAf,IAAA,YAAAC,MAED,WAAS,IAAA2b,EACY,QAAjBA,EAAArd,KAAKsd,oBAAY,IAAAD,GAAjBA,EAAmBE,aACvB,KAACxC,EAjEA,IAAAa,CAiEA,CAlF6B,GAArBb,SAAqB,mBAAA9a,iBAArB8a,GAAqB7a,EAAAsd,mBAAA7U,EAAA0M,kBAAA,EAArB0F,EAAqB,WAAA7a,EAAA,oCAArB6a,EAAqB0C,QAArB1C,EAAqB2C,UAAAC,WAFlB,SAEH5C,CAAqB,+ICPlC,IAAAxB,EAAAzb,EAAA,UAIAA,EAAA,OACAA,EAAA,OACAA,EAAA,mNCqBoBoC,EAAAqN,yBAAA,cAIIrN,EAAAuN,iBAAA,gBACJvN,EAAAsN,mDAeQtN,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA2M,GAEA1d,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAiQ,EAAAnI,cAAAmI,EAAAnK,KAAA,2GAjBZvT,EAAAqN,yBAAA,sBAAArN,CAMC,mBAIOA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAU,GAAA,IAAAC,EAAA7R,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAO,EAAA6D,YAAAzE,GAAmB,iCAGpCjR,EAAA+R,qBAAA,EAAA4L,EAAA,mDAMJ3d,EAAAsN,wBAAAtN,EAAa,4CAVTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAnE,EAAAqE,UAAA9V,CAA4B,iBAAAA,EAAA0R,0BAAA,EAAAkF,IAKR5W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAnE,EAAAuE,WAAA,+DAqEhChW,EAAAqN,yBAAA,QAAArN,CAA+C,WAA/CA,CAA+C,UAEhCA,EAAAuN,iBAAA,GAAkBvN,EAAAsN,yBACzBtN,EAAAqN,yBAAA,qBACIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA2M,EAAA5d,EAAAkR,wBAAAsE,GAAA,OAAaxV,EAAAsR,sBAAbsM,EAAAC,UAAarc,MAAAyP,EACnC,EADsBjR,CAA2B,oBAAAA,EAAAkR,wBAAAsE,GAAA,IAAAU,EAAAlW,EAAAqR,wBAAA,UAGjBrR,EAAAsR,sBAAA4E,EAAA+F,sBAAqB,GAClCjc,EAAAsN,wBAAAtN,IAAe,2BANTA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqQ,EAAAvK,KAAA,IAEHvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA+M,EAAAtc,MAAAxB,CAA2B,iBAAAA,EAAA0R,0BAAA,EAAAkF,GAAA,+DA1HnD5W,EAAAqN,yBAAA,WAAArN,CAAsC,cAAtCA,CAAsC,UAAtCA,CAAsC,UAAtCA,CAAsC,cAQCA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6M,GAAA,IAAAC,EAAAhe,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0M,EAAAC,aAAY,GACxCje,EAAAqN,yBAAA,gBAEKrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAIdA,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,oBAAavN,EAAAsN,wBAAAtN,OAK7BA,EAAAqN,yBAAA,cAAArN,CAAqE,WAArEA,CAAqE,aAInCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBAEjCtN,EAAAqN,yBAAA,aACIrN,EAAA+R,qBAAA,GAAAmM,EAAA,+CAOAle,EAAA+R,qBAAA,GAAAoM,EAAA,wDAsBAne,EAAAqN,yBAAA,YAAArN,CAA2B,eAEnBA,EAAAuN,iBAAA,aACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,sBAKAzJ,EAAAqN,yBAAA,YAAArN,CAA4C,YAA5CA,CAA4C,eAKhCA,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA6M,GAAA,IAAAvH,EAAAxW,EAAAqR,0BAAA,OAE7BrR,EAAAsR,sBAAAkF,EAAAhG,KAAAe,WAAA,CAAAO,KAAAb,IACL,GAC+BjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAgD,eAIxCA,EAAAuN,iBAAA,kBACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,0BAOJzJ,EAAAsN,wBAAAtN,WAOpBA,EAAAqN,yBAAA,eAAArN,CAAqE,WAArEA,CAAqE,aAInCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,YAAArN,CAAgC,WACtBA,EAAAuN,iBAAA,gCAAyBvN,EAAAsN,yBAC/BtN,EAAAyJ,oBAAA,sBACJzJ,EAAAsN,wBAAAtN,KAIRA,EAAAqN,yBAAA,gBAAArN,CAA+C,YAA/CA,CAA+C,aAEbA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBAEpCtN,EAAA+R,qBAAA,GAAAqM,EAAA,6CAWJpe,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,gBAAArN,CAEC,gBAKOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6M,GAAA,IAAAM,EAAAre,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+M,EAAAC,eAAc,GAGvBte,EAAAqN,yBAAA,cAAerN,EAAAuN,iBAAA,oBAAavN,EAAAsN,wBAAAtN,MAAO,+CA9I5BA,EAAA+Q,qBAAA,YAAAoB,EAAA3B,MA8BExQ,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,eAAAwN,EAAAve,EAAA4V,sBAAA,MAAAzD,EAAA6D,YAAA,KAAAuI,EAAApZ,QAAA,GAUAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAgF,EAAA/V,EAAA4V,sBAAA,MAAAzD,EAAA6D,YAAA,KAAAD,EAAA5Q,QAAA,GAsBGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAqM,SAaQxe,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAoB,EAAA3B,KAAA,KAAA2B,EAAA3B,KAAAhP,MAAAsQ,KAAA9R,CAA4B,iBAAAA,EAAA0R,0BAAA,GAAAkF,IAc5B5W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAA3B,KAAA,KAAA2B,EAAA3B,KAAAhP,MAAAsQ,KAAA9R,CAAyB,UAAzBA,CAAyB,SAAzBA,CAAyB,WA6BpBA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,MAAAzD,EAAAmJ,WAAA,EDvG5B5b,uBAAoB,eAApB+e,EAAoB,WAQ7B,SAAAA,EAC0C7b,EAC9B8b,EACAC,EACA9E,EACA5Y,GAAyB,IAAAG,EAAAtB,KAAAD,EAAAC,KAAA2e,GAJK3e,KAAA8C,OAC9B9C,KAAA4e,kBACA5e,KAAA6e,yBACA7e,KAAA+Z,SACA/Z,KAAAmB,OAZHnB,KAAAkW,UAAYlW,KAAKmB,KAAKmX,cACtBtY,KAAAgW,SAAWhW,KAAKmB,KAAKkX,gBAC9BrY,KAAA0e,QAAgB,IAAInE,KAGJva,KAAA4V,YAAc,SAACkJ,GAAC,OAAKxd,EAAKH,KAAK6U,SAAW8I,CAAC,CAQxD,CAAChf,SAAA6e,EAAA,EAAAld,IAAA,WAAAC,MAEJ,WACI1B,KAAKwb,UAAYxb,KAAK6e,uBAAuBrD,SACjD,GAAC,CAAA/Z,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAK+Z,OAAOrJ,IACvB,GAAC,CAAAjP,IAAA,eAAAC,MAED,WACI1B,KAAK4e,gBAAgBG,QAAQ/e,KAAK0Q,MAClC1Q,KAAK6e,uBAAuB/B,aAChC,GAAC,CAAArb,IAAA,sBAAAC,MAED,WACI1B,KAAK6e,uBAAuB1C,qBAChC,GAAC,CAAA1a,IAAA,aAAAC,MAED,WACI1B,KAAK4e,gBAAgBG,SACzB,KAACJ,CAAA,CAnC4B,GAApBA,SAAoB,mBAAA1e,iBAApB0e,GAAoBze,EAAAwI,4BASjB6Q,EAAAyF,uBAAqB9e,EAAAwI,4BAAAC,EAAAsW,mBAAA/e,EAAAwI,4BAAAG,EAAAkS,uBAAA7a,EAAAwI,4BAAAK,EAAAsM,kBAAAnV,EAAAwI,4BAAAO,EAAAH,qBAAA,EATxB6V,EAAoB,UAAAze,EAAA,kCAApBye,EAAoBxV,UAAA,yBAAA+V,MAAArN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wwDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IChBjCvJ,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAAkN,EAAA,gBAkJJjf,EAAAsN,gCAlJWtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,yTDeEiO,CAAoB,iJEhBjC,IAAA1U,EAAAnM,EAAA,UACAA,EAAA,sCAOa8B,yBAAsB,eAAtBwf,EAAsBtf,EALnC,SAAAsf,IAAA,IAAA9d,EAAAtB,KAAAD,EAAAC,KAAAof,GAOoBpf,KAAAqf,UAAoB,EACnBrf,KAAAsf,eAAiB,IAAIrV,EAAAsV,aAE7Bvf,KAAAwf,eAAiB,kBAAMle,EAAKge,eAAeG,MAAMne,EAAK+d,SAAS,IAL/DD,SAAsB,mBAAAnf,iBAAtBmf,EAAsB,EAAtBA,EAAsB,UAAAlf,EAAA,kCAAtBkf,EAAsBjW,UAAA,sBAAAuW,OAAA,CAAA/C,MAAA,QAAA0C,SAAA,YAAAM,QAAA,CAAAL,eAAA,kBAAAhW,MAAA,GAAAC,KAAA,EAAA+D,OAAA,iOAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICRnCvJ,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA8V,gBAAgB,GAEzBtf,EAAAqN,yBAAA,UAAArN,CAAyD,gBAC3BA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACtCtN,EAAAqN,yBAAA,SACKrN,EAAAuN,iBAAA,GACuCvN,EAAAsN,wBAAAtN,GAGhDA,EAAAqN,yBAAA,UAAArN,CAAyD,gBAC3BA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBAC/BtN,EAAAqN,yBAAA,SAAKrN,EAAAuN,iBAAA,IAAiCvN,EAAAsN,wBAAAtN,YAb1CA,EAAA0f,sBAAA,aAAAlW,EAAA2V,SAAAnf,CAA6B,aAAAwJ,EAAA2V,UAOpBnf,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,UAAAnW,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAvB,gBAAA,MAAA/L,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAvD,MAAA,YAAA/J,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAlH,gBAAA,MAAA/L,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAlJ,MAAA,IAMAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAmD,WAAA,4DDRAV,CAAsB,+PEPnCthB,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MAHA,IAKAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OACAiiB,EAAAjiB,EAAA,OAKA0C,GAJA1C,EAAA,OACAA,EAAA,OAEAA,EAAA,MACAA,EAAA,WAEAA,EAAA,8OCWwBoC,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,iCAEJvN,EAAAsN,kEAFItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAA4V,sBAAA,IAAAzD,GAAAgJ,oBAAAhW,OAAA,8EAmEAnF,EAAAqN,yBAAA,wBAIIrN,EAAA8Q,qBAAA,0BAAAG,IAAA,IAAA6O,GAAA9f,EAAAkR,wBAAA6M,IAAAF,UAAAG,GAAAhe,EAAAqR,wBAAA,UAE1BrR,EAAAsR,sBAAA0M,GAAA+B,gBAAAD,GAAA7O,IACJ,GAE0BjR,EAAAsN,wBAAA,6DAPItN,EAAA+Q,qBAAA,QAAA+O,GAAA9f,CAAe,WAAAggB,GAAAC,WAAAH,GAAAzM,IAAA,4BAHvBrT,EAAAqN,yBAAA,SACIrN,EAAA+R,qBAAA,EAAAmO,EAAA,wDAUJlgB,EAAAsN,mEAT0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAuK,GAAArF,SAAA,4BA+BV9a,EAAAqN,yBAAA,mBAKKrN,EAAAuN,iBAAA,GAAevN,EAAAsN,mDADhBtN,EAAA+Q,qBAAA,QAAAqP,IACCpgB,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAmM,GAAAtJ,MAAA,iEAnBjB9W,EAAAqN,yBAAA,QAAArN,CAA8C,sBAA9CA,CAA8C,mBAMlCA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAAmP,IAAA,IAAAjJ,GAAApX,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA8F,GAAAkJ,eAAArP,GAAA,EAAAjR,CAA4B,yBAAAiR,IAAAjR,EAAAkR,wBAAAmP,IAAA,IAAA3I,GAAA1X,EAAAqR,wBAAA,UAGnDrR,EAAAsR,sBAAAoG,GAAA6I,oBAAAtP,IACf,GACsCjR,EAAAqN,yBAAA,iDACKrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,yBAEftN,EAAA+R,qBAAA,EAAAyO,EAAA,mDAOJxgB,EAAAsN,wBAAAtN,IAAa,6CAfTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAyF,GAAA8J,gBAKYtgB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,IAAAY,GAAAiK,aAMzBzgB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAY,GAAAiK,YAAA,4BAcSzgB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,wGAQJzJ,EAAAsN,mFAPQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAA2P,GAAA,KAAAA,GAAAlN,OAAAxT,CAAmB,SAAAA,EAAA4V,sBAAA,IAAA+K,GAAAC,aAAnB5gB,CAAmB,WAAAA,EAAA4V,sBAAA,IAAA+K,GAAAE,eAAnB7gB,CAAmB,UAAAA,EAAA4V,sBAAA,IAAA+K,GAAAG,cAAA,4BAN/B9gB,EAAAqN,yBAAA,SACIrN,EAAA+R,qBAAA,EAAAgP,EAAA,eAaJ/gB,EAAAsN,mEAZwBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAiQ,GAAAV,eAAA,4BAexBtgB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,wGAQJzJ,EAAAsN,mEAPQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAkQ,GAAAX,eAAA,KAAAW,GAAAX,eAAA9M,OAAAxT,CAA8B,SAAAA,EAAA4V,sBAAA,IAAAqL,GAAAL,aAA9B5gB,CAA8B,WAAAA,EAAA4V,sBAAA,IAAAqL,GAAAJ,eAA9B7gB,CAA8B,UAAAA,EAAA4V,sBAAA,IAAAqL,GAAAH,cAAA,4BA3B1C9gB,EAAAqN,yBAAA,YAKIrN,EAAA+R,qBAAA,EAAAmP,EAAA,cAiBAlhB,EAAA+R,qBAAA,EAAAoP,EAAA,eAaJnhB,EAAAsN,mEA9BUtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsN,GAAAiC,eAAA,KAAAjC,GAAAiC,eAAAnb,QAkBDnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAsN,GAAAiC,gBAAAjC,GAAAiC,eAAAnb,QAAA,4BAvDbnF,EAAAqN,yBAAA,YAOIrN,EAAA+R,qBAAA,EAAAqP,EAAA,4CAyBAphB,EAAA+R,qBAAA,EAAAsP,EAAA,cAoCJrhB,EAAAsN,sEA7DUtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAuQ,GAAAthB,EAAA4V,sBAAA,IAAAH,GAAAgL,aAAA,KAAAa,GAAAnc,QAAA,GA0BDnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA0E,GAAA6K,eAAA,4BAhDbtgB,EAAAuhB,kCAAA,GAGIvhB,EAAA+R,qBAAA,EAAAyP,EAAA,cAYAxhB,EAAA+R,qBAAA,EAAA0P,EAAA,4CAsEAzhB,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,yBACJtN,EAAA0hB,+EArFU1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAA4Q,GAAAC,YAaD5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAA4Q,GAAAC,aAAA,OAAArD,GAAAve,EAAA4V,sBAAA,IAAA+L,GAAAd,gBAAA,KAAAtC,GAAApZ,QAAA,8BAjBbnF,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAA8P,EAAA,qDAyFJ7hB,EAAA0hB,6GAxFS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAuQ,GAAAthB,EAAA4V,sBAAA,IAAAC,GAAAiF,UAAA,KAAAwG,GAAAnc,QAAA,EAAAnF,CAAqC,WAAA8hB,GAAA,0BA2F1C9hB,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,oCAA8BvN,EAAAsN,wBAAAtN,UADpBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,wCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAEC,OAEOA,EAAAuN,iBAAA,mEAEJvN,EAAAsN,wBAAAtN,oEAQZA,EAAAqN,yBAAA,QAAArN,CAAwC,eAIhCA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6Q,IAAA,IAAAC,GAAAhiB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0Q,GAAAC,kBAAiB,GAG1BjiB,EAAAqN,yBAAA,aAAerN,EAAAuN,iBAAA,eAASvN,EAAAsN,wBAAAtN,IAAO,EDvKtCN,qBAAmB,eAAnBJ,EAAmB,SAAAqB,IAAAC,EAAAtB,GAAAqB,IAAA,IAuB3BE,GAvB2BC,GAAAC,EAAAzB,IA6D5B,SAAAA,GACY4iB,GACAjhB,GACAkhB,GACAtI,GACA8E,GACAyD,GACAC,GACA/R,IAAe,IAAAlP,GAAAvB,SAAAC,KAAAR,KAEvB8B,GAAAN,GAAAO,KAAAvB,OATQoiB,gBACA9gB,GAAAH,QACAG,GAAA+gB,WACA/gB,GAAAyY,UACAzY,GAAAud,0BACAvd,GAAAghB,eACAhhB,GAAAihB,uBACAjhB,GAAAkP,WAhEZlP,GAAAkhB,gBAA2B,GAC3BlhB,GAAAmhB,sBAA0C3I,EAAAO,KAAG,GAM7C/Y,GAAAohB,cAAkD,IAAI5I,EAAAqB,gBAEpD,MACF7Z,GAAA0f,aAAyC,KACzC1f,GAAAwf,YAA0C,KASnCxf,GAAA6e,WAA+B,GAC/B7e,GAAAqhB,WAAsB,GACtBrhB,GAAAshB,iBAAmB,CACtB,CAAEnP,KAAM,eAAgB/R,MAAO,GAC/B,CAAE+R,KAAM,gBAAiB/R,MAAO,GAChC,CAAE+R,KAAM,kBAAmB/R,MAAO,GAClC,CAAE+R,KAAM,kBAAmB/R,MAAO,IAClC,CAAE+R,KAAM,aAAc/R,MAAO,KAGjBJ,GAAA4U,UAAY5U,GAAKH,KAAKmX,cACtBhX,GAAA0U,SAAW1U,GAAKH,KAAKkX,gBAErB/W,GAAAuhB,UAAS/I,EAAAgJ,eAAc,CACnCxhB,GAAK0U,SACL1U,GAAKyY,OAAOgJ,UACb5f,QACC7C,EAAA0b,QAAO,SAAA1V,IAAG,QAAH0c,EAAA1c,GAAA,GAAG,EAAS,MACnBhG,EAAAwb,KAAI,SAAAmH,IAAA,IAAAC,GAAAF,EAAAC,GAAA,GAAK,OACL,CACI1P,GAAIjS,GAAKH,KAAK6U,SAASzC,GACvBE,KAAM,eACTrP,OAAA+e,EACE7hB,GAAKH,KAAKiiB,kBALRF,GAAA,KAK8B,IAI3B5hB,GAAA+hB,QAAU/hB,GAAKyY,OAAOsJ,QACtB/hB,GAAAyhB,QAAUzhB,GAAKyY,OAAOgJ,QAEtBzhB,GAAA0Z,QAA+B1Z,GAAKyY,OAAOkB,iBAC3C3Z,GAAA8H,SAAW9H,GAAK+gB,QAAQjZ,SAExB9H,GAAAsU,YAAc,SAACkJ,IAAC,OAAMxd,GAAKH,KAAK6U,SAAW8I,EAAC,EAC5Cxd,GAAAuR,WAAa,SAACyQ,IAAC,OAAKhiB,GAAKyY,OAAOlH,WAAWyQ,GAAE,EAAChiB,EAa9D,CAACxB,SAAAN,GAAA,EAAAiC,IAAA,OAAAkE,IAnDD,WACI,OAAO3F,KAAK+Z,OAAOrJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,OAAAX,GAAAY,EAAAC,IAAAC,KAmDM,SAAAC,KAAA,IAAA+Z,GAAA0H,GAAApe,GAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAxC,KAAK8hB,WAAa,WAElB9hB,KAAKqb,mBACDrb,KAAK6e,uBAAuBxD,mBAChCrb,KAAK+Z,OAAO3E,QAAQ,QACpBpV,KAAKwjB,eAAelhB,GAAAE,KAAA,EAEdxC,KAAKmB,KAAK+B,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,QAAOA,EAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,EACzDxC,KAAKqiB,QAAQnf,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,QAAOA,EAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,GAC5DxC,KAAK+Z,OAAOkB,iBAAiB9X,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,QAE5D,OAAAtD,KAAK4V,YAAY5V,KAAKmB,KAAK6U,UAC3BhW,KAAKmgB,WAAa,GAClBngB,KAAK+S,aACD,WACuB,QADb8I,GACV7b,KAAKqb,0BAAkB,IAAAQ,QAAA,EAAvBA,GAAyB5I,UAAU,SAACwQ,IAAC,OACjCte,GAAK0N,WAAW,CAAEzJ,SAAUqa,IAAK,IAAK,IAE5CnhB,GAAAE,KAAA,GAEIxC,KAAKsiB,YAAYoB,aAAa1jB,KAAKgb,SAAQ,QAEjD,OAAAhb,KAAK2jB,kBAAoB3jB,KAAKsiB,YAAYqB,kBAE1C3jB,KAAK2gB,WAAwC,QAA9B4C,GAAGvjB,KAAKsiB,YAAY3B,kBAAU,IAAA4C,QAAA,EAA3BA,GAA6BpgB,QAC3C7C,EAAAsjB,KAAI,SAACC,IAAI,OAAM1e,GAAKqb,eAAiBqD,EAAI,IAC3CvhB,GAAAE,KAAA,GAEIxC,KAAKsiB,YAAYwB,iBAClB3gB,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,QAAOA,EAAC,IACrBC,YAAW,QAEhBtD,KAAK+jB,sBAEL/jB,KAAK0iB,cAAclgB,KAAKxC,KAAKsiB,YAAY0B,cACzChkB,KAAK+gB,cAAgB/gB,KAAK0iB,cAAcpH,eACxCtb,KAAKghB,aAAehhB,KAAKsiB,YAAYtB,aAAa,yBAAA1e,GAAAwC,OAAA,EAAAhD,GAAA9B,KAAA,IACrD,SAAA+E,KAAA,OAAAhE,GAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAEM,SAAgBib,IAAkC,IAApBsH,KAAAhf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACjCjF,KAAKmgB,WAAWxD,GAAMpJ,IAAM0Q,GAC5BjkB,KAAKuiB,oBAAoBpC,WAAangB,KAAKmgB,WAC3CngB,KAAKuiB,oBAAoBtC,gBAAgBtD,GAAOsH,IAChDjkB,KAAKyiB,sBAAqB3I,EAAAO,KAAG,GAC7Bra,KAAKuiB,oBAAoB2B,oBAAoBvH,GACjD,GAAC,CAAAlb,IAAA,aAAAC,MAED,WACI1B,KAAKmkB,eAAiBnkB,KAAKoiB,aAAarN,KAAKgL,EAAApB,qBAAsB,CAC/D7b,KAAM9C,KAAKkW,WAEnB,GAAC,CAAAzU,IAAA,kBAAAC,MAED,WACI1B,KAAKuiB,oBAAoB6B,eAAepkB,KAAKqkB,eACjD,GAAC,CAAA5iB,IAAA,aAAAC,MAED,WACI1B,KAAKyiB,sBAAqB3I,EAAAO,KAAG,EACjC,GAAC,CAAA5Y,IAAA,eAAAC,MAED,WAAY,IAAA4iB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GACR9kB,KAAKsa,eAAcR,EAAAO,IACf,IAAIE,KAAc,QAAV+J,GAACtkB,KAAK0Q,YAAI,IAAA4T,IAAU,QAAVC,GAATD,GAAWS,gBAAQ,IAAAR,IAAM,QAANC,GAAnBD,GAAqBvS,YAAI,IAAAwS,QAAhB,EAATA,GAA2B9iB,OAAO8Y,mBACvC,QACA,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,KAGtD3a,KAAKglB,iBAA4B,QAAZP,GAAGzkB,KAAK0Q,YAAI,IAAA+T,IAAU,QAAVC,GAATD,GAAWM,gBAAQ,IAAAL,IAAU,QAAVC,GAAnBD,GAAqBpQ,gBAAQ,IAAAqQ,QAApB,EAATA,GAA+BjjB,MACvD,IAAMujB,IACO,QAATL,GAAA5kB,KAAK0Q,YAAI,IAAAkU,IAAU,QAAVC,GAATD,GAAWG,gBAAQ,IAAAF,IAAM,QAANC,GAAnBD,GAAqB7S,YAAI,IAAA8S,QAAhB,EAATA,GAA2BpjB,OACH,GAAxB1B,KAAKglB,iBAAwB,IACjChlB,KAAK4a,aAAYd,EAAAO,IACb,IAAIE,KAAK0K,IAAKzK,mBAAmB,QAAS,CACtCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGpB,GAAC,CAAAlZ,IAAA,sBAAAC,MAED,SAAoBwjB,IAAC,IAAAC,GACjBnlB,KAAKwgB,eAAiB0E,GACE,QAApBC,GAACnlB,KAAKwgB,sBAAc,IAAA2E,IAAnBA,GAAqB9f,QACtBrF,KAAK+jB,qBAEb,GAAC,CAAAtiB,IAAA,sBAAAC,MAED,WAAmB,IAAA8E,GAAAxG,KACfA,KAAK6D,QACD,OACA,WACI2C,GAAK4e,iBACL5e,GAAK6e,eACT,EACA,KAER,GAAC,CAAA5jB,IAAA,iBAAAC,MAED,WACI1B,KAAK+gB,cAAgB/gB,KAAKsiB,YAAYvB,aAC1C,GAAC,CAAAtf,IAAA,gBAAAC,MAED,WACI1B,KAAK8gB,eAAchH,EAAAO,IAAG,CAACra,KAAKsiB,YAAYgD,WAC5C,GAAC,CAAA7jB,IAAA,aAAAC,MAED,WACI1B,KAAKwQ,QAAQK,SAAS,CAAC,iBACvB7Q,KAAK6e,uBAAuB0G,aAChC,KAAC/lB,EAAA,CAzL2B,CAAQgB,EAAAiI,cAA3BjJ,SAAmB,mBAAAS,mBAAnBT,GAAkBU,EAAAwI,4BAAAC,EAAA2M,gBAAApV,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAAyc,eAAAtlB,EAAAwI,4BAAAO,EAAAoM,kBAAAnV,EAAAwI,4BAAA+c,EAAA1K,uBAAA7a,EAAAwI,4BAAAgd,EAAAC,YAAAzlB,EAAAwI,4BAAAkd,EAAAC,oBAAA3lB,EAAAwI,4BAAAod,EAAAzY,QAAA,EAAlB7N,EAAmB,UAAAU,EAAA,kCAAnBV,EAAkB2J,UAAA,iBAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,q0EAAA9D,SAAA,SAAAC,GAAAC,OAAA,EAAAD,KC5C/BvJ,EAAAqN,yBAAA,UAAArN,CAA6E,cAA7EA,CAA6E,UAA7EA,CAA6E,UAA7EA,CAA6E,cAIrDA,EAAA8Q,qBAAA,0BAAStH,GAAAyU,YAAY,GACzBje,EAAAqN,yBAAA,gBAEKrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAIdA,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,iBAAUvN,EAAAsN,wBAAAtN,GAIlBA,EAAAqN,yBAAA,UAAArN,CAA6D,WAA7DA,CAA6D,eAKjDA,EAAA8Q,qBAAA,0BAAStH,GAAAqc,YAAY,GAGrB7lB,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEZtN,EAAA+R,qBAAA,GAAA+T,EAAA,8CAIJ9lB,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,YAAArN,CAAyB,iCAGjBA,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAAzH,GAAAoY,WAAA3Q,EAAA,EAAAjR,CAAwB,2BACdwJ,GAAAuc,YAAY,GAGtB/lB,EAAAqN,yBAAA,0BAAArN,CAGK,cACIA,EAAAuN,iBAAA,UAAGvN,EAAAsN,wBAAAtN,GAGZA,EAAAqN,yBAAA,0BAAArN,CAGK,cACIA,EAAAuN,iBAAA,WAAIvN,EAAAsN,wBAAAtN,SAOzBA,EAAAyJ,oBAAA,iBAqBAzJ,EAAAqN,yBAAA,gBAAArN,CAA6C,YAA7CA,CAA6C,cAECA,EAAAuN,iBAAA,eAAOvN,EAAAsN,yBAC7CtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,mCAAkDvN,EAAAsN,wBAAAtN,KAK9DA,EAAAqN,yBAAA,aACIrN,EAAA+R,qBAAA,GAAAiU,EAAA,sDA4FAhmB,EAAA+R,qBAAA,GAAAkU,GAAA,0BAAAjmB,EAAAkmB,kCAQAlmB,EAAA+R,qBAAA,GAAAoU,GAAA,0BAAAnmB,EAAAkmB,kCAUJlmB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,iBAGIrN,EAAA+R,qBAAA,GAAAqU,GAAA,6CAUJpmB,EAAAsN,wBAAAtN,qDA5LuBA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,cAAAuQ,GAAAthB,EAAA4V,sBAAA,KAAApM,GAAA2R,qBAAA,KAAAmG,GAAAnc,QAUPnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,GAAAoY,YA+CA5hB,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,YAAAsI,GAAA/V,EAAA4V,sBAAA,KAAApM,GAAAsR,UAAA,KAAA/E,GAAA5Q,SAAA,oBAMOnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,MAAApM,GAAA2Z,SAAAnjB,CAA0B,WAAAqmB,IAmHvCrmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAA4V,sBAAA,MAAApM,GAAA+Y,oBAAA,2xBDhKLjjB,CAAmB,oOE3ChC,IAAAsa,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAGAK,EAAAL,EAAA,OAEA0C,EAAA1C,EAAA,OAEA0oB,GADA1oB,EAAA,OACAA,EAAA,UACAA,EAAA,qCAkBa8B,aAAW,eAAX+lB,EAAW,SAAA9kB,GAAAC,EAAA6kB,EAAA9kB,GAAA,IAwDnB4lB,EAxDmBzlB,EAAAC,EAAA0kB,GA8DpB,SAAAA,EACYvD,EACAG,GAAuC,IAAAjhB,EAAAvB,SAAAC,KAAA2lB,IAE/CrkB,EAAAN,EAAAO,KAAAvB,OAHQoiB,eACA9gB,EAAAihB,sBA9DLjhB,EAAAgkB,UAA0B,GAGzBhkB,EAAAohB,cACJ,IAAI5I,EAAAqB,gBAAiC,IAClC7Z,EAAAyf,cACHzf,EAAKohB,cAAcpH,eAYfha,EAAAolB,YACJ,IAAI5M,EAAAqB,iBAAyB,GACxB7Z,EAAAqlB,YAAmCrlB,EAAKolB,YAAYpL,eAErDha,EAAAslB,iBACJ,IAAI9M,EAAAqB,iBAAyB,GACxB7Z,EAAAwiB,iBACLxiB,EAAKslB,iBAAiBtL,eAE1Bha,EAAAulB,gBACIvlB,EAAKihB,oBAAoBsE,gBAGrBvlB,EAAAwlB,kBACJ,IAAIhN,EAAAqB,gBAA6B,IAErC7Z,EAAAqiB,kBACIriB,EAAKwlB,kBAAkBxL,eAWnBha,EAAAylB,WAA0C,IAAIjN,EAAAqB,gBAClD,IAGJ7Z,EAAAqf,WAA8Brf,EAAKylB,WAAWzL,eAAeha,CAe7D,CAACxB,SAAA6lB,EAAA,EAAAlkB,IAAA,eAAAkE,IAzDD,WACI,OAAO3F,KAAK0iB,cAAc3J,UAC9B,EAAC2C,IAED,SAAiBtS,GACbpJ,KAAK0iB,cAAclgB,KAAK4G,EAC5B,GAAC,CAAA3H,IAAA,mBAAAkE,IA2BD,WACI,OAAO3F,KAAK8mB,kBAAkB/N,UAClC,EAAC2C,IAND,SAAqBiB,GACjB3c,KAAK8mB,kBAAkBtkB,KAAKma,EAChC,GAAC,CAAAlb,IAAA,YAAAkE,IAiBD,WACI,OAAO3F,KAAK+mB,WAAWhO,UAC3B,EAAC2C,IAND,SAAcI,GACV9b,KAAK+mB,WAAWvkB,KAAKsZ,EACzB,GAAC,CAAAra,IAAA,eAAAC,OAAA+kB,EAAA9kB,EAAAC,IAAAC,KAaD,SAAAC,EAAmBmZ,GAAqC,IAAA+L,EAAA7hB,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC9CyY,GAAkB9X,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAEjD2X,UAAkBhI,UACd,SAACyJ,GAAM,OACFvX,EAAK8hB,iBAAmBvK,GAAQZ,IAAI,SAACa,GAAK,MAAM,CAC7CpJ,GAAIoJ,EAAMpJ,GACVE,KAAMkJ,EAAMlJ,KACZC,OAAQiJ,EAAMjJ,OACdsD,MAAO2F,EAAM3F,MAChB,EAAE,GACT1U,EAAAE,KAAA,EAC0B,QAD1BwkB,EACIhnB,KAAK2jB,yBAAiB,IAAAqD,OAAA,EAAtBA,EAAwB7jB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EAC3DxC,KAAKknB,UAAS,OAAA5kB,SAAAE,KAAA,EACdxC,KAAK6D,QACP,OACA,WACIsB,EAAKigB,gBACT,EACA,KACH,OAAA9iB,SAAAE,KAAA,GAEKxC,KAAKqlB,gBAAe,QAE1BrlB,KAAKghB,aAAe/F,GAAkB9X,QAClC7C,EAAAwb,KAAI,SAACY,GAAe,OAChBA,EAAOZ,IACH,SAACa,GAAY,MACR,CACGpJ,GAAIoJ,EAAMjJ,OACVyT,OAAQ,QACRC,SAAU,WACNjiB,EAAKkiB,aAAa1K,EACtB,EACY,EACvB,IAEP,yBAAAra,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACL,SAAA0jB,EAAAvG,GAAA,OAAAsJ,EAAAzhB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAAA,eAAA4lB,EAAA3lB,EAAAC,IAAAC,KAED,SAAA0D,IAAA,IAAAgiB,EAAAC,EAAA,OAAA5lB,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACIxC,KAAK0mB,YAAYlkB,MAAK,GACtBxC,KAAK2gB,WAAmC,QAAzB4G,EAAGvnB,KAAK2jB,yBAAiB,IAAA4D,OAAA,EAAtBA,EAAwBpkB,QACtC7C,EAAAwb,KAAI,SAACY,GAAmB,OACpBA,EAAOZ,IAAI,SAACa,GAAgB,MAAM,CAC9BjJ,OAAQiJ,EAAM3F,MAAMtD,OACpBsD,MAAO2F,EAAM3F,MAAMvD,KACtB,EAAE,IAIXzT,KAAK2gB,WAA4B,QAAlB6G,EAAGxnB,KAAK2gB,kBAAU,IAAA6G,OAAA,EAAfA,EAAiBrkB,QAC/B7C,EAAAwb,KAAI,SAAC2L,GAAoB,OAAAtE,EAClB,IAAIuE,IAAID,EAAS3L,IAAI,SAAC2H,GAAC,MAAK,CAACA,EAAE/P,OAAQ+P,EAAE,IAAGkE,SAAQ,IAI/D3nB,KAAK0mB,YAAYlkB,MAAK,GAAM,wBAAAiD,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC/B,gBAAAknB,IAAA,OAAAI,EAAAtiB,MAAAhF,KAAAiF,UAAA,EApBA,IAoBA,CAAAxD,IAAA,iBAAAC,MAEM,WAEH,IAAIkmB,EADJ5nB,KAAK4mB,iBAAiBpkB,MAAK,GAE3BxC,KAAK2jB,kBAAkB1Q,UAAU,SAACyJ,GAAM,OACpCA,EACOkL,EAAQlL,GAAQZ,IAAI,SAACa,GAAK,MAAM,CAC7B5W,SAAU4W,EAAMjJ,OAChBmU,QAAS1pB,EAAA2pB,gBACThlB,KAAM,CAAE2Q,KAAMkJ,EAAMlJ,MACpBsU,QAAS,GACTC,KAAM,IACT,GACD,EAAE,GAEZhoB,KAAKgkB,aAAe4D,EACpB5nB,KAAK4mB,iBAAiBpkB,MAAK,EAC/B,GAAC,CAAAf,IAAA,gBAAAC,MAEM,WAIH1B,KAAKslB,UAHwB,CAC7B2C,SAAmB,CAAEC,QAAS,QAC9BD,SAAmB,CAAEC,QAAS,QAElC,GAAC,CAAAzmB,IAAA,eAAAC,MACD,SAAaib,GACc3c,KAAKoiB,aAAarN,KAAKyR,EAAA2B,kBAAmB,CAC7DC,WAAY,2BACZtlB,KAAM6Z,IAGV3c,KAAKuiB,oBAAoBtC,gBAAgBtD,GAAO,EACpD,KAACgJ,CAAA,CAhKmB,CAAQnlB,EAAAiI,cAAnBkd,SAAW,mBAAA1lB,iBAAX0lB,GAAUzlB,EAAAsd,mBAAA7U,EAAA2M,gBAAApV,EAAAsd,mBAAA3U,EAAAgd,oBAAA,EAAVF,EAAW,WAAAzlB,EAAA,oCAAXylB,EAAUlI,QAAVkI,EAAUjI,UAAAC,WAFP,SAEHgI,CAAW,qLC3BxB,IAAAnlB,EAAA1C,EAAA,OAIAuqB,GAHAvqB,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,uPCFIoC,EAAAqN,yBAAA,WAAArN,CAAsC,cAAtCA,CAAsC,UAAtCA,CAAsC,YAOiBA,EAAAuN,iBAAA,gBAASvN,EAAAsN,yBAEpDtN,EAAAqN,yBAAA,UAAArN,CAA2B,UAA3BA,CAA2B,UAIbA,EAAAuN,iBAAA,OAACvN,EAAAsN,wBAAAtN,GAEXA,EAAAqN,yBAAA,WAAiCrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,GAG5CA,EAAAqN,yBAAA,WAAArN,CAA2B,eACeA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBAChDtN,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,WAAArN,CAA2B,eACeA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBAC3CtN,EAAAyJ,oBAAA,sBAKJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA2C,YAA3CA,CAA2C,eAG/BA,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAmV,GAAA,IAAAxQ,EAAA7V,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAuE,EAAArF,KAAAe,WAAA,CAAAO,KAAAb,IAAiC,GAGrDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAyC,eAEjCA,EAAAuN,iBAAA,kBACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,0BAQJzJ,EAAAsN,wBAAAtN,OAKZA,EAAAqN,yBAAA,gBAAArN,CAEC,WAFDA,CAEC,WAFDA,CAEC,WAFDA,CAEC,WAQqBA,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAEXA,EAAAqN,yBAAA,YAAiCrN,EAAAuN,iBAAA,gBAASvN,EAAAsN,wBAAAtN,GAG9CA,EAAAqN,yBAAA,WAAArN,CAA2B,eAEnBA,EAAAuN,iBAAA,sBACJvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,2BAIIrN,EAAA8Q,qBAAA,sBAAA9Q,EAAAkR,wBAAAmV,GAAA,IAAA+B,EAAApoB,EAAAqR,0BAAA,OAAYrR,EAAAsR,sBAAA8W,EAAAC,mBAAkB,GACjCroB,EAAAsN,wBAAAtN,OAKbA,EAAAqN,yBAAA,gBAAArN,CAAgE,gBAKxDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAmV,GAAA,IAAAjV,EAAApR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAF,EAAAkX,YAAW,GAGpBtoB,EAAAqN,yBAAA,cAAsBrN,EAAAuN,iBAAA,gBAASvN,EAAAsN,wBAAAtN,GAEnCA,EAAAqN,yBAAA,gBAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAmV,GAAA,IAAA3P,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAnG,YAAW,GAGpBvQ,EAAAqN,yBAAA,cAAsBrN,EAAAuN,iBAAA,iBAAUvN,EAAAsN,wBAAAtN,MAAO,6CAhHhCA,EAAA+Q,qBAAA,YAAAoB,EAAA3B,MAgCCxQ,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAoW,UAWIvoB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA3B,KAAAhP,MAAAsQ,KAAA9R,CAA2B,iBAAAA,EAAA0R,0BAAA,EAAAC,IAW3B3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyX,EAAArW,EAAA3B,KAAA/K,IAAA,cAAA+iB,EAAAhnB,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAmCpCA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,uBD1EXrR,uBAAoB,eAApBV,EAAoB,WAc7B,SAAAA,EAC8BypB,EAClBvb,EACA2M,EACA8E,GAA6C,IAAAvd,EAAAtB,KAAAD,EAAAC,KAAAd,GAH3Bc,KAAA2oB,YAClB3oB,KAAAoN,SACApN,KAAA+Z,SACA/Z,KAAA6e,yBAjBL7e,KAAA4oB,aAAc,EACd5oB,KAAA6oB,aAAc,EAErB7oB,KAAAyoB,SAAiB,IAAIlO,KAMLva,KAAAyQ,UAAY,WACxBnP,EAAKyY,OAAOtJ,WAChB,CAOG,CAAC3Q,SAAAZ,EAAA,EAAAuC,IAAA,OAAAkE,IAbJ,WACI,OAAO3F,KAAK+Z,OAAOrJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,MAaD,WACI1B,KAAK+Z,OAAO+O,UACZ9oB,KAAK6e,uBAAuB0G,aAChC,GAAC,CAAA9jB,IAAA,YAAAC,OAAAqnB,EAAApnB,EAAAC,IAAAC,KAED,SAAAC,IAAA,IAAAwE,EAAA,OAAA1E,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoF,GADhFxC,KAAK0Q,KAAKsY,mBACLhpB,KAAK0Q,KAAKhP,MAAM+S,MAAMzU,KAAK0Q,KAAKe,WAAW,CAAEgD,KAAmB,QAAfnO,KAAE+hB,EAAAvhB,sBAAa,IAAAR,OAAA,EAAbA,EAAeU,QAClEhH,KAAK0Q,KAAKgE,MAAK,CAAApS,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAAArB,SAAAE,KAAA,EACdxC,KAAK+Z,OAAOkP,YAAW,OAC7BjpB,KAAKoN,OAAOyD,SAAS,CAAC,mBAAmB,wBAAAvO,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC5C,SAAAwoB,IAAA,OAAAO,EAAA/jB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,mBAAAC,MAED,WACIiB,OAAOoS,KAAK,sBAChB,KAAC7V,EAZA,IAAA6pB,CAYA,CApC4B,GAApB7pB,SAAoB,mBAAAe,iBAApBf,GAAoBgB,EAAAwI,4BAejBlI,EAAA0oB,UAAQhpB,EAAAwI,4BAAAC,EAAA0E,QAAAnN,EAAAwI,4BAAAG,EAAAwM,kBAAAnV,EAAAwI,4BAAAK,EAAAgS,uBAAA,EAfX7b,EAAoB,UAAAgB,EAAA,kCAApBhB,EAAoBiK,UAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wlDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IClBjCvJ,EAAAqN,yBAAA,WAGIrN,EAAA+R,qBAAA,EAAAkX,EAAA,gBAoHJjpB,EAAAsN,gCApHWtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,wbDeExR,CAAoB,kLEjBjCpB,EAAA,WACAgc,EAAAhc,EAAA,OAKAsrB,GAJAtrB,EAAA,OACAA,EAAA,OACAA,EAAA,OAEAA,EAAA,QACAurB,EAAAvrB,EAAA,UACAA,EAAA,wEAKa8B,qBAAkB,eAAlBimB,EAAkB,WAoB3B,SAAAA,EACYzD,EACAhV,EACA2M,EACAsI,EACAiH,GAAsB,IAAAC,EAAAC,EAAAloB,EAAAtB,KAAAD,EAAAC,KAAA6lB,GAJtB7lB,KAAAoiB,eACApiB,KAAAoN,SACApN,KAAA+Z,SACA/Z,KAAAqiB,UACAriB,KAAAspB,cAvBLtpB,KAAAmgB,WAA+B,GAC/BngB,KAAA2iB,WAAsB,GAE7B3iB,KAAAypB,gBAA0C,IAAI3P,EAAAqB,gBAAuB,MACrEnb,KAAA6mB,gBAAqC7mB,KAAKypB,gBAAgBnO,eAqBtDtb,KAAKmgB,WAAa,KACgB,QAAhBoJ,EAAAvpB,KAAK+Z,OAAOrJ,YAAI,IAAA6Y,GAAkB,QAAlBC,EAAhBD,EAAkB5jB,IAAI,oBAAY,IAAA6jB,OAAlB,EAAhBA,EAAoC9nB,QAAS,IACrDgoB,QAAQ,SAACrmB,GAAC,OAAM/B,EAAK6e,WAAW9c,EAAEkQ,KAAM,CAAI,GACtDvT,KAAK2iB,WAAa3iB,KAAKqiB,QAAQrG,OAAO,SAAC2N,GAAC,OAAKroB,EAAK6e,WAAWwJ,EAAEpW,GAAG,EACtE,CAACzT,SAAA+lB,EAAA,EAAApkB,IAAA,iBAAAkE,IAvBD,WACI,OAAO3F,KAAKypB,gBAAgB1Q,UAChC,EAAC2C,IAED,SAAmBiB,GACf3c,KAAKypB,gBAAgBjnB,KAAKma,EAC9B,GAAC,CAAAlb,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAK+Z,OAAOrJ,IACvB,GAAC,CAAAjP,IAAA,iBAAAC,OAAAkoB,EAAAjoB,EAeD,eAAAwD,EAAAnF,KAAqB2c,EAAK1X,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAGjF,KAAKqkB,eAAc,OAAAziB,IAAAC,KAAA,SAAAC,IAAA,IAAA+nB,EAAA,OAAAjoB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtCqnB,SAAmB1kB,EAAKid,aAAarN,KAAKqU,EAAAU,qBAAsB,CAClEhnB,KAAM6Z,IACRra,EAAAE,KAAA,EAEIqnB,EACD1U,iBACAlC,UAAU,SAAC8W,GAAa,OACrBA,EAAgB5kB,EAAK6kB,gBAAgBD,GAAiB,IAAI,GAC7D,wBAAAznB,EAAAwC,OAAA,EAAAhD,EAAA,EATuCF,EASvC,GACR,SAAAwiB,IAAA,OAAAwF,EAAA5kB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAED,SAAgBib,GACRA,GACoB3c,KAAKoiB,aAAarN,KAAKsU,EAAAY,qBAAsB,CAC7DnnB,KAAM6Z,GAGlB,GAAC,CAAAlb,IAAA,sBAAAC,MAED,SAAoBib,GACZA,IAAO3c,KAAKqkB,eAAiB1H,EACrC,GAAC,CAAAlb,IAAA,kBAAAC,MAED,SAAgBib,GAAkC,IAApBsH,IAAAhf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAC1BjF,KAAKmgB,WAAa,GAClBngB,KAAKmgB,WAAWxD,EAAMpJ,IAAM0Q,CAChC,GAAC,CAAAxiB,IAAA,WAAAC,MAAA,eAAAwoB,EAAAvoB,EAAAC,IAAAC,KAED,SAAA0D,EAAeoX,GAAM,IAAAwN,EAAAzN,EAAAlW,EAAAxG,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACX2nB,SAAUC,OAAOC,KAAKrqB,KAAKmgB,YAAYnE,OAAO,SAAAzI,GAAE,OAAI/M,EAAK2Z,WAAW5M,EAAG,GAAC9N,EAAAjD,KAAA,EACzDwB,QAAQsmB,IAAIH,EAAQrO,IAAI,SAAAvI,GAAE,OAAI/M,EAAK8iB,YAAYiB,UAAUhX,EAAG,IAAE,OACnFvT,KAAK0Q,KAAKe,WAAW,CAAEsF,UADjB2F,EAAMjX,EAAAvB,KAC8BmV,OAAQqD,EAAO,KACzD1c,KAAK2iB,WAAa3iB,KAAKqiB,QAAQrG,OAAO,SAAC2N,GAAC,OAAKnjB,EAAK2Z,WAAWwJ,EAAEpW,GAAG,GAClEvT,KAAKwqB,WAAW,wBAAA/kB,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IACnB,gBAAAyqB,EAAAtN,GAAA,OAAA+M,EAAAllB,MAAAhF,KAAAiF,UAAA,EARA,IAQA,CAAAxD,IAAA,WAAAC,MAAA,eAAAgpB,EAAA/oB,EAAAC,IAAAC,KAED,SAAAwE,IAAA,OAAAzE,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACUxC,KAAK+Z,OAAOyQ,WAAUhmB,MAAO,SAACmmB,GAAG,OAAKloB,QAAQ0D,MAAMwkB,EAAI,GAAC,OAC3D3qB,KAAK+Z,OAAO7F,cACZlU,KAAKoN,OAAOyD,SAAS,CAAC,qBAAqB,wBAAApK,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IAClD,gBAAAwqB,IAAA,OAAAE,EAAA1lB,MAAAhF,KAAAiF,UAAA,EANA,MAMA4gB,EAxDA,IAAA+D,CAwDA,CA1E0B,GAAlB/D,SAAkB,mBAAA5lB,iBAAlB4lB,GAAkB3lB,EAAAsd,mBAAA7U,EAAA2M,gBAAApV,EAAAsd,mBAAA3U,EAAAwE,QAAAnN,EAAAsd,mBAAAzU,EAAAsM,kBAAAnV,EAAAsd,mBAAAvU,EAAAuc,eAAAtlB,EAAAsd,mBAAAiI,EAAAna,WAAA,EAAlBua,EAAkB,WAAA3lB,EAAA,oCAAlB2lB,EAAkBpI,QAAlBoI,EAAkBnI,UAAAC,WAFf,SAEHkI,CAAkB,qLCb/B,IAAAtM,EAAAzb,EAAA,UAKAA,EAAA,OACAA,EAAA,oHC4CYoC,EAAAqN,yBAAA,WAAArN,CAGC,UAHDA,CAGC,iBAGYA,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,GAGfA,EAAAqN,yBAAA,UAAArN,CAA2B,aACFA,EAAAuN,iBAAA,GAAqBvN,EAAAsN,wBAAAtN,6BAArBA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA,MAAAyW,EAAA,KAAAA,EAAA5jB,MAAA,ED7C5BpH,uBAAoB,eAApBqqB,EAAoB,WAc7B,SAAAA,EAC0CnnB,EAC9B+nB,EACA9Q,EACAwI,GAAuCxiB,EAAAC,KAAAiqB,GAHTjqB,KAAA8C,OAC9B9C,KAAA6qB,kBACA7qB,KAAA+Z,SACA/Z,KAAAuiB,sBAXZviB,KAAA8qB,oBAA8B,EAKvB9qB,KAAAqjB,QAAUrjB,KAAK+Z,OAAOsJ,OAO1B,CAACvjB,SAAAmqB,EAAA,EAAAxoB,IAAA,OAAAkE,IAVJ,WACI,OAAO3F,KAAK+Z,OAAOrJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAUD,SAAAC,IAAA,IAAAwiB,EAAAC,EAAAE,EAAAC,EAAAE,EAAAC,EAAAkG,EAAAC,EAAAC,EAAA,OAAArpB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIxC,KAAKkrB,UAAqB,QAAZ5G,EAAGtkB,KAAK0Q,YAAI,IAAA4T,GAAU,QAAVC,EAATD,EAAWS,gBAAQ,IAAAR,OAAV,EAATA,EAAqBvS,KAAKtQ,MAC3C1B,KAAKmrB,WAAa,IAAI5Q,KAAKva,KAAKkrB,WAAW1Q,mBAAmB,QAAS,CACnEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAENsQ,EAAmC,QAApBxG,EAAWzkB,KAAK0Q,YAAI,IAAA+T,GAAU,QAAVC,EAATD,EAAWM,gBAAQ,IAAAL,OAAV,EAATA,EAAqBpQ,SAAS5S,MAE9D1B,KAAKorB,SAAW,IAAI7Q,KADRva,KAAKkrB,UAA8B,GAAlBD,EAAuB,KACtBzQ,mBAAmB,QAAS,CACtDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEZ3a,KAAKwW,UAAqB,QAAZoO,EAAG5kB,KAAK0Q,YAAI,IAAAkU,GAAU,QAAVC,EAATD,EAAWG,gBAAQ,IAAAF,OAAV,EAATA,EAAqBrO,UAAU9U,MAChD1B,KAAK2c,MAAQ3c,KAAK8C,KAClB9C,KAAKwB,MAAiB,QAAZupB,EAAG/qB,KAAK0Q,YAAI,IAAAqa,GAAU,QAAVC,EAATD,EAAWhG,gBAAQ,IAAAiG,OAAV,EAATA,EAAqBxpB,MAAME,MAAM,wBAAAY,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACjD,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,aAAAC,MAED,WACI1B,KAAK6qB,gBAAgB9L,QAAQ,SACjC,GAAC,CAAAtd,IAAA,iBAAAC,MAED,WACI1B,KAAK8qB,oBAAqB,EAC1B9qB,KAAKuiB,oBAAoBkI,SAASzqB,KAAK2c,MAC3C,KAACsN,EApCA,IAAAlpB,CAoCA,CA/C4B,GAApBkpB,SAAoB,mBAAAhqB,iBAApBgqB,GAAoB/pB,EAAAwI,4BAejB6Q,EAAAyF,uBAAqB9e,EAAAwI,4BAAAC,EAAAsW,mBAAA/e,EAAAwI,4BAAAG,EAAAwM,kBAAAnV,EAAAwI,4BAAAK,EAAA8c,oBAAA,EAfxBoE,EAAoB,UAAA/pB,EAAA,kCAApB+pB,EAAoB9gB,UAAA,mBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,4mCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IChBjCvJ,EAAAqN,yBAAA,UAAArN,CAEC,cAFDA,CAEC,UAFDA,CAEC,cAGkCA,EAAA8Q,qBAAA,0BAAStH,EAAAyU,YAAY,GACxCje,EAAAqN,yBAAA,gBAEKrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAGdA,EAAAqN,yBAAA,YAAyCrN,EAAAuN,iBAAA,2BAAoBvN,EAAAsN,wBAAAtN,KAIrEA,EAAAqN,yBAAA,cAAArN,CAA4E,UAA5EA,CAA4E,aAE5CA,EAAAyJ,oBAAA,YAA8BzJ,EAAAsN,wBAAAtN,GAE1DA,EAAAqN,yBAAA,WAAArN,CAA2B,cAElBA,EAAAuN,iBAAA,IACLvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,qBAAcvN,EAAAsN,yBAEnBtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,kCACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAEbtN,EAAAqN,yBAAA,cAAmBrN,EAAAuN,iBAAA,IAAgCvN,EAAAsN,wBAAAtN,OAK/DA,EAAAqN,yBAAA,eAAArN,CAA4E,WAA5EA,CAA4E,aAE5CA,EAAAyJ,oBAAA,YAA8BzJ,EAAAsN,wBAAAtN,GAG1DA,EAAAqN,yBAAA,WAAArN,CAA2B,cAElBA,EAAAuN,iBAAA,iBACLvN,EAAAsN,yBAEAtN,EAAA+R,qBAAA,GAAAoZ,EAAA,cAcAnrB,EAAAqN,yBAAA,YAAArN,CAAmE,WAAnEA,CAAmE,kBAGtDA,EAAAuN,iBAAA,aAAMvN,EAAAsN,wBAAAtN,GAGfA,EAAAqN,yBAAA,WAAArN,CAA2B,WACjBA,EAAAuN,iBAAA,IAAoCvN,EAAAsN,wBAAAtN,SAM1DA,EAAAqN,yBAAA,gBAAArN,CAAmD,WAAnDA,CAAmD,aAEnBA,EAAAyJ,oBAAA,YAA8BzJ,EAAAsN,wBAAAtN,GAE1DA,EAAAqN,yBAAA,WAAArN,CAA2B,cAC8BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAE3DtN,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,mBAAYvN,EAAAsN,yBAEjBtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBAETtN,EAAAqN,yBAAA,cAAoBrN,EAAAuN,iBAAA,IAAwBvN,EAAAsN,wBAAAtN,OAKxDA,EAAAqN,yBAAA,YAAArN,CAEC,gBAGOA,EAAA8Q,qBAAA,0BAAStH,EAAA4hB,gBAAgB,GAIzBprB,EAAAqN,yBAAA,cAAerN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,cA1FjBA,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,GAAAjE,EAAAlI,MAAA,KAQGtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,KAAA3K,EAAAwhB,UAAA,qBAOehrB,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,GAAAnW,EAAAyhB,WAAA,KAAAzhB,EAAA0hB,SAAA,IAiBElrB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAA8M,WAmBXtW,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA,MAAAzK,EAAAgH,MAAA,MAAAhH,EAAAgH,KAAAqU,UAAA,MAAArb,EAAAgH,KAAAqU,SAAAwG,QAAA,KAAA7hB,EAAAgH,KAAAqU,SAAAwG,QAAA7pB,OAkBNxB,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAlJ,KAAA,KAOgBvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAvD,KAAA,IAWxBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAohB,kGD5FCb,CAAoB,+IEfjC,IAAA1Q,EAAAzb,EAAA,sFCAIoC,EAAAqN,yBAAA,gBAIIrN,EAAAyJ,oBAAA,YAOJzJ,EAAAsN,iEANQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,MAAAoB,EAAAsK,MAAA6O,OAAA,GAAAtrB,EAAAurB,wBAAAvrB,CAAuB,mBAAAmS,EAAAsK,MAAAlH,cAAApD,EAAAsK,MAAAlJ,MAAA,wBAavBvT,EAAAqN,yBAAA,cAAArN,CAKC,aAC4BA,EAAAuN,iBAAA,qBAAevN,EAAAsN,wBAAAtN,0BAG5CA,EAAAqN,yBAAA,cAAArN,CAKC,aAC4BA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,wBAAAtN,0BAkC3CA,EAAAqN,yBAAA,QAAArN,CAA6B,iBAEpBA,EAAAuN,iBAAA,cAAQvN,EAAAsN,wBAAAtN,0BAGjBA,EAAAqN,yBAAA,QAAArN,CAAiC,iBAExBA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,wBAAAtN,0BAG3BA,EAAAqN,yBAAA,QAAArN,CAA+B,iBAEtBA,EAAAuN,iBAAA,mBAAavN,EAAAsN,wBAAAtN,0BAGtBA,EAAAqN,yBAAA,QAAArN,CAAkC,iBAEzBA,EAAAuN,iBAAA,+BAAyBvN,EAAAsN,wBAAAtN,0BAGlCA,EAAAqN,yBAAA,QAAArN,CAAgC,iBAEvBA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,0BAGbA,EAAAqN,yBAAA,QAAArN,CAA4B,iBAEnBA,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,wBAAAtN,6BAhC3CA,EAAAqN,yBAAA,WAAArN,CAGC,YAEOA,EAAA+R,qBAAA,EAAAyZ,EAAA,cAKAxrB,EAAA+R,qBAAA,EAAA0Z,EAAA,cAKAzrB,EAAA+R,qBAAA,EAAA2Z,EAAA,cAKA1rB,EAAA+R,qBAAA,EAAA4Z,EAAA,cAKA3rB,EAAA+R,qBAAA,EAAA6Z,EAAA,cAKA5rB,EAAA+R,qBAAA,EAAA8Z,EAAA,cAKJ7rB,EAAAsN,yBAEAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,2BAnCKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAA+a,GACK9rB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,wBAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,4BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,0BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,6BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,2BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,uBAQN/Q,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqe,EAAA,+BA5CZ9rB,EAAAqN,yBAAA,eAAArN,CAGC,aAC0CA,EAAAuN,iBAAA,qBAAevN,EAAAsN,yBAEtDtN,EAAA+R,qBAAA,EAAAga,EAAA,eAyCJ/rB,EAAAsN,iEAxC6BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAqX,EAAA3L,MAAA,KAAA2L,EAAA3L,MAAAE,aAAA,+DA4CzB3c,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqF,GAAA,IAAAC,EAAAxW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAkF,EAAAwV,OAAM,GAEfhsB,EAAAqN,yBAAA,aAA6BrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,EAAO,+DAE5CA,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8F,GAAA,IAAAC,EAAAjX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA2F,EAAA+U,OAAM,GAEfhsB,EAAAqN,yBAAA,aAAyBrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,wBAAAtN,EAAO,ED9GtCN,uBAAoB,eAApBkqB,EAAoB,WAI7B,SAAAA,EAC0ChnB,EAC9B+nB,GAAwD9qB,EAAAC,KAAA8pB,GAD1B9pB,KAAA8C,OAC9B9C,KAAA6qB,kBAJZ7qB,KAAAmsB,YAAsB,CAKnB,CAACrsB,SAAAgqB,EAAA,EAAAroB,IAAA,WAAAC,MAEJ,WACI1B,KAAK2c,MAAQ3c,KAAK8C,IACtB,GAAC,CAAArB,IAAA,aAAAC,MAED,WACI1B,KAAKmsB,YAAcnsB,KAAKmsB,UAC5B,GAAC,CAAA1qB,IAAA,OAAAC,MAED,WAEQ1B,KAAK6qB,gBAAgB9L,QADrB/e,KAAKmsB,WACwBnsB,KAAK2c,MAEL,KAErC,KAACmN,CAAA,CAvB4B,GAApBA,SAAoB,mBAAA7pB,iBAApB6pB,GAAoB5pB,EAAAwI,4BAKjB6Q,EAAAyF,uBAAqB9e,EAAAwI,4BAAAC,EAAAsW,mBAAA,EALxB6K,EAAoB,UAAA5pB,EAAA,kCAApB4pB,EAAoB3gB,UAAA,2BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,mgEAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICdjCvJ,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAAma,EAAA,iBAYAlsB,EAAAqN,yBAAA,cAAArN,CAEC,YACyCA,EAAAuN,iBAAA,GAAiBvN,EAAAsN,yBAEvDtN,EAAAqN,yBAAA,WAAKrN,EAAA8Q,qBAAA,0BAAStH,EAAA2iB,YAAY,GACtBnsB,EAAA+R,qBAAA,EAAAqa,EAAA,gBASApsB,EAAA+R,qBAAA,EAAAsa,EAAA,gBAQJrsB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,cAAArN,CAEC,YACqCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBACzCtN,EAAAqN,yBAAA,WAAArN,CAAqD,kBAE5CA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IAA4BvN,EAAAsN,wBAAAtN,GAGpCA,EAAAqN,yBAAA,YAAArN,CAAqD,kBACGA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACxDtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IAAuDvN,EAAAsN,wBAAAtN,KAInEA,EAAA+R,qBAAA,GAAAua,EAAA,kBAgDAtsB,EAAAqN,yBAAA,aAGIrN,EAAA+R,qBAAA,GAAAwa,EAAA,iBASAvsB,EAAA+R,qBAAA,GAAAya,EAAA,iBASJxsB,EAAAsN,wBAAAtN,UA3HKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAvH,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA6O,OAAA,KAAA9hB,EAAAiT,MAAA6O,OAAAnmB,QAAA,GAaqCnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAlJ,KAAA,IAI7BvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAyiB,YASAjsB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAyiB,YAkBDjsB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAmD,SAAA,WAMA5f,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,UAAAnW,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAvD,KAAA,WAAA/J,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAjD,UAAA,IAMP7T,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAvH,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAE,aAAAxX,QAAA,GAkDInF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAyiB,YASAjsB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyiB,gGDxGArC,CAAoB,2IEbjC,IAAAvQ,EAAAzb,EAAA,UAKAA,EAAA,0FCOgBoC,EAAAyJ,oBAAA,kCASAzJ,EAAAqN,yBAAA,QAAArN,CAAwC,iBAG/BA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IDZjBN,oBAAiB,eAAjBuoB,EAAiB,WAE1B,SAAAA,EAC0CrlB,EAC9B+nB,EACAtI,GAAuCxiB,EAAAC,KAAAmoB,GAFTnoB,KAAA8C,OAC9B9C,KAAA6qB,kBACA7qB,KAAAuiB,qBACT,CAACziB,SAAAqoB,EAAA,EAAA1mB,IAAA,WAAAC,MAEJ,WACI1B,KAAK2c,MAAQ3c,KAAK8C,IACtB,GAAC,CAAArB,IAAA,iBAAAC,MAED,WACI1B,KAAKuiB,oBAAoB6B,eAAepkB,KAAK2c,MACjD,GAAC,CAAAlb,IAAA,SAAAC,MAED,WACI1B,KAAK6qB,gBAAgB9L,QAAQ,KACjC,KAACoJ,CAAA,CAlByB,GAAjBA,SAAiB,mBAAAloB,iBAAjBkoB,GAAiBjoB,EAAAwI,4BAGd6Q,EAAAyF,uBAAqB9e,EAAAwI,4BAAAC,EAAAsW,mBAAA/e,EAAAwI,4BAAAG,EAAAgd,oBAAA,EAHxBsC,EAAiB,UAAAjoB,EAAA,kCAAjBioB,EAAiBhf,UAAA,wBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,+oCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICb9BvJ,EAAAqN,yBAAA,UAAArN,CAEC,WAGOA,EAAA8Q,qBAAA,0BAAStH,EAAA0a,gBAAgB,GAEzBlkB,EAAAqN,yBAAA,UAAArN,CAEC,WAIOA,EAAA+R,qBAAA,EAAA0a,EAAA,aASAzsB,EAAA+R,qBAAA,EAAA2a,EAAA,aAMJ1sB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAgC,YAExBA,EAAAuN,iBAAA,GAAiBvN,EAAAsN,yBAGrBtN,EAAAqN,yBAAA,UAAArN,CAA4D,iBAGnDA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBAETtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IAC6BvN,EAAAsN,wBAAAtN,GAIrCA,EAAAqN,yBAAA,WAAArN,CAA4D,iBAGnDA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,cAA6BrN,EAAAuN,iBAAA,IAAqBvN,EAAAsN,wBAAAtN,WAMtEA,EAAAqN,yBAAA,YAAArN,CAEC,gBAIOA,EAAA8Q,qBAAA,0BAAStH,EAAAmjB,QAAQ,GAGjB3sB,EAAAqN,yBAAA,cAA6BrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,wBAAAtN,YAnDpBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAvH,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA6O,OAAA,KAAA9hB,EAAAiT,MAAA6O,OAAAnmB,QAAA,GAQCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAvH,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA6O,OAAA,KAAA9hB,EAAAiT,MAAA6O,OAAAnmB,SASFnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAlJ,KAAA,IASIvT,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,UAAAnW,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAvD,KAAA,WAAA/J,EAAAiT,OAAA,MAAAjT,EAAAiT,MAAA3F,MAAA,KAAAtN,EAAAiT,MAAA3F,MAAAjD,UAAA,IAUyB7T,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAAmD,SAAA,oDDrCpCqI,CAAiB,0LEZ9B,IAAA3nB,EAAA1C,EAAA,OACAkR,EAAAlR,EAAA,UAEAA,EAAA,gGAmBwBoC,EAAAyJ,oBAAA,oEAEIzJ,EAAA+Q,qBAAA,QAAA6b,EAAA,0BAGA5sB,EAAAyJ,oBAAA,sEAAczJ,EAAA+Q,qBAAA,UAAA6b,EAAA,2BARtB5sB,EAAAuhB,kCAAA,GAGIvhB,EAAA+R,qBAAA,EAAA8a,EAAA,oBAIA7sB,EAAA+R,qBAAA,EAAA+a,EAAA,yBAAA9sB,EAAAkmB,kCAGJlmB,EAAA0hB,sHANS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAc,EAAAkb,QAAAH,GAAA5sB,CAAqB,WAAAgtB,EAAA,2BAPlChtB,EAAAuhB,kCAAA,GAGIvhB,EAAA+R,qBAAA,EAAAkb,EAAA,oDAWJjtB,EAAA0hB,2EAVyB1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAc,EAAAwW,SAAAltB,CAAoB,eAAA0W,EAAAyW,UAAA,2BARjDntB,EAAAqN,yBAAA,WAIIrN,EAAA+R,qBAAA,EAAAqb,EAAA,oDAeJptB,EAAAsN,gGAdStN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAA+a,UAAA,KAAA5L,EAAAnc,OAAAnF,CAAiC,WAAAqtB,EAAA,wBAiB1CrtB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,4BAAsBvN,EAAAsN,wBAAAtN,UADZA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,sCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAGC,OACMA,EAAAuN,iBAAA,uBAAiBvN,EAAAsN,wBAAAtN,IAMvBN,4BAA0B,eAA1BH,EAA0B,SAAAoB,GAAAC,EAAArB,EAAAoB,GAAA,IAAAG,EAAAC,EAAAxB,GAKnC,SAAAA,EAAoB+tB,GAA+B,IAAAlsB,EAAAvB,SAAAC,KAAAP,IAC/C6B,EAAAN,EAAAO,KAAAvB,OADgBwtB,YAJblsB,EAAAmsB,QAAOjtB,EAAAsG,eACExF,EAAAosB,SAAWpsB,EAAKksB,UAAUnK,QAC1B/hB,EAAA8rB,QAAU9rB,EAAKksB,UAAUG,kBAAkBrsB,CAI3D,CAACxB,SAAAL,EAAA,EAAAgC,IAAA,WAAAC,MAEM,WACH1B,KAAKwtB,UAAUI,WAAW,QAAQ,GAClC5tB,KAAKwtB,UAAUI,WAAW,WAAW,GACrC5tB,KAAK+S,aAAa,OAAQ/S,KAAKwtB,UAAUK,eAC7C,GAAC,CAAApsB,IAAA,UAAAC,MAEM,SAAQua,GACX,OAAOA,aAAgBjN,EAAA8e,aAC3B,GAAC,CAAArsB,IAAA,YAAAC,MAEM,SAAU2B,EAAW4Y,GACxB,OAAOA,GAAM1I,EACjB,KAAC9T,CAAA,CArBkC,CAAQe,EAAAiI,cAAlChJ,SAA0B,mBAAAQ,iBAA1BR,GAAyBS,EAAAwI,4BAAAC,EAAAolB,sBAAA,EAAzBtuB,EAA0B,UAAAS,EAAA,kCAA1BT,EAAyB0J,UAAA,gCAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,gsBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA7C9BvJ,EAAAqN,yBAAA,UAAArN,CAA+D,UAEvDA,EAAAuN,iBAAA,qBACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA+b,EAAA,2CAoBJ9tB,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAgc,EAAA,yBAAA/tB,EAAAkmB,kCASAlmB,EAAA+R,qBAAA,EAAAic,EAAA,yBAAAhuB,EAAAkmB,yEA5BSlmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,IAAApM,EAAAgkB,UAAAxtB,CAA2B,WAAAiuB,EAAA,kHAuC/B1uB,CAA0B,0FCtD1BG,cAAc,CACvBuN,YAAY,oCCDhBlD,EAAAnM,EAAA,OAGAswB,EAAAtwB,EAAA,OACAA,EAAA,OAEIoP,YAAYC,eACZlD,EAAAokB,kBAGJC,EAAAC,kBACKC,gBAAgBJ,EAAAhjB,WAAU5G,MACpB,SAACmmB,GAAG,OAAKloB,QAAQ0D,MAAMwkB,EAAI,8PCXtC7sB,EAAA,OACAA,EAAA,OADA,IAEA0C,EAAA1C,EAAA,OAGA+M,GAFA/M,EAAA,OACAA,EAAA,MACAA,EAAA,4LAKQoC,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqd,GAAA,IAAA7X,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAmI,UAAS,GAElB7e,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,EAAW,uBAI1BA,EAAAyJ,oBAAA,6CAsCYzJ,EAAAqN,yBAAA,aAAArN,CAA+C,WAA/CA,CAA+C,iBAEhBA,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC/BtN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,2BADIA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+gB,EAAAjb,MAAAib,EAAA1nB,MAAA,+BAhBxB9G,EAAAqN,yBAAA,eAAArN,CAIC,gBACuCA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,UAAArN,CAA+B,QAC3BA,EAAAyuB,iBAAA,MAGAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAmB,yBAEXA,EAAA+R,qBAAA,EAAA2c,EAAA,mBAMJ1uB,EAAAsN,wBAAAtN,+CATJA,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAld,EAAAmd,MAAAtY,UAAAnR,OAAAnF,CAAKyR,EAAAmd,MAAAtY,UAAAnR,QAALnF,EAAA6uB,sBAAA,GAGmC7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAU,EAAAmd,MAAAtY,UAAA,2BAcnCtW,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,UAAArN,CAAyC,cAC3BA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,GAEJvN,EAAAsN,wBAAAtN,GAERA,EAAA0hB,yFAJY1hB,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,WAAAK,EAAAlJ,MAAA,KAAAkJ,EAAAlJ,MAAAvB,gBAAA,MAAAyK,EAAAlJ,MAAA,KAAAkJ,EAAAlJ,MAAAvD,MAAA,KAAAub,EAAAvZ,cAAAuZ,EAAAvb,KAAA,+BARpBvT,EAAAqN,yBAAA,eAAArN,CAA8D,gBACtBA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,UAAArN,CAA+B,QAC3BA,EAAAyuB,iBAAA,MAAoBzuB,EAAAsN,yBACpBtN,EAAA+R,qBAAA,EAAAgd,EAAA,uBASA/uB,EAAAqN,yBAAA,UAAArN,CAAyC,cAC3BA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,UAAKrN,EAAAuN,iBAAA,IAAcvN,EAAAsN,wBAAAtN,+CAXKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAqX,EAAAwG,MAAA/X,WAWnB7W,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAmU,EAAAviB,SAAA,+DAKb7F,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6M,GAAA,IAAAC,EAAAhe,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0M,EAAAsM,WAAU,GANvBtqB,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,EAkCC5N,8BAA4B,eAA5BoV,EAA4B,SAAAnU,GAAAC,EAAAkU,EAAAnU,GAAA,IA8DpCE,EA9DoCC,EAAAC,EAAA+T,GAsDrC,SAAAA,EACYka,EACA/tB,EACAmoB,EACY6F,EACZ/W,GAAkB,IAAA9W,EAAAvB,SAAAC,KAAAgV,IAE1B1T,EAAAN,EAAAO,KAAAvB,OANQkvB,cACA5tB,EAAAH,OACAG,EAAAgoB,cACYhoB,EAAA6tB,aACZ7tB,EAAA8W,UA1DI9W,EAAA4T,YAAsB,EAEtB5T,EAAA+hB,QAAU/hB,EAAK4tB,YAAY7L,QAE3B/hB,EAAAkpB,SAAQ7oB,EAAAC,IAAAC,KAAG,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAClBlB,EAAKqb,MAAK,CAAAra,EAAAE,KAAA,QAAAF,SAAAE,KAAA,KACUhC,EAAA4uB,kBACjB,CACI5tB,MAAO,8BACPqmB,QACI,2DACJwH,KAAM,CAAExH,QAAS,oBAErBvmB,EAAK8W,SACR,OARW,GASU,SATV9V,EAAA4B,KASDorB,OAAiB,CAAAhtB,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAAArB,SAAAE,KAAA,EAE1BlB,EAAK4tB,YAAY1E,WAAUhmB,MAAO,SAACnB,IACrC,QAAA7C,EAAAmU,aAAYtR,IACNA,EACV,GAAE,OACF/B,EAAKyd,SAAQ,GAAM,wBAAAzc,EAAAwC,OAAA,EAAAhD,EAAA,IAEPR,EAAAiuB,WAAa,kBAAMjuB,EAAK4tB,YAAYM,gBAAgB,EACpDluB,EAAAyd,QAAU,SAACmG,GAAE,IAAAuK,EAAA,OAAoB,QAApBA,EAAKnuB,EAAK6tB,kBAAU,IAAAM,OAAA,EAAfA,EAAiB1Q,QAAQmG,EAAE,EAErD5jB,EAAAouB,OAASpuB,EAAKwtB,MAAM/X,UAAU,GAAGzV,CAmCzC,CAACxB,SAAAkV,EAAA,EAAAvT,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAjCM,SAAA0D,IAAA,OAAA3D,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EAEQxC,KAAKspB,YAAYiB,UAAUvqB,KAAK8uB,MAAM/X,UAAU,GAAG/P,OAAM,UAAAvB,EAAAlB,GAAAkB,EAAAvB,KAAAuB,EAAAlB,GAAA,CAAAkB,EAAAjD,KAAA,QAAAiD,EAAAlB,GAChEvE,KAAK0vB,OAAM,OAFf1vB,KAAK0vB,OAAMjqB,EAAAlB,GAAA,wBAAAkB,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAGd,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKkvB,YAAYxe,KAAKhP,KACjC,GAAC,CAAAD,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAK0vB,MAChB,GAAC,CAAAjuB,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKmB,KAAKwuB,YAAY3vB,KAAK2c,MAAM9I,MAC5C,GAAC,CAAApS,IAAA,WAAAkE,IAED,WAAmB,IAAAR,EAAAnF,KACTgW,EAAWhW,KAAKmB,KAAK+U,UAAU0Z,KAAK,SAACvsB,GAAC,OACxC8B,EAAKwX,MAAM9I,MAAM5N,SAAS5C,EAAEkQ,GAAG,GAEnC,OAAOyC,GAAU6Z,SAAW7Z,GAAUP,cAAgBO,GAAUvC,IACpE,KAACuB,CAAA,CApDoC,CAAQxU,EAAAiI,cAApCuM,SAA4B,mBAAA/U,iBAA5B+U,GAA2B9U,EAAAwI,4BAAAC,EAAA0M,kBAAAnV,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAAuC,WAAApL,EAAAwI,4BAAAO,EAAAgW,kBAAA,GAAA/e,EAAAwI,4BAAA+c,EAAAvM,WAAA,EAA3BlE,EAA4B,UAAA9U,EAAA,kCAA5B8U,EAA2B7L,UAAA,2BAAAuW,OAAA,CAAAxK,WAAA,cAAA9L,SAAA,CAAAlJ,EAAA4vB,6BAFzB,CAACjlB,EAAAS,YAAUpL,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,eAAAyiB,aA/GLC,UAAAC,MAAAC,EAAA,0GAkC4BF,UAAAG,MAAAD,EAAA,m4BADxBF,UAAAI,MAAAF,EAAA,6GACL,gBAA6BG,6KAkBxBL,UAAAM,MAAAJ,EAAA,oKAyBZF,UAAAO,MAAAL,EAAA,yHAvFLhwB,EAAA+R,qBAAA,EAAAue,EAAA,gBASAtwB,EAAAqN,yBAAA,aAAArN,CAAuD,QACnDA,EAAAyuB,iBAAA,KAAgCzuB,EAAAsN,yBAChCtN,EAAA+R,qBAAA,EAAAwe,EAAA,mDACJvwB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAAArN,CAA4C,gBACJA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,UAAArN,CAA+B,SACvBA,EAAAuN,iBAAA,IAAsCvN,EAAAsN,yBAC1CtN,EAAAqN,yBAAA,WAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,YAAUrN,EAAAuN,iBAAA,kCAAmCvN,EAAAsN,wBAAAtN,GAEjDA,EAAAqN,yBAAA,WAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAClBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,gEAQJvN,EAAAsN,wBAAAtN,OAIZA,EAAA+R,qBAAA,GAAAye,EAAA,mBAuBAxwB,EAAA+R,qBAAA,GAAA0e,EAAA,mBAmBAzwB,EAAAqN,yBAAA,gBACIrN,EAAA+R,qBAAA,GAAA2e,EAAA,gDAqBJ1wB,EAAAsN,gCAhGKtN,EAAA+Q,qBAAA,OAAAvH,EAAAwL,YAO2BhV,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAA4V,sBAAA,IAAApM,EAAA2Z,UAKpBnjB,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAAolB,MAAAttB,OAAA,mBAGUtB,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAjU,EAAAmU,sBAAA,MAAA3K,EAAAolB,MAAA9c,KAAA,aAKN9R,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAolB,MAAA+B,QAAA,UAAA3wB,EAAAmU,sBAAA,MAAA3K,EAAAolB,MAAA9c,KAAA,mBAAA9R,EAAAmU,sBAAA,MAAA3K,EAAAolB,MAAA9c,KAAA,GAAAtI,EAAAolB,MAAAxa,SAAA,uBAeXpU,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAolB,MAAAtY,UAAAnR,QAoBwCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAiT,MAAA,KAAAjT,EAAAiT,MAAApJ,IAyBpCrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,MAAApM,EAAA2Z,mcAuCJrO,CAA4B,oRCrIzC,IAAAjG,EAAAjR,EAAA,OACA0C,EAAA1C,EAAA,OAMAkR,EAAAlR,EAAA,OAMAgzB,GADAhzB,EAAA,MACAA,EAAA,QACAyC,EAAAzC,EAAA,MACAizB,EAAAjzB,EAAA,OACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,uCAea8B,uBAAqB,eAArBmuB,EAAqB,SAAAltB,GAAAC,EAAAitB,EAAAltB,GAAA,IA6Q7BmwB,EA7Q6BhwB,EAAAC,EAAA8sB,GAqN9B,SAAAA,EACY7sB,EACAC,GAAyB,IAAAG,EAAAvB,SAAAC,KAAA+tB,IAEjCzsB,EAAAN,EAAAO,KAAAvB,OAHQkB,YACAI,EAAAH,OAtNJG,EAAA2vB,MAAQ,IAAInX,EAAAqB,gBAAgB,GAC5B7Z,EAAA4vB,WAAa,IAAIpX,EAAAqB,gBAA8B,OAC/C7Z,EAAA6vB,SAAW,IAAIrX,EAAAqB,iBAAgB,GAC/B7Z,EAAA8vB,SAAW,IAAItX,EAAAqB,gBAAgB,CACnCkW,YAAa,CAAC,QAAS,OAAQ,UAAW,UAAW,YAEjD/vB,EAAAgwB,MAAQ,IAAIxX,EAAAqB,gBAAgBZ,KAAKgX,OACjCjwB,EAAAkwB,WAAU1X,EAAAgJ,eAAc,CAACxhB,EAAKgwB,MAAOhwB,EAAK2vB,QAAQ9tB,QACtD7C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAsjB,KAAI,SAACvgB,GAAC,OAAK/B,EAAK6vB,SAAS3uB,MAAK,EAAK,IAG/BlB,EAAAowB,SAAqB,GAErBpwB,EAAAqwB,gBACJrwB,EAAKH,KAAKkX,gBAAgBlV,QACtB7C,EAAA0b,QAAO,SAAC3Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAsxB,yBAAwB,OAAI,EAC5BtxB,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAsjB,KAAI,SAACvgB,GAAC,OAAK/B,EAAKuwB,UAAU,QAAQ,MAClCvxB,EAAAwxB,WAAU,SAAAxrB,GAAW,IAARiN,EAAEjN,EAAFiN,GACTjS,SAAK6vB,SAAS3uB,MAAK,IAAI,EAChBsuB,EAAAiB,sBAAqBxe,EAChC,IAAC,EACDjT,EAAA0xB,sBAAqB,SAAA5pB,EAAA6a,GAAU,OAAVD,EAAA5a,EAAA,GAAI,KAAA4a,EAAAC,EAAA,GAAM,EAAe,MAC9C3iB,EAAAwxB,WAAU,SAAC5e,GACP5R,SAAK6vB,SAAS3uB,MAAK,IAAK,EACjBsX,EAAAgJ,gBACF5P,GAAQ,IAAI4I,IAAI,SAACa,GACd,IAAMsV,KAAU1xB,EAAA2xB,WAAUvV,EAAMpJ,GAAI,YAAY0e,QAC5C,YAEEE,EAAMF,EAAQG,SAASjvB,QACzB7C,EAAAwb,KAAI,SAACuW,GAAU,OACVA,GAAc,IAAIvW,IACf,SAACwW,GAAC,OACE,IAAItjB,EAAA8e,cAAayE,IAAA,GACVD,GAAC,IACJvb,UAAWub,EAAE9b,UAAUwF,OACnB,SAAC3Y,GAAC,OACEA,EAAE2D,QAAU2V,EAAM3V,OAClB3D,EAAEmvB,QAAQ,GAElBnZ,OAAQsD,IACV,EACT,MAELrc,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAG,IAE5B,OAAK/Y,EAAKoxB,gBAAe,QAAAtuB,OAASuY,EAAMpJ,MACpCjS,EAAKyR,aAAY,QAAA3O,OACLuY,EAAMpJ,IACd0e,EAAQU,QAGTR,CACX,GAER,IAAC,EACD7xB,EAAAwb,KAAI,SAACzY,GAAC,SAAK7C,EAAAoyB,SAAuBvvB,EAAE,MACpC/C,EAAAuyB,aAAY,IAGJvxB,EAAAwxB,aAAYhZ,EAAAgJ,eAAc,CACtCxhB,EAAKqwB,gBACLrwB,EAAKkwB,UACNruB,QACC7C,EAAAwb,KAAI,SAAAiX,GAAgB,IAAAC,EAAAhQ,EAAA+P,EAAA,GAAd1vB,EAAC2vB,EAAA,GAAGhhB,EAAHgR,EAAAgQ,EAAA,MAAO,GACJvF,KAAOjtB,EAAAsG,eACb,OAAOzD,EAAE2Y,OACL,SAAC3Y,GAAC,SACE0tB,EAAAkC,WAAU5vB,EAAE2O,KAAMA,KACjB3O,EAAEoR,KAAKye,gBAAkBzF,EAAKzmB,MAAMksB,eACjC7vB,EAAEmT,UAAUoZ,KACR,SAACuD,GAAC,OACEA,EAAEnsB,MAAMksB,gBACRzF,EAAKzmB,MAAMksB,aAAa,GAC9B,EAElB,IAGY5xB,EAAA8xB,WAA0C9xB,EAAKkwB,QAAQruB,QACnE7C,EAAAwxB,WAAU,SAAAuB,GAAW,IAATrhB,EAASgR,EAAAqQ,EAAA,GAAL,GACNC,EAAQ,CACVC,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,KAErC,OAAO1Q,EAAKJ,UAAUyE,IAAI,4BAAyB,EAC7CoJ,EAAA6kB,eAAarB,IAAA,GAAMe,GAAK,IAAExgB,KAAM,UAAU3P,QACtC7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,EAAEyY,IAAI,SAACwW,GAAC,SAAKtjB,EAAA6kB,6BAA4BvB,EAAE,EAAC,MACvDhyB,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAG,KAAC,EAE7BrL,EAAA8kB,aAAWvB,EAAA,GAAMe,IAASnwB,QAAK7C,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAG,GACjE,IAAC,EACD/Z,EAAAuyB,aAAY,IAGAvxB,EAAAyyB,UAASja,EAAAgJ,eAAc,CAACxhB,EAAK4vB,aAAa/tB,QACtD7C,EAAAwxB,WAAU,SAAAkC,GAAG,MAAa,QAAhBhR,EAAAgR,EAAA,GAAG,GAAqB1yB,EAAK8xB,WAAa9xB,EAAKwxB,SAAS,IAAC,EACnExyB,EAAAsjB,KAAI,kBAAMtiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAK6vB,SAAS3uB,MAAK,EAAM,EAAC,MACtElC,EAAAuyB,aAAY,IAGAvxB,EAAA2yB,SAAkC3yB,EAAKkwB,QAAQruB,QAC3D7C,EAAAwxB,WAAU,SAAAoC,GAAA,IAAEliB,EAAFgR,EAAAkR,EAAA,GAAM,YACZnlB,EAAA6kB,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,IACjCc,KAAM,YACP3P,QACC7C,EAAAmyB,YAAW,SAACpvB,GACRZ,eAAQ0D,MAAM9C,IAAC,EACRyW,EAAAO,IAAG,GACd,GACH,MAEL/Z,EAAAsjB,KAAI,kBAAMtiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAK6vB,SAAS3uB,MAAK,EAAM,EAAC,MACtElC,EAAAuyB,aAAY,IAGAvxB,EAAA6yB,MAA+B7yB,EAAKkwB,QAAQruB,QACxD7C,EAAAwxB,WAAU,SAAAsC,GAAA,IAAEpiB,EAAFgR,EAAAoR,EAAA,GAAM,YACZrlB,EAAA6kB,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,IACjCqiB,qBAAqB,EACrBvhB,KAAM,SACP3P,QACC7C,EAAAmyB,YAAW,SAACpvB,GACRZ,eAAQ0D,MAAM9C,IAAC,EACRyW,EAAAO,IAAG,GACd,GACH,MAEL/Z,EAAAsjB,KAAI,kBAAMtiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAK6vB,SAAS3uB,MAAK,EAAM,EAAC,MACtElC,EAAAuyB,aAAY,IAGAvxB,EAAAgzB,QAAiChzB,EAAKkwB,QAAQruB,QAC1D7C,EAAAwxB,WAAU,SAAAyC,GAAA,IAAEviB,EAAFgR,EAAAuR,EAAA,GAAM,YACZxlB,EAAA6kB,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,IACjCc,KAAM,YACP3P,QAAK7C,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAG,GAAE,MAEtC/Z,EAAAsjB,KAAI,kBAAMtiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAK6vB,SAAS3uB,MAAK,EAAM,EAAC,MACtElC,EAAAuyB,aAAY,IAGAvxB,EAAAkzB,QAAiClzB,EAAKkwB,QAAQruB,QAC1D7C,EAAAwxB,WAAU,SAAA2C,GAAWzR,EAAAyR,EAAA,OACXC,EAAYpzB,EAAKH,KAAK8wB,QAAQ,mBACpC,OAAKyC,GACCC,EAAMp0B,EAAA2xB,WAAUwC,EAAW,WACtBE,QAAQ,2BAA0BpwB,MAAO,SAACnB,GAAC,MAAK,EAAE,IAF7C,EAAOyW,EAAAO,IAAG,GAG9B,IAAC,EACD/Z,EAAAwb,KAAI,SAACzY,GAAC,OACFA,EAAEyY,IACE,SAACwW,GAAC,OACE,IAAIvjB,EAAA8lB,QAAQ,CACR7iB,QAAM+e,EAAA0C,YAAWlZ,KAAKgX,OAAOuD,UAC7BxgB,SAAU,KACVpD,SAAUohB,EAAEyC,UACZvhB,WAAY8e,EAAE0C,YACdnhB,MAAO,CAACye,EAAEtc,SAAUsc,EAAEtb,OACtBie,eAAgB,CACZvhB,OAAQ4e,EAAEyC,YAEhB,EACT,MAELz0B,EAAAmyB,YAAW,oBAAM3Y,EAAAO,IAAG,GAAG,MACvB/Z,EAAAsjB,KAAI,kBAAMtiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAK6vB,SAAS3uB,MAAK,EAAM,EAAC,MACtElC,EAAAuyB,aAAY,IAIAvxB,EAAA4zB,YAAWpb,EAAAgJ,eAAc,CACrCxhB,EAAKyyB,OACLzyB,EAAK2yB,SACL3yB,EAAK6yB,MACL7yB,EAAKgzB,QACLhzB,EAAKkzB,UACNrxB,QACC7C,EAAAwb,KAAI,SAAAqZ,GAAA,IAAAC,EAAApS,EAAAmS,EAAA,GAAK1R,EAAC2R,EAAA,GAAEvc,EAACuc,EAAA,GAAEC,EAACD,EAAA,GAAEE,EAACF,EAAA,SACf,GAAAhxB,OAAA+e,EADGiS,EAAA,IACEjS,EAAKM,GAACN,EAAKtK,GAACsK,EAAKkS,GAAClS,EAAKmS,IAAGtY,KAAK,SAACmW,EAAGrU,GAAC,OAAKqU,EAAEnhB,KAAO8M,EAAE9M,IAAI,EAAC,IAItD1Q,EAAAqsB,qBAAoB7T,EAAAgJ,eAAc,CAC9CxhB,EAAK4zB,SACL5zB,EAAK8vB,WACNjuB,QACC7C,EAAAwb,KAAI,SAAAyZ,GAAA,IAAAC,EAAAxS,EAAAuS,EAAA,GAAQE,EAAOD,EAAA,UAATA,EAAA,GACDxZ,OACD,SAAC3Y,GAAC,IAAAqyB,EAAAC,EAAA,OACIr0B,EAAKowB,SAASzrB,SAAS5C,EAAEkQ,KACvBlQ,aAAa2L,EAAA8e,gBACN,MAAP2H,GAAoB,QAAbC,EAAPD,EAASpE,mBAAW,IAAAqE,OAAb,EAAPA,EAAsBzvB,SAAS,YAC5B,MAAPwvB,GAAoB,QAAbE,EAAPF,EAASpE,mBAAW,IAAAsE,OAAb,EAAPA,EAAsB1vB,SAAU5C,EAAUuQ,cAAa,EAC9D,IAIOtS,EAAAm0B,QAAUn0B,EAAK8vB,SAAS9V,eAExBha,EAAA0Q,KAAO1Q,EAAKgwB,MAAMhW,eAElBha,EAAA+hB,QAAU/hB,EAAK6vB,SAAS7V,eAOpCha,EAAKyR,aACD,YACAzR,EAAKH,KAAKkX,gBAAgBpF,UAAU,kBAChC3R,EAAK4vB,WAAW1uB,KACZlB,EAAKJ,UAAUyE,IAAI,8BACb,KACA,MACT,IAGTrE,EAAKowB,SAAWjtB,KAAKmxB,MACjBvxB,eAAe6D,QAAQ,2BAA6B,MACtD5G,CACN,CAACxB,SAAAiuB,EAAA,EAAAtsB,IAAA,cAAAC,MAEM,WACH1B,KAAKixB,MAAMzuB,KAAK+X,KAAKgX,MACzB,GAAC,CAAA9vB,IAAA,eAAAC,MAEM,WAA8B,IAAAyD,EAAAnF,KACjC,OAAAA,KAAK61B,SACD,OACA,WACiC,YAA7BC,SAASC,iBACH5wB,EAAK8rB,MAAMzuB,KAAK+X,KAAKgX,MAE/B,EAPiBtsB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,KAUjB,kBAAME,EAAK6wB,aAAa,CACnC,GAAC,CAAAv0B,IAAA,cAAAC,MAEM,WACH1B,KAAKi2B,cAAc,OACvB,GAAC,CAAAx0B,IAAA,UAAAC,MAEM,SAAQsQ,GACXhS,KAAKsxB,MAAM9uB,KAAKwP,EACpB,GAAC,CAAAvQ,IAAA,aAAAC,MAEM,SAAWua,GACdjc,KAAKk2B,aAAaja,EAAK1I,IACvBvT,KAAKixB,MAAMzuB,KAAK+X,KAAKgX,MACzB,GAAC,CAAA9vB,IAAA,eAAAC,MAEM,SAAa6R,GAChBvT,KAAK0xB,SAASyE,KAAK5iB,GACnBlP,eAAeC,QACX,yBACAG,KAAKC,UAAU1E,KAAK0xB,UAE5B,GAAC,CAAAjwB,IAAA,aAAAC,OAAAsvB,EAAArvB,EAEM,SAAiB8R,GAAY,IAAAjN,EAAAxG,KAAEo2B,EAAAnxB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAsB,OAAArD,IAAAC,KAAA,SAAAC,IAAA,IAAA2zB,EAAApE,EAAA,OAAAzvB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClDizB,EAAUjvB,EAAK4qB,SAASrY,YAAc,CAAEsY,YAAa,KACnDA,EAAgBoE,EAAhBpE,eACYA,EAAYprB,SAASwN,IAAS2iB,GAC9C5vB,EAAK4qB,SAAS5uB,KAAI+vB,IAAA,GACXkD,GAAO,IACVpE,YAAaA,EAAYrV,OAAO,SAAC3Y,GAAC,OAAKA,IAAMoQ,CAAI,MAGrDjN,EAAK4qB,SAAS5uB,KAAI+vB,IAAA,GACXkD,GAAO,IACVpE,YAAW,GAAAjtB,OAAA+e,EAAMkO,GAAW,CAAE5d,OAErC,wBAAAnR,EAAAwC,OAAA,EAAAhD,EAAA,EAbuDF,EAavD,GACJ,SAAAgsB,EAAAzQ,GAAA,OAAA6T,EAAAhsB,MAAAhF,KAAAiF,UAAA,MAAA8oB,CAAA,CA7R6B,CAAQvtB,EAAAiI,cAA7BslB,SAAqB,mBAAA9tB,iBAArB8tB,GAAoB7tB,EAAAsd,mBAAA7U,EAAAC,iBAAA1I,EAAAsd,mBAAA3U,EAAAC,qBAAA,EAApBilB,EAAqB,WAAA7tB,EAAA,oCAArB6tB,EAAoBtQ,QAApBsQ,EAAoBrQ,UAAAC,WAFjB,SAEHoQ,CAAqB,sFCjClCsI,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,MAAA8B,0OCFA,IAAA22B,EAAAz4B,EAAA,OACA04B,EAAA14B,EAAA,kBAEM24B,EAAiC,GAEjCC,EAAoB,IAAIH,EAAAI,WAE9B,SAAgBC,EAAqBC,GAA6B,IACtBC,EADsBC,EAAAC,EACrCH,GAAe,QAAAI,EAAA,WAAE,IAA/BC,EAAUJ,EAAAp1B,MACZ+0B,EAAiB7G,KAAK,SAAAtpB,GAAK,OAAAA,EAAFiN,KAAgB2jB,EAAW3jB,EAAE,IACvDkjB,EAAiBN,KAAKe,IAF9B,IAAAH,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAAH,GAIC,OAAAtM,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACL,CANAz3B,uBAAAg3B,EAWah3B,iBAAc,eAAd03B,EAAc,oBAAAA,IAAAv3B,EAAAC,KAAAs3B,EAAA,CAAAx3B,SAAAw3B,EAAA,EAAA71B,IAAA,YAAAC,OACvB61B,EAAA51B,EAAAC,IAAAC,KAIO,SAAAC,EAAgB01B,GAAgB,IAAAC,EAAAC,EAAA,OAAA91B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC9Bg1B,EAAQ,CAAAl1B,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS+yB,GAAiB,OAC6B,KAAhEe,EAAchB,EAAiB7G,KAAK,SAAAxnB,GAAK,OAAAA,EAAFmL,KAAgBikB,CAAQ,IACpD,CAAAl1B,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS8zB,GAAW,OAAAn1B,SAAAE,KAAA,KACfg0B,EAAAmB,gBAAeH,GAC9Bl0B,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,OAFZ,KAALq0B,EAAKp1B,EAAA4B,MAGF,CAAA5B,EAAAE,KAAA,SACLi1B,SAAWlF,EAAA,GAAQmF,GACnBjB,EAAiBN,KAAKsB,GAAan1B,EAAAqB,OAAA,SAC5B8zB,GAAW,eAAAn1B,EAAAqB,OAAA,SAEf+yB,GAAiB,yBAAAp0B,EAAAwC,OAAA,EAAAhD,EAAA,IAC3B,SAAAyoB,EAAApN,GAAA,OAAAoa,EAAAvyB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,uBAAAC,MAEM,SAAqBm1B,GACxBD,EAAqBC,EACzB,KAACS,EArBD,IAAAC,CAqBC,CAtBsB,GAAdD,SAAc,mBAAAr3B,iBAAdq3B,EAAc,EAAdA,EAAc,WAAAp3B,EAAA,+CAAdo3B,EAAcM,MAAA,IAAdN,CAAc,oOCpB3B,IAAArtB,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAIA+5B,GAHA/5B,EAAA,OACAA,EAAA,OAEAA,EAAA,2GAiBoBoC,EAAAyJ,oBAAA,6DAEIzJ,EAAA+Q,qBAAA,MAAA6mB,EAAAtM,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAIAvrB,EAAAyJ,oBAAA,yEAdZzJ,EAAAqN,yBAAA,UAAArN,CAIC,WAIOA,EAAA+R,qBAAA,EAAA8lB,EAAA,aAKA73B,EAAA+R,qBAAA,EAAA+lB,EAAA,yBAAA93B,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAkB,WAEVA,EAAAuN,iBAAA,oEAIJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,OAAsCzuB,EAAAsN,yBACtCtN,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAA8mB,EAAA53B,EAAAkR,wBAAAU,GAAAiM,UAAAhM,EAAA7R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAO,EAAAkmB,eAAAH,GAAqB,GAE9B53B,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAA8mB,EAAA53B,EAAAkR,wBAAAU,GAAAiM,UAAAsC,EAAAngB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6O,EAAA+X,iBAAAN,GAAuB,GAEhC53B,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA8mB,EAAA53B,EAAAkR,wBAAAU,GAAAiM,UAAApI,EAAAzV,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAmE,EAAA0iB,gBAAAP,GAAsB,GAE/B53B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,wFA5DRA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA6mB,EAAAtM,OAAA,KAAAsM,EAAAtM,OAAAnmB,OAAAnF,CAA4B,WAAAqtB,GAa7BrtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAAsI,EAAA/V,EAAA4V,sBAAA,IAAA5V,EAAA4V,sBAAA,IAAAgiB,EAAAvkB,MAAA,KAAA0C,EAAAxC,OAAA,kBAKkCvT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAiJ,EAAAQ,QAAAp4B,EAAA6uB,sBAAA,IAmCtC7uB,EAAAwN,oBAAA,IAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAkmB,UAAAtyB,SAAA6xB,EAAAvkB,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAkmB,UAAAtyB,SAAA6xB,EAAAvkB,IAAA,+BAvE9B,IAAMilB,EAAuB,GAsGhB54B,0BAAuB,eAAvB64B,EAAuB,WAYhC,SAAAA,EACYv3B,EACAkX,GAAkB,IAAA9W,EAAAtB,KAAAD,EAAAC,KAAAy4B,GADlBz4B,KAAAkB,YACAlB,KAAAoY,UAbLpY,KAAA04B,MAAsB,GACtB14B,KAAA24B,UAAW,EAIX34B,KAAAqf,SAAyB,GA4BhBrf,KAAA44B,iBAAmB,SAACC,GAA6B,OAC5Dv3B,EAAKw3B,UAAYD,CAAE,EACR74B,KAAA+4B,kBAAoB,SAACF,GAA6B,OAC7Dv3B,EAAK03B,SAAWH,CAAE,EACP74B,KAAAi5B,iBAAmB,SAACtP,GAAU,OAAMroB,EAAKq3B,SAAWhP,CAAC,CAvBlE,CAEH7pB,SAAA24B,EAAA,EAAAh3B,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc,qBAAuB6yB,CAC/D,GAAC,CAAA/2B,IAAA,WAAAC,MAWM,SAASw3B,GACZl5B,KAAK04B,MAAQQ,EACTl5B,KAAK84B,WAAW94B,KAAK84B,UAAU94B,KAAK04B,MAC5C,GAEA,CAAAj3B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK04B,MAAQh3B,GAAS,EAC1B,GAAC,CAAAD,IAAA,mBAAAC,MAQM,SAAiBy3B,GACpB,IAAMC,EAAep5B,KAAK04B,MAAM1c,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAO4lB,EAAM5lB,EAAE,GAC/DvT,KAAKq5B,SAASD,EAClB,GAAC,CAAA33B,IAAA,iBAAAC,MAEM,SAAey3B,GAAkB,IAAAh0B,EAAAnF,KACxBA,KAAKoY,QAAQrD,KAAK8iB,EAAAyB,0BAA2B,CACrDx2B,KAAM9C,KAAK04B,QAEX9f,cAAc3F,UAAU,SAACylB,GACzB,GAAKA,EACLA,GAAQA,EAAM5c,IAAI,SAACG,GAAI,OAAAsW,EAAA,GAAWtW,EAAI,GAAK,IACnB6a,EADmBC,EAAAC,EACxB0B,GAAK,IAAxB,IAAA3B,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAA0B,KAAfnb,EAAI6a,EAAAp1B,MACXua,EAAKpE,OAASoE,EAAKpE,OAAO0hB,MAAM,EAAGtd,EAAKqc,OAAM,CACjD,OAAA3N,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACDlyB,EAAKk0B,SAASX,EAAK,CACvB,EACJ,GAAC,CAAAj3B,IAAA,kBAAAC,MAEM,SAAgBy3B,GACnB,IAAMK,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAASkzB,EAAM5lB,IAEvCvT,KAAKkB,UAAUw4B,gBAAgB,mBAD/BD,EACiD,GAAAr1B,OAAA+e,EAC1CqW,GAAQ,CACXL,EAAM5lB,KAKNimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM81B,EAAM5lB,EAAE,GAGjD,KAACklB,CAAA,CAzE+B,GAAvBA,SAAuB,mBAAAx4B,iBAAvBw4B,GAAuBv4B,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAqQ,WAAA,EAAvBuf,EAAuB,UAAAv4B,EAAA,kCAAvBu4B,EAAuBtvB,UAAA,uBAAAC,SAAA,CAAAlJ,EAAA4vB,6BATrB,CACP,CACIpjB,QAAS9C,EAAA+vB,kBAETC,eAAa3vB,EAAA4vB,YAAW,kBAAMpB,CAAuB,GACrDqB,OAAO,MAEdxwB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,ynBAnEyB0iB,UAAAC,MAAAC,EAAA,mTAYEF,UAAAG,MAAAD,EAAA,2JAAc,oFAYdF,UAAAI,MAAAF,EAAA,6JAAe,gOApDvChwB,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAA8nB,EAAA,eAwEJ75B,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAAuuB,gBAAgB,GAEzB/3B,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,eAASvN,EAAAsN,wBAAAtN,YA/EGA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgvB,oGA6FrBD,CAAuB,gJC9GpC,IAAAxuB,EAAAnM,EAAA,UAOAA,EAAA,8IAMQoC,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,eACIrN,EAAAyJ,oBAAA,sBAIAzJ,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4Q,GAAA,IAAAsG,EAAApoB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8W,EAAAtgB,MAAAyX,OAAY,GAGrBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4Q,GAAA,IAAApL,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAojB,UAAAva,OAAgB,GAGzBvf,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAAsD,eAAtDA,CAAsD,SAAtDA,CAAsD,WAItCA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAwCvN,EAAAsN,wBAAAtN,GAE/CA,EAAAqN,yBAAA,kBACIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA4Q,GAAA,IAAAjQ,EAAA7R,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAO,EAAAkK,KAAAqc,OAAAnnB,EAC/B,GAEejR,EAAAsN,wBAAAtN,GAELA,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,gBAAArN,CAAmC,YACCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBACvCtN,EAAAqN,yBAAA,YAAArN,CAAyC,QAClCA,EAAAuN,iBAAA,IAA0CvN,EAAAsN,wBAAAtN,OAIzDA,EAAAqN,yBAAA,YAAArN,CAA2D,gBAOnDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4Q,GAAA,IAAAH,EAAA3hB,EAAAqR,0BAAAsQ,SAAAoY,QAAApY,EAAAoY,OAA2B/5B,EAAAsR,sBAAAqQ,EAAAqY,aAAAza,KAAAoC,EAAAoY,QAAyB,GAEpD/5B,EAAAqN,yBAAA,YAAArN,CAA8C,kBAEtCA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IAGJvN,EAAAsN,wBAAAtN,OAIhBA,EAAA0hB,iCAAA,2CArEY1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,SAAAoB,EAAA4J,KAAAuP,QAgBAtrB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAAvN,EAAA8nB,IAAAj6B,CAAyB,gBAAAmS,EAAA8nB,KAMrBj6B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA8nB,IAAA,kCAQIj6B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4J,KAAAxI,KAAA,KAEDvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAA0E,EAAA4J,KAAApE,OAAA,KAAAxF,EAAA4J,KAAApE,OAAAxS,SAAA,gBAGHnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA4J,KAAAqc,OAAAp4B,CAAyB,QAAzBA,CAAyB,aAAAmS,EAAA4J,KAAApE,OAAA,KAAAxF,EAAA4J,KAAApE,OAAAxS,SAAA,GAStBnF,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA4J,KAAAtI,aAAA,kBASPzT,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAvN,EAAA4nB,QAMQ/5B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4nB,OAAA,oBAGA/5B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4nB,OAAA,iEAShB/5B,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,4CACJvN,EAAAsN,wBAAAtN,IAiBHN,wBAAqB,eAArBw6B,EAAqB,WApGlC,SAAAA,IAAAr6B,EAAAC,KAAAo6B,GAsGoBp6B,KAAAi6B,QAAkB,EAClBj6B,KAAAm6B,KAAe,EAEdn6B,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAChBvf,KAAAk6B,aAAe,IAAIjwB,EAAAsV,aACnBvf,KAAAgI,MAAQ,IAAIiC,EAAAsV,aAWhCzf,SAAAs6B,EAAA,EAAA34B,IAAA,WAAAC,MATU,WACC1B,KAAKic,OAASjc,KAAKic,KAAKqc,SAAQt4B,KAAKic,KAAKqc,OAAS,EAC3D,GAAC,CAAA72B,IAAA,cAAAC,MAEM,SAAY24B,GACXA,EAAQpe,MAAQjc,KAAKic,OAChBjc,KAAKic,KAAKqc,SAAQt4B,KAAKic,KAAKqc,OAAS,GAElD,KAAC8B,CAAA,CAjB6B,GAArBA,SAAqB,mBAAAn6B,iBAArBm6B,EAAqB,EAArBA,EAAqB,UAAAl6B,EAAA,kCAArBk6B,EAAqBjxB,UAAA,oBAAAuW,OAAA,CAAAzD,KAAA,OAAAge,OAAA,SAAAE,IAAA,OAAAxa,QAAA,CAAAqa,UAAA,YAAAE,aAAA,eAAAlyB,MAAA,SAAAoB,SAAA,CAAAlJ,EAAAo6B,gCAAAhxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,86BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjG1BvJ,EAAA+R,qBAAA,EAAAsoB,EAAA,wBAyEAr6B,EAAA+R,qBAAA,EAAAuoB,EAAA,yBAAAt6B,EAAAkmB,yEAzEelmB,EAAA+Q,qBAAA,OAAAvH,EAAAuS,KAAA/b,CAAY,WAAAiuB,EAAA,mUAiGtBiM,CAAqB,sKCvGrBx6B,+BAA4B,eAA5B66B,EAA4B36B,EAAA,SAAA26B,IAAA16B,EAAAC,KAAAy6B,EAAA,GAA5BA,SAA4B,mBAAAx6B,iBAA5Bw6B,EAA4B,EAA5BA,EAA4B,UAAAv6B,EAAA,kCAA5Bu6B,EAA4BtxB,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAA5B+wB,CAA4B,+JCA5B76B,wBAAqB,eAArB86B,EAAqB56B,EAAA,SAAA46B,IAAA36B,EAAAC,KAAA06B,EAAA,GAArBA,SAAqB,mBAAAz6B,iBAArBy6B,EAAqB,EAArBA,EAAqB,UAAAx6B,EAAA,kCAArBw6B,EAAqBvxB,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAArBgxB,CAAqB,mLCPlC,IAAAzwB,EAAAnM,EAAA,OASAgc,GAFAhc,EAAA,MAEAA,EAAA,QACAwC,EAAAxC,EAAA,gGA+BgCoC,EAAAqN,yBAAA,WAAArN,CAGC,aAEOA,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,qDADIA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAgtB,EAAArC,QAAA,gCAGRp4B,EAAAyJ,oBAAA,6DAMIzJ,EAAA+Q,qBAAA,MAAA0pB,EAAAnP,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,yEA/BhBzJ,EAAAqN,yBAAA,SAAArN,CAKC,eAIOA,EAAA8Q,qBAAA,uBAAA2pB,EAAAz6B,EAAAkR,wBAAAqF,GAAAsH,UAAArH,EAAAxW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAkF,EAAAkkB,YAAAD,GAAkB,GAE3Bz6B,EAAAqN,yBAAA,YAGIrN,EAAA+R,qBAAA,EAAA4oB,EAAA,cAQA36B,EAAA+R,qBAAA,EAAA6oB,EAAA,cAQA56B,EAAA+R,qBAAA,EAAA8oB,EAAA,0BAAA76B,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAwC,WAAxCA,CAAwC,SAI3BA,EAAAuN,iBAAA,IAA2BvN,EAAAsN,yBAChCtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAEC,QAEOA,EAAAuN,iBAAA,IAEJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA2pB,EAAAz6B,EAAAkR,wBAAAqF,GAAAsH,UAAA5G,EAAAjX,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA2F,EAAA6iB,UAAAva,KAAAkb,GAAqB,GAE9Bz6B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFApDJA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAc,EAAAsN,SAAApZ,SAAA00B,EAAApnB,KAOArT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA0pB,EAAAnP,OAAA,KAAAmP,EAAAnP,OAAAnmB,OAAAnF,CAGb,WAAAwV,GAeiBxV,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAwmB,EAAAlnB,MAAA,SAEDvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAgtB,EAAAK,SAAA,KAOA96B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAgtB,EAAA9iB,OAAA,KAAA8iB,EAAA9iB,OAAAxS,SAAA,mBAWZnF,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAA7N,EAAAkpB,YAAAN,EAAApnB,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAApC,EAAAkpB,YAAAN,EAAApnB,IAAA,wDApEtBrT,EAAAqN,yBAAA,UAIIrN,EAAA+R,qBAAA,EAAAipB,EAAA,2CAuEJh7B,EAAAsN,kEArE0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAc,EAAAiB,QAAA,2BAP9B3X,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAkpB,EAAA,0CA4EJj7B,EAAA0hB,yGA1ES1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAAwF,SAAA,KAAA2J,EAAAnc,OAAAnF,CAAgC,WAAAiuB,EAAA,wBA6EzCjuB,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,4DACJvN,EAAAsN,wBAAAtN,0BAIJA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,iCAA2BvN,EAAAsN,wBAAAtN,UADpCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAchBrR,qBAAkB,eAAlBw7B,EAAkB,WAsB3B,SAAAA,EAAoBC,GAA+Bt7B,EAAAC,KAAAo7B,GAA/Bp7B,KAAAq7B,eArBJr7B,KAAAqf,SAAmB,GACnBrf,KAAAu4B,UAAsB,GACtBv4B,KAAAs7B,eAA+B,GAC9Bt7B,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAChBvf,KAAAu7B,SAAW,IAAItxB,EAAAsV,aAEhBvf,KAAAw7B,OAAS,IAAI1hB,EAAAqB,gBAAwC,IAErDnb,KAAAqjB,QAAUrjB,KAAKq7B,aAAahY,QAC5BrjB,KAAA6X,UAASiC,EAAAgJ,eAAc,CACnC9iB,KAAKw7B,OACLx7B,KAAKq7B,aAAaI,kBACnBt4B,QACC7C,EAAAwb,KAAI,SAAAxV,GAAqB,IACIwwB,EADJ1uB,EAAA4a,EAAA1c,EAAA,GAAnBk1B,EAAMpzB,EAAA,GAAEyP,EAAMzP,EAAA,GAAA2uB,EAAAC,EACGnf,GAAM,IAAzB,IAAAkf,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAA2B,KAAhBnb,EAAI6a,EAAAp1B,MACXua,EAAKqc,OAASkD,EAAOvf,EAAK1I,KAAO,EACpC,OAAAoX,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,OAAOxf,CACX,GAGkD,CAAC/X,SAAAs7B,EAAA,EAAA35B,IAAA,cAAAC,MAEhD,SAAY24B,GAAsB,IAAAqB,EACrC,GAAIrB,EAAQiB,gBAAqC,QAAvBI,EAAI17B,KAAKs7B,sBAAc,IAAAI,GAAnBA,EAAqBr2B,OAAQ,CACvD,IACsCs2B,EADhCH,EAAS,GAAGI,EAAA5E,EACCh3B,KAAKs7B,gBAAc,IAAtC,IAAAM,EAAAjS,MAAAgS,EAAAC,EAAAzE,KAAAC,MAAwC,KAA7Bnb,EAAI0f,EAAAj6B,MACX85B,EAAOvf,EAAK1I,IAAM0I,EAAKqc,OAC1B,OAAA3N,GAAAiR,EAAA1W,EAAAyF,EAAA,SAAAiR,EAAAvE,GAAA,CACDr3B,KAAKw7B,OAAOh5B,KAAKg5B,EAAM,CAE/B,GAAC,CAAA/5B,IAAA,cAAAC,MAEM,SAAYwP,GACf,OAAOlR,KAAKu4B,UAAUtyB,SAASiL,EACnC,GAAC,CAAAzP,IAAA,cAAAC,MAEM,SAAYy3B,GACfn5B,KAAKu7B,SAAS9b,KAAK0Z,EACvB,KAACiC,CAAA,CAxC0B,GAAlBA,SAAkB,mBAAAn7B,iBAAlBm7B,GAAkBl7B,EAAAwI,4BAAAC,EAAAkzB,mBAAA,EAAlBT,EAAkB,UAAAl7B,EAAA,kCAAlBk7B,EAAkBjyB,UAAA,iBAAAuW,OAAA,CAAAL,SAAA,WAAAkZ,UAAA,YAAA+C,eAAA,kBAAA3b,QAAA,CAAAqa,UAAA,YAAAuB,SAAA,YAAAnyB,SAAA,CAAAlJ,EAAAo6B,gCAAAhxB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,4zDAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAnHvBvJ,EAAAqN,yBAAA,UAAArN,CAEC,UAC8BA,EAAAuN,iBAAA,aAAOvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,iCACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA6pB,EAAA,oDA8EJ57B,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA8pB,EAAA,yBAAA77B,EAAAkmB,kCAUAlmB,EAAA+R,qBAAA,GAAA+pB,EAAA,yBAAA97B,EAAAkmB,4EA3FQlmB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAA6T,EAAAthB,EAAA4V,sBAAA,IAAApM,EAAAmO,SAAA,KAAA2J,EAAAnc,SAAA,uBAEWnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,IAAApM,EAAA2Z,SAAAnjB,CAA0B,WAAAqtB,EAAA,iOA4GxC6N,CAAkB,uKCjI/B,IAAAptB,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,gLAqDgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAmV,GAAA,IAAAxQ,EAAA7V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAuE,EAAAkmB,UAAqB,KAAI,GAEzB/7B,EAAAuN,iBAAA,YACJvN,EAAAsN,wBAAA,EA5DhB,IAAMgrB,EAAuB,GAgHhB54B,4BAAyB,eAAzB05B,EAAyB,WAoBlC,SAAAA,EACYp4B,EACyBg7B,GAAoBn8B,EAAAC,KAAAs5B,GAD7Ct5B,KAAAkB,YACyBlB,KAAAk8B,SArB9Bl8B,KAAAi8B,UAA+B,KAC/Bj8B,KAAAqf,SAAQ8D,EAAsBnjB,KAAKk8B,QAAU,GAqBjD,CAACp8B,SAAAw5B,EAAA,EAAA73B,IAAA,YAAAkE,IAnBJ,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc,qBAAuB6yB,CAC/D,GAAC,CAAA/2B,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKqf,SAASvD,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAApT,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKqf,SAAS8c,OAAO,SAACl8B,EAAGqyB,GAAM,OAAKryB,EAAIqyB,EAAEgG,MAAM,EAAE,EAC7D,GAAC,CAAA72B,IAAA,aAAAC,MAEM,SAAW6R,GACd,OAAOA,GAAMvT,KAAKo8B,aAAan2B,SAASsN,EAC5C,GAAC,CAAA9R,IAAA,cAAAC,MAOM,SAAYg2B,EAAmB2E,GAClC,IAAMnpB,EAAOlT,KAAKqf,SAASrD,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAOmkB,EAAMnkB,EAAE,GACtD8oB,GAAOnpB,EAAKijB,KAAKuB,GACrB13B,KAAKqf,SAAQ8D,EAAOjQ,EACxB,GAAC,CAAAzR,IAAA,kBAAAC,MAEM,SAAgBy3B,GACnB,IAAMK,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAASkzB,EAAM5lB,IAEvCvT,KAAKkB,UAAUw4B,gBAAgB,mBAD/BD,EACiD,GAAAr1B,OAAA+e,EAC1CqW,GAAQ,CACXL,EAAM5lB,KAKNimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM81B,EAAM5lB,EAAE,GAGjD,KAAC+lB,CAAA,CA7CiC,GAAzBA,SAAyB,mBAAAr5B,iBAAzBq5B,GAAyBp5B,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAsBtBsF,EAAAsuB,iBAAe,EAtBlBhD,EAAyB,UAAAp5B,EAAA,kCAAzBo5B,EAAyBnwB,UAAA,yBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ypDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA3G9BvJ,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAIrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAElBA,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,qBACAzJ,EAAAqN,yBAAA,WAGIrN,EAAAyJ,oBAAA,8BAGAzJ,EAAAqN,yBAAA,mBAIIrN,EAAA8Q,qBAAA,qBAAAG,GAAA,OAAazH,EAAA2uB,gBAAAlnB,EAAuB,EAApCjR,CAAqC,oBAAAiR,GAAA,OAAAzH,EAAAuyB,UAAA9qB,CAAA,GAGxCjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,sBAMIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA6yB,YAAA7yB,EAAAuyB,UAAA9qB,EAA+B,EAA/CjR,CAAgD,8BAKnCwJ,EAAA2uB,gBAAA3uB,EAAAuyB,UAA2B,EALxC/7B,CAAgD,0BAAAwJ,EAAAuyB,UAM3B,IAAI,GAC5B/7B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,eAGIrN,EAAA+R,qBAAA,GAAAuqB,EAAA,iBAUAt8B,EAAAqN,yBAAA,gBAQIrN,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAQqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAA4BrN,EAAAuN,iBAAA,mBAAYvN,EAAAsN,wBAAAtN,KAGhDA,EAAAqN,yBAAA,WAA8BrN,EAAAuN,iBAAA,IAA0BvN,EAAAsN,yBACxDtN,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA6yB,YAAA7yB,EAAAuyB,WAAwBvyB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAA0B,GAE3DrT,EAAAqN,yBAAA,YAAArN,CAA+B,kBAEvBA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,gBA/EAA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,WAAAvH,EAAA0yB,aAAAl8B,CAAyB,YAAAwJ,EAAA6uB,UAAzBr4B,CAAyB,iBAAAwJ,EAAA2V,UAW7Bnf,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAAuyB,UAAA/7B,CAA2B,UAAAwJ,EAAAuyB,WAF3B/7B,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,UAAA/7B,CAAmB,SAAAwJ,EAAA0yB,aAAAn2B,UAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KAAA,IAAnBrT,CAAmB,QAAAwJ,EAAAuyB,WAAAvyB,EAAA6uB,UAAAtyB,UAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KAAA,KAsBlBrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,WAUD/7B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,OAAAlW,EAAAuyB,WADA/7B,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAaAnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAQ0Bnf,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAjE,EAAAgzB,MAAA,mBAK1Bx8B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KADArT,EAAA+Q,qBAAA,YAAAvH,EAAAuyB,WAMQ/7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,oBAGArT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,uNAaf+lB,CAAyB,iLCpHtC,IAAAxf,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAQA04B,EAAA14B,EAAA,OACA6+B,EAAA7+B,EAAA,OACAizB,EAAAjzB,EAAA,OAEA8+B,EAAA9+B,EAAA,iBAWa8B,oBAAiB,eAAjBi8B,EAAiB,WAH9B,SAAAA,IAAA,IAAAv6B,EAAAtB,KAAAD,EAAAC,KAAA67B,GAIY77B,KAAA68B,SAAW,IAAI/iB,EAAAqB,gBAA8B,CAAEnJ,KAAMuI,KAAKgX,QAC1DvxB,KAAA88B,QAAU,IAAIhjB,EAAAqB,gBAAwB,IACtCnb,KAAAmxB,SAAW,IAAIrX,EAAAqB,gBAAwB,IAE/Bnb,KAAA+8B,OAAS/8B,KAAK88B,QAAQxhB,eACtBtb,KAAAqjB,QAAUrjB,KAAKmxB,SAAS7V,eAExBtb,KAAAg9B,cAAaljB,EAAAO,IAAG,GAAGlX,QAC/B7C,EAAAwxB,WAAU,WACNxwB,SAAK6vB,SAAS3uB,KAAKlB,EAAK6vB,SAASpY,WAAa,aAAU,EACjDyd,EAAAyG,cACX,IAAC,EACD38B,EAAAsjB,KAAI,SAACvgB,GAAC,OACF/B,EAAK6vB,SAAS3uB,KACVlB,EAAK6vB,SAASpY,WAAWmkB,QAAQ,cAAe,IACnD,MAEL58B,EAAAuyB,aAAY,IAGA7yB,KAAAm9B,eAAiBn9B,KAAK68B,SAAS15B,QAC3C7C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAAxrB,GAAmB,IAAhBwN,EAAIxN,EAAJwN,KAAM9B,EAAI1L,EAAJ0L,KACf1Q,SAAK6vB,SAAS3uB,KAAKlB,EAAK6vB,SAASpY,WAAa,eAAY,EACnD4jB,EAAA/I,eAAc,CACjB/f,MAAOC,GAAQ,GACfyf,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,IACjCc,KAAM,iBAEd,IAAC,EACDxS,EAAAsjB,KAAI,SAACvgB,GAAC,OACF/B,EAAK6vB,SAAS3uB,KACVlB,EAAK6vB,SAASpY,WAAWmkB,QAAQ,gBAAiB,IACrD,MAEL58B,EAAAuyB,aAAY,IAGA7yB,KAAAo9B,oBAAmBtjB,EAAAgJ,eAAc,CAAC9iB,KAAK68B,WAAW15B,QAC9D7C,EAAAwxB,WAAU,SAAA1pB,GAA6B,IAAAi1B,EAAAra,EAAA5a,EAAA,MAAzB0L,EAAIupB,EAAJvpB,KAAM9B,EAAIqrB,EAAJrrB,KAAMsrB,EAAMD,EAANC,OACtB76B,eAAQO,IAAI,WAAYs6B,IAAM,EACvB9G,EAAA+G,wBACH,CACI1pB,MAAOC,GAAQ,GACfyf,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,IACjCc,KAAM,iBAEVwqB,GACFn6B,QAAK7C,EAAAmyB,YAAW,oBAAM3Y,EAAAO,IAAG,GAAmB,GAClD,IAAC,EACD/Z,EAAAwb,KAAI,SAAC5I,GAAI,OAAKA,EAAK8J,KAAK,SAACmW,EAAGrU,GAAC,OAAKqU,EAAE1f,KAAK+pB,cAAc1e,EAAErL,KAAK,EAAC,MAC/DnT,EAAAsjB,KAAI,SAACvgB,GAAC,SAAKu5B,EAAAhG,sBAAqBvzB,EAAE,MAClC/C,EAAAuyB,aAAY,IAGA7yB,KAAAy7B,mBAAkB3hB,EAAAgJ,eAAc,CAC5C9iB,KAAK88B,QACL98B,KAAKo9B,mBACNj6B,QACC7C,EAAAwb,KAAI,SAAAoH,GAAqB,IAAAua,EAAAza,EAAAE,EAAA,GAAXrL,EAAM4lB,EAAA,GACV9T,EADE8T,EAAA,GACSvK,cACjB,OAAOrb,EAAOmE,OACV,SAAC3Y,GAAC,IAAAq6B,EAAA,OACU,QAARA,EAAAr6B,EAAEwU,cAAM,IAAA6lB,OAAA,EAARA,EAAUr4B,UACThC,EAAEoQ,KAAKyf,cAAcjtB,SAAS0jB,IAC3BtmB,EAAEsQ,YAAYuf,cAAcjtB,SAAS0jB,GAAG,EAExD,IAAC,EACDrpB,EAAAuyB,aAAY,IAUnB/yB,SAAA+7B,EAAA,EAAAp6B,IAAA,YAAAC,MAPU,SAAUA,GACb1B,KAAK88B,QAAQt6B,KAAI,GAAA4B,OAAI1C,GACzB,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWqhB,GACd/iB,KAAK68B,SAASr6B,KAAI+vB,IAAA,GAAMvyB,KAAK68B,SAASn7B,OAAUqhB,GACpD,KAAC8Y,CAAA,CAhFyB,GAAjBA,SAAiB,mBAAA57B,iBAAjB47B,EAAiB,EAAjBA,EAAiB,WAAA37B,EAAA,oCAAjB27B,EAAiBpe,QAAjBoe,EAAiBne,UAAAC,WAFd,SAEHke,CAAiB,kLCzB9Bj8B,gBAA0BE,EAQtB,SAAA69B,EAAY76B,GAA6B/C,EAAAC,KAAA29B,GAPzC39B,KAAAuT,GAAa,GACbvT,KAAAyT,KAAe,GACfzT,KAAA2T,YAAsB,GACtB3T,KAAA+T,UAAqB,GACrB/T,KAAA49B,WAAqBrjB,KAAKgX,MAC1BvxB,KAAA69B,WAAqBtjB,KAAKgX,MAGtBnH,OAAO0T,OAAO99B,KAAM8C,EACxB,GAGJlD,qBAA+BE,EAU3B,SAAAi+B,EAAYj7B,GAAkC/C,EAAAC,KAAA+9B,GAC1C3T,OAAO0T,OAAO99B,KAAM8C,EACxB,GAGJlD,aAAuBE,EAenB,SAAA62B,EAAY7zB,GAA0B/C,EAAAC,KAAA22B,GANtC32B,KAAAwrB,OAAmB,GAOfpB,OAAO0T,OAAO99B,KAAM8C,EACxB,GAGJlD,QAAkBE,EAad,SAAAk+B,EAAYl7B,GAAqB/C,EAAAC,KAAAg+B,GAZjCh+B,KAAAuT,GAAa,GACbvT,KAAAi+B,QAAkB,GAClBj+B,KAAA2T,YAAsB,GACtB3T,KAAAk+B,cAAwB,GACxBl+B,KAAAm+B,WAAqB,GACrBn+B,KAAAo+B,WAAkC,GAClCp+B,KAAAq+B,kBAA4B,GAC5Br+B,KAAAs+B,eAAyB,EACzBt+B,KAAAu+B,iBAA2B,EAC3Bv+B,KAAA49B,WAAqBrjB,KAAKgX,MAC1BvxB,KAAA69B,WAAqBtjB,KAAKgX,MAGtBnH,OAAO0T,OAAO99B,KAAM8C,EACxB,mQC/DJ,IAAA8G,EAAA9L,EAAA,OACAy4B,EAAAz4B,EAAA,OAMAizB,EAAAjzB,EAAA,OACA0C,EAAA1C,EAAA,OAEA8B,4BAAA,SAAgB4+B,IAA6D,IAAnCxD,EAAA/1B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,GAChE,OAAO,IAAI2E,EAAA60B,UAAU,CACjBlrB,GAAI,IAAI3J,EAAA80B,YAAY1D,EAASznB,IAC7BE,KAAM,IAAI7J,EAAA80B,YAAY1D,EAASvnB,MAAQ,GAAI,CAAC7J,EAAA+0B,WAAWC,WACvD7qB,UAAW,IAAInK,EAAA80B,YAAY1D,EAASjnB,YAE5C,EAEAnU,iCAAA,SAAgBi/B,IACyB,IAArCC,EAAA75B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA4B,GAE5B,OAAO,IAAI2E,EAAA60B,UAAU,CACjBlrB,GAAI,IAAI3J,EAAA80B,YAAYI,EAAMvrB,IAC1BwrB,aAAc,IAAIn1B,EAAA80B,YACdI,EAAMC,cAAiBD,EAAcE,uBAAyB,GAC9D,CAACp1B,EAAA+0B,WAAWC,WAEhBK,eAAgB,IAAIr1B,EAAA80B,YAAYI,EAAMG,gBAAkB,IACxDC,cAAe,IAAIt1B,EAAA80B,YAAkC,IAAtBI,EAAMI,eAAwB,EAAG,CAC5Dt1B,EAAA+0B,WAAWC,WAEfO,4BAA6B,IAAIv1B,EAAA80B,YACO,IAApCI,EAAMK,6BACDL,EAAcM,yBACf7kB,KAAKgX,MACT,CAAC3nB,EAAA+0B,WAAWC,WAEhBS,0BAA2B,IAAIz1B,EAAA80B,YACO,IAAlCI,EAAMO,2BACDP,EAAcQ,0BACfvO,EAAAwO,UAAShlB,KAAKgX,MAAO,GACzB,CAAC3nB,EAAA+0B,WAAWC,YAGxB,EAEAh/B,yBAAA,SAAgB4/B,IAA2D,IAApC9H,EAAAzyB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,IAAIsxB,EAAAI,WAC3D,OAAO,IAAI/sB,EAAA60B,UAAU,CACjBlrB,GAAI,IAAI3J,EAAA80B,YAAYhH,EAAMnkB,IAC1BksB,YAAa,IAAI71B,EAAA80B,YAAYhH,EAAM+H,aAAe,GAAI,CAClD71B,EAAA+0B,WAAWC,WAEfpT,OAAQ,IAAI5hB,EAAA80B,YAAYhH,EAAMlM,QAAU,IACxCkU,MAAO,IAAI91B,EAAA80B,YAAYhH,EAAMgI,OAAS,IACtCjsB,KAAM,IAAI7J,EAAA80B,YAAYhH,EAAMjkB,MAAQ,GAAI,CAAC7J,EAAA+0B,WAAWC,WACpDjrB,YAAa,IAAI/J,EAAA80B,YAAYhH,EAAM/jB,aAAe,KAE1D,EAEA/T,oBAAA,SAAgB+/B,IAA4C,IAA1BxG,EAAAl0B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,IAAIsxB,EAAAyH,MACjD,OAAO,IAAIp0B,EAAA60B,UAAU,CACjBlrB,GAAI,IAAI3J,EAAA80B,YAAYvF,EAAM5lB,IAC1B0qB,QAAS,IAAIr0B,EAAA80B,YAAYvF,EAAM8E,SAAW,GAAI,CAACr0B,EAAA+0B,WAAWC,WAC1DjrB,YAAa,IAAI/J,EAAA80B,YAAYvF,EAAMxlB,aAAe,IAClDuqB,cAAe,IAAIt0B,EAAA80B,YAAYvF,EAAM+E,eAAiB,IACtDC,WAAY,IAAIv0B,EAAA80B,YAAYvF,EAAMgF,YAAc,IAChDC,WAAY,IAAIx0B,EAAA80B,YAAYvF,EAAMiF,YAAc,IAChDC,kBAAmB,IAAIz0B,EAAA80B,YAAYvF,EAAMkF,kBAAmB,CACxDz0B,EAAA+0B,WAAWC,WAEfN,eAAgB,IAAI10B,EAAA80B,YAAYvF,EAAMmF,gBAAkB,EAAG,CACvD10B,EAAA+0B,WAAWC,WAEfL,iBAAkB,IAAI30B,EAAA80B,YAClBvF,EAAMoF,qBAAoBxN,EAAAwO,UAAShlB,KAAKgX,MAAO,KAG3D,EAEA3xB,iBAAA,SAAgBggC,EAAe/nB,GAC3B,IAC0Bif,EADpB+I,EAAuB,GAAG9I,EAAAC,EACZnf,GAAM,QAAAof,EAAA,WAAE,IAAjBkC,EAAKrC,EAAAp1B,MACNg2B,EAAQmI,EAAOjQ,KAAK,SAACvsB,GAAC,OAAKA,EAAEkQ,KAAQ4lB,EAAc2G,aAAa,GAClEpI,EACAA,EAAM7f,OAAOse,KAAKgD,GAElB0G,EAAO1J,KAAK,CACR5iB,GAAK4lB,EAAc2G,cACnBrsB,KAAO0lB,EAAc1lB,KACrBoE,OAAQ,CAACshB,MARrB,IAAApC,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAAH,GAWC,OAAAtM,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,QAAA0I,EAAA,EAAAC,EAAoBH,EAAME,EAAAC,EAAA36B,OAAA06B,IAAE,CAAvB,IAAMrI,EAAKsI,EAAAD,GACZrI,EAAMY,OAASZ,EAAM7f,OAAOxS,OAEhC5C,eAAQO,IAAI,UAAW6U,EAAQgoB,GACxBA,CACX,EAEAjgC,iBAAA,SAAgBqgC,EAAeJ,GAC3B,SAAOr/B,EAAAoyB,SACHiN,EAAO/jB,IAAI,SAACzY,GAAC,OACTA,EAAEwU,OACG0hB,MAAM,EAAIl2B,EAAUi1B,QACpBxc,IAAI,SAACqd,GAAK,OAAA5G,IAAA,GAAW4G,GAAK,IAAE1lB,KAAMpQ,EAAEoQ,MAAI,EAAI,GAG7D,s0BC5GA,IAAAlT,EAAAzC,EAAA,MACAoiC,EAAApiC,EAAA,OACAwC,EAAAxC,EAAA,OAOAgc,EAAAhc,EAAA,OACAizB,EAAAjzB,EAAA,OACA6+B,EAAA7+B,EAAA,OAMAqiC,EAAAriC,EAAA,OACA0C,EAAA1C,EAAA,OAGMsiC,EAAgB,iBAMtB,SAAgBC,IAAoC,IAC1CC,KAAIJ,EAAAK,eADuBt7B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE9C,SAAO1E,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,qBAAAh8B,OAAoBk8B,EAAI,IAAMA,EAAI,KAAMn9B,QAC/D7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAoB,GAEvC,CAEA,SAAgBm9B,EAAiBxF,GAC7B,SAAOz6B,EAAAkgC,MAAI,GAAAr8B,OACJg8B,EAAa,wBAChB7/B,EAAAmgC,aAAY1F,EAAU,MAAC11B,EAAW,KAAM,MAC1CnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAkB,GACxC,CAEA,SAAgBs9B,EACZptB,EACAynB,GAEA,SAAOz6B,EAAAqgC,KAAG,GAAAx8B,OACHg8B,EAAa,sBAAAh8B,OAAqBmP,IAAE,EACvChT,EAAAmgC,aAAY1F,EAAU,MAAC11B,EAAW,KAAM,MAC1CnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAkB,GACxC,CAsBA,SAAgBw9B,IAAgC,IACtCP,KAAIJ,EAAAK,eADmBt7B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE1C,SAAO1E,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,gBAAAh8B,OAAek8B,EAAI,IAAMA,EAAI,KAAMn9B,QAC1D7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAiB,GAEpC,CAEA,SAAgBy9B,EAAcC,GAC1B,SAAOxgC,EAAAkgC,MAAI,GAAAr8B,OACJg8B,EAAa,mBAChB7/B,EAAAmgC,aAAYK,EAAS,MAACz7B,EAAW,KAAM,MACzCnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAe,GACrC,CAEA,SAAgB29B,EAAiBztB,EAAYwtB,GACzC,SAAOxgC,EAAAqgC,KAAG,GAAAx8B,OACHg8B,EAAa,iBAAAh8B,OAAgBmP,IAAE,EAClChT,EAAAmgC,aAAYK,EAAS,MAACz7B,EAAW,KAAM,MACzCnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAe,GACrC,CAQA,SAAgBs0B,EAAepkB,GAC3B,SAAOhT,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,iBAAAh8B,OAAgBmP,IAAMpQ,QAC7C7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAe,GAElC,CAUA,SAAgB45B,IAA2B,IACjCqD,KAAIJ,EAAAK,eADct7B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAErC,SAAO1E,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,WAAAh8B,OAAUk8B,EAAI,IAAMA,EAAI,KAAMn9B,QACrD7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAY,GAE/B,CAEA,SAAgB49B,EAAS9H,GACrB,SAAO54B,EAAAkgC,MAAI,GAAAr8B,OACJg8B,EAAa,cAChB7/B,EAAAmgC,aAAYvH,EAAO,MAAC7zB,EAAW,KAAM,MACvCnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAU,GAChC,CAEA,SAAgB69B,EAAY3tB,EAAY4lB,GACpC,SAAO54B,EAAAqgC,KAAG,GAAAx8B,OACHg8B,EAAa,YAAAh8B,OAAWmP,IAAE,EAC7BhT,EAAAmgC,aAAYvH,EAAO,MAAC7zB,EAAW,KAAM,MACvCnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAU,GAChC,CAuBA,SAAgB89B,EAAgBtpB,GAC5B,SAAOtX,EAAAkgC,MAAI,GAAAr8B,OACJg8B,EAAa,gBAChBvoB,EAAOiE,IAAI,SAACzY,GAAC,SAAK9C,EAAAmgC,aAAYr9B,EAAG,MAACiC,EAAW,KAAM,IAAI,IACzDnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAY,GAClC,CAEA,SAAgB+9B,EAAmBjI,GAC/B,SAAO54B,EAAAqgC,KAAG,GAAAx8B,OACHg8B,EAAa,gBAChBjH,EAAMrd,IAAI,SAACzY,GAAC,SAAK9C,EAAAmgC,aAAYr9B,EAAG,MAACiC,EAAW,KAAM,IAAI,IACxDnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAY,GAClC,CAiBA,SAAgBg+B,IAAwC,IAC9Cf,KAAIJ,EAAAK,eAD2Bt7B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAElD,SAAO1E,EAAAoF,KAAG,GAAAvB,OACHg8B,EAAa,0BAAAh8B,OAAyBk8B,EAAI,IAAMA,EAAI,KACzDn9B,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAyB,GAC/C,CAEA,SAAgBi+B,EAAsBxC,GAClC,SAAOv+B,EAAAkgC,MAAI,GAAAr8B,OACJg8B,EAAa,6BAChB7/B,EAAAmgC,aAAY5B,EAAO,MAACx5B,EAAW,KAAM,MACvCnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAuB,GAC7C,CAEA,SAAgBk+B,EACZhuB,EACAurB,GAEA,SAAOv+B,EAAAqgC,KAAG,GAAAx8B,OACHg8B,EAAa,2BAAAh8B,OAA0BmP,IAAE,EAC5ChT,EAAAmgC,aAAY5B,EAAO,MAACx5B,EAAW,KAAM,MACvCnC,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAuB,GAC7C,CAmEA,SAAgBm+B,EACZlO,EACAgK,GAEAhK,SAAMxgB,KAAO,mBACNgH,EAAAgJ,eAAc,CAACma,KAAW,EAAIN,EAAA/I,eAAcN,KAASnwB,QACxD7C,EAAAwb,KAAI,SAAA2hB,GAAA,IAAA1K,GAAA/P,EAAAya,EAAA,GAAUvI,GAAQnC,GAAA,UAAVA,GAAA,GACD/W,OACH,SAACmd,IAAK,OACFmE,GAAQr3B,SAASkzB,GAAM5lB,MACtB2hB,GAAStF,KAAK,SAAC6R,GAAO,OAAKA,EAAQvwB,WAAaioB,GAAM5lB,EAAE,EAAC,EACjE,GAGb,CAuBoD,SAAAmuB,aAAA//B,EAA7C,SAAAggC,EAAA3N,EAeH4N,EACAC,IAAmB,IAfjBtuB,GAAEouB,EAAFpuB,GAAIuuB,GAAQH,EAARG,SAEF9vB,GAAIgiB,EAAJhiB,KACAsC,EAAQ0f,EAAR1f,SACAG,GAAIuf,EAAJvf,KACAstB,GAAa/N,EAAb+N,cACAluB,GAAKmgB,EAALngB,MAAK,OAAAjS,IAAAC,KAAA,SAAAC,KAAA,IAAA+V,GAAAmqB,GAAA,OAAApgC,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAWHqV,aAAkBrX,EAAAoyB,SACpBgP,EAAW9lB,IAAI,SAACzY,IAAC,OACbA,GAAEwU,OACG0hB,MAAM,EAAIl2B,GAAUi1B,QACpBxc,IAAI,SAACqd,IAAK,OAAA5G,IAAA,GAAW4G,IAAK,IAAE1lB,KAAMpQ,GAAEoQ,MAAI,EAAI,IAExDnR,GAAAE,KAAA,KACsBm6B,EAAA/I,eAAc,CACjCL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,KACrC0hB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,KACjCc,KAAM,gBACN9L,MAAOyN,GACPwtB,SAAU1uB,GACVuuB,cACDx+B,YAAW,OAPR4xB,OAQA8M,GARQ1/B,GAAA4B,KAQY8X,OACtB,SAACC,IAAI,OACDA,GAAKgZ,eAAelhB,YAAcR,IAClCsuB,GAAWjS,KAAK,SAACvsB,IAAC,OAAKA,GAAEkQ,KAAO0I,GAAK1I,EAAE,EAAC,GAC/CjR,GAAAE,KAAA,EACKwB,QAAQsmB,IACV0X,GAASlmB,IAAI,SAACG,IAAI,SAAK0gB,EAAAuF,eAAcjmB,GAAK1I,IAAIjQ,WAAW,IAC5D,OAAAhB,UAAAE,KAAA,EACKwB,QAAQsmB,IACVzS,GAAOiE,IAAI,SAACG,IAAI,SACZ0gB,EAAAwF,eACI,IAAIhC,EAAAtL,QAAQ,CACR/hB,KAAM,gBACNc,aAAc,gBACd5B,QACAsC,WACAX,YAAaouB,GACbK,WAAY3tB,GACZvD,SAAU+K,GAAK1I,GACfC,WAAayI,GAAaxI,KAC1BjS,MAAQya,GAAaxI,KACrBwhB,eAAgB,CAAElhB,UAAWR,IAC7BM,MAAOA,IAAS,KAEpB,CAAEiuB,YAAUG,SAAU1uB,KACxBjQ,WAAW,IAEpB,cAAAhB,GAAAqB,OAAA,SACMkU,IAAM,yBAAAvV,GAAAwC,OAAA,EAAAhD,GAAA,EAtDJF,EAsDI,IAChBoD,MAAAhF,KAAAiF,UAAA,CAxVDrF,uBAAAygC,EAOAzgC,mBAAA4gC,EAOA5gC,sBAAA+gC,EAUA/gC,oBAAA,SAAgByiC,EAAkBrH,GAC9B,OAAOA,EAASznB,GACVotB,EAAoB3F,EAASznB,GAAIynB,GACjCwF,EAAiBxF,EAC3B,EAEAp7B,oBAAA,SAAgB0iC,EAAkB/uB,GAC9B,SAAOhT,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,sBAAAh8B,OAAqBmP,IAAMpQ,QAClD7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAkB,GAErC,EAEAzD,sBAAA,SAAgB2iC,EAAoBhvB,GAChC,SAAOhT,EAAAiiC,KAAG,GAAAp+B,OAAIg8B,EAAa,sBAAAh8B,OAAqBmP,GACpD,EAMA3T,mBAAAihC,EAOAjhC,gBAAAkhC,EAOAlhC,mBAAAohC,EAOAphC,iBAAA,SAAgB6iC,EAAe1B,GAC3B,OAAOA,EAAQxtB,GACTytB,EAAiBD,EAAQxtB,GAAIwtB,GAC7BD,EAAcC,EACxB,EAEAnhC,iBAAA+3B,EAMA/3B,mBAAA,SAAgB8iC,EAAiBnvB,GAC7B,SAAOhT,EAAAiiC,KAAG,GAAAp+B,OAAIg8B,EAAa,iBAAAh8B,OAAgBmP,GAC/C,EAMA3T,cAAAq9B,EAOAr9B,WAAAqhC,EAOArhC,cAAAshC,EAOAthC,YAAA,SAAgB+iC,EAAUxJ,GACtB,OAAOA,EAAM5lB,GACP2tB,EAAY/H,EAAM5lB,GAAEgf,IAAA,GACb4G,GAAK,IACR2G,cAAe3G,EAAM8E,WAEzBgD,EAAQ1O,IAAA,GAAM4G,GAAK,IAAE2G,cAAe3G,EAAM8E,UACpD,EAEAr+B,YAAA,SAAgBgjC,EAAUrvB,GACtB,SAAOhT,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,YAAAh8B,OAAWmP,IAAMpQ,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAU,GAC1E,EAEAzD,cAAA,SAAgBijC,EAAYtvB,GACxB,SAAOhT,EAAAiiC,KAAG,GAAAp+B,OAAIg8B,EAAa,YAAAh8B,OAAWmP,GAC1C,EAMA3T,kBAAAuhC,EAOAvhC,qBAAAwhC,EAOAxhC,mBAAA,SAAgBkjC,EAAiBjrB,GAC7B,OAAW,MAANA,KAAQxS,OACNwS,EAAOkrB,MAAM,SAAC9mB,GAAI,OAAKA,GAAM1I,EAAE,GAChC6tB,EAAmBvpB,GACnBspB,EAAgBtpB,IAAM,EAHAiC,EAAAO,IAAG,GAInC,EAEAza,qBAAA,SAAgBojC,EAAmB7Y,GAC/B,SAAO5pB,EAAAiiC,KAAG,GAAAp+B,OAAIg8B,EAAa,gBAAgB,CAAE6C,KAAM,CAAE9Y,YACzD,EAMAvqB,2BAAAyhC,EAOAzhC,wBAAA0hC,EAOA1hC,2BAAA2hC,EAUA3hC,yBAAA,SAAgBsjC,EAAuBpE,GACnC,OAAOA,EAAMvrB,GACPguB,EAAyBzC,EAAMvrB,GAAEgf,IAAA,GAC1BuM,GAAK,IACRE,sBAAuBF,EAAMC,gBAEjCuC,EAAqB/O,IAAA,GACduM,GAAK,IACRE,sBAAuBF,EAAMC,eAE3C,EAEAn/B,yBAAA,SAAgBujC,EAAuB5vB,GACnC,SAAOhT,EAAAoF,KAAG,GAAAvB,OAAIg8B,EAAa,2BAAAh8B,OAA0BmP,IAAMpQ,QACvD7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,CAAuB,GAE1C,EAEAzD,2BAAA,SAAgBwjC,EAAyB7vB,GACrC,SAAOhT,EAAAiiC,KAAG,GAAAp+B,OAAIg8B,EAAa,2BAAAh8B,OAA0BmP,GACzD,EAMA3T,sBAAA,SAAgByjC,IAAmC,IAAf/P,EAAAruB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,GAC7C,SAAO6U,EAAAgJ,eAAc,CAAC+d,EAAiBvN,GAAQ2J,EAAY3J,KAASnwB,QAChE7C,EAAAwb,KAAI,SAAAxV,GAAuB,IACOwwB,GADP1uB,EAAA4a,EAAA1c,EAAA,GAArBg9B,GAAQl7B,EAAA,GAAEyP,GAAMzP,EAAA,GAAA2uB,GAAAC,EACIsM,IAAQ,QAAArM,EAAA,WAAE,IAArB8J,GAAOjK,GAAAp1B,MACdq/B,GAAQlpB,OAASA,GAAOmE,OACpB,SAACmd,IAAK,OAAKA,GAAM8E,UAAY8C,GAAQxtB,EAAE,IAF/C,IAAAwjB,GAAApN,MAAAmN,GAAAC,GAAAI,KAAAC,MAAAH,GAIC,OAAAtM,IAAAoM,GAAA7R,EAAAyF,GAAA,SAAAoM,GAAAM,GAAA,CACD,OAAOiM,EACX,GAER,EAEA1jC,gBAAA,SAAgB2jC,EAAchwB,GAC1B,SAAOuG,EAAAgJ,eAAc,CACjB6U,EAAepkB,GACf8sB,IACApD,EAAY,CAAEgB,QAAS1qB,IACvB8tB,MACDl+B,QACC7C,EAAAwb,KAAI,SAAAmH,GAAmD,IAAAC,EAAAF,EAAAC,EAAA,GAAjD8d,GAAO7d,EAAA,GAAcrL,GAAMqL,EAAA,GAAEsgB,GAAetgB,EAAA,GAC9C6d,UAAQ/F,SADa9X,EAAA,GACS0M,KAC1B,SAACoL,GAAQ,OAAKA,EAASznB,KAAOwtB,GAAQtB,WAAW,GAErDsB,GAAQlpB,OAASA,GAAOmE,OACpB,SAACmd,GAAK,OACFA,EAAM8E,UAAY8C,GAAQxtB,IACzB4lB,EAAc2G,gBAAkBiB,GAAQxtB,EAAE,GAEnDwtB,GAAQyC,gBAAkBA,GAAgBxnB,OAAO,SAAC8iB,GAAK,OACnDiC,GAAQlpB,OAAO+X,KACX,SAACuJ,IAAK,OAAKA,GAAMkF,oBAAsBS,EAAMvrB,EAAE,EAClD,GAEEwtB,EACX,GAER,EAEAnhC,uBAAA4hC,EAgBA5hC,yBAAA,SAAgB29B,EACZjK,EACAgK,GAEA,SAAOxjB,EAAAgJ,eAAc,CACjB+d,IACAW,EAAqBlO,EAAOgK,KAC7Bn6B,QACC7C,EAAAwb,KAAI,SAAAkX,GAAuB,IACO2I,EADPtI,GAAArQ,EAAAgQ,EAAA,GAArBsQ,GAAQjQ,GAAA,GAAExb,GAAMwb,GAAA,GAAAuI,GAAA5E,EACIsM,IAAQ,QAAAG,GAAA,WAAE,IAArB1C,GAAOpF,EAAAj6B,MACdq/B,GAAQlpB,OAASA,GAAOmE,OACpB,SAACmd,IAAK,OACFA,GAAM8E,UAAY8C,GAAQxtB,IACzB4lB,GAAc2G,gBAAkBiB,GAAQxtB,EAAE,IAJvD,IAAAqoB,GAAAjS,MAAAgS,EAAAC,GAAAzE,KAAAC,MAAAqM,IAMC,OAAA9Y,IAAAiR,GAAA1W,EAAAyF,GAAA,SAAAiR,GAAAvE,GAAA,CACD,OAAOiM,EACX,GAER,EAEA1jC,iCAFC,SAEqB8jC,EAA8BvmB,EAAAwmB,EAAAC,EAAAC,IAAA,OAAAnC,EAAA18B,MAAAhF,KAAAiF,UAAA,oJCpTpDzE,EAAA1C,EAAA,OACAK,EAAAL,EAAA,OACAyM,EAAAzM,EAAA,OACA8L,EAAA9L,EAAA,UAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,iBAEAu4B,EAAAC,aAAAx4B,EAAA,OAAA8B,GAuBaA,eAAY,eAAZsM,EAAYpM,EAAA,SAAAoM,IAAAnM,EAAAC,KAAAkM,EAAA,GAAZA,SAAY,mBAAAjM,iBAAZiM,EAAY,EAAZA,EAAY,UAAAhM,EAAA,iCAAZgM,MAAY,UAAAhM,EAAA,qCARjBM,EAAAiZ,aACAlP,EAAA4B,iBACAvC,EAAAiC,YACAjC,EAAAwC,oBACAjO,EAAAgR,oBAIKjD,CAAY,sFCrCzBmqB,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,oLCVA,IAAAqK,EAAAnM,EAAA,OAGA0C,GAFA1C,EAAA,OACAA,EAAA,OACAA,EAAA,QACAizB,EAAAjzB,EAAA,OAGAgmC,GADAhmC,EAAA,OACAA,EAAA,QACAimC,EAAAjmC,EAAA,UACAA,EAAA,iGAMYoC,EAAAqN,yBAAA,YAA2BrN,EAAAuN,iBAAA,GAAWvN,EAAAsN,kEAAXtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAA2D,EAAA0yB,IAAA,gCAD/B9jC,EAAAqN,yBAAA,UACIrN,EAAA+R,qBAAA,EAAAgyB,EAAA,cACA/jC,EAAAuN,iBAAA,gCACAvN,EAAAqN,yBAAA,YAA2BrN,EAAAuN,iBAAA,gCAAiCvN,EAAAsN,wBAAAtN,2CAFrDA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAA6xB,UACPhkC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,UAAAhC,EAAAovB,QAAA,KAAApvB,EAAAovB,QAAAzvB,KAAA,eAC2B9R,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,UAAAhC,EAAAovB,QAAA,KAAApvB,EAAAovB,QAAAzvB,KAAA,oCA+Df9R,EAAAqN,yBAAA,cAAkDrN,EAAAuN,iBAAA,GAEhDvN,EAAAsN,kEAFgDtN,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAyC,EAAA9D,KAAA,2BAOtD5S,EAAAqN,yBAAA,WAAArN,CAAqD,cACvCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,YAA2BrN,EAAAuN,iBAAA,GAAcvN,EAAAsN,wBAAAtN,4CAAdA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAApC,EAAAhM,SAAA,wBAQnC7F,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,iBACJvN,EAAAsN,uJAnFRtN,EAAAqN,yBAAA,SAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA7M,EAAAngB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6O,EAAA8jB,cAAa,GAGtBjkC,EAAAqN,yBAAA,UAAArN,CAEC,UAC4BA,EAAAuN,iBAAA,GAAoBvN,EAAAsN,yBAC7CtN,EAAAqN,yBAAA,WAAArN,CAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,cA+BZA,EAAAuN,iBAAA,GASJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,IAAYvN,EAAAsN,wBAAAtN,KAGtCA,EAAAqN,yBAAA,YAAArN,CAEC,aAEOA,EAAA+R,qBAAA,GAAAmyB,EAAA,mBAGAlkC,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAAoyB,EAAA,cAIJnkC,EAAAsN,yBACAtN,EAAAqN,yBAAA,kBAGIrN,EAAAuN,iBAAA,sBACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAqyB,EAAA,cAMJpkC,EAAAsN,wBAAAtN,EAAM,wEAjFNA,EAAA+Q,qBAAA,aAAA/Q,EAAA0R,0BAAA,GAAAC,GAAA3R,CAAqB,cAAAA,EAAAqkC,0BAAA,GAAAztB,EAAA,MAAAf,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAluB,KAQQrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA,MAAA4B,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAjgC,OAIjBtB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAA7J,EAAA0rB,QAAA+C,SAAA,oBAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAAAvkC,CAEC,iBAAA6V,EAAA0rB,QAAA+C,SAAA,qBAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAFDvkC,CAEC,cAAA6V,EAAA0rB,QAAA+C,SAAA,oBAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAFDvkC,CAEC,cAAA6V,EAAA0rB,QAAA+C,SAWGtkC,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAA7J,EAAA0rB,QAAA+C,SAAA,oBAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAAAvkC,CAGC,gBAAA6V,EAAA0rB,QAAA+C,SAAA,qBAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAHDvkC,CAGC,YAAA6V,EAAA0rB,QAAA+C,SAAA,oBAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAHDvkC,CAGC,mBAAA6V,EAAA0rB,QAAA+C,SAYGtkC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAoI,EAAA0rB,QAAA+C,QAAA,qCAAAzuB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAAA,4BAAA1uB,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAgD,QAAA,uBAWUvkC,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA4B,EAAA2uB,QAOPxkC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAA8E,EAAAjD,KAAA5S,CAAuB,WAAAqmB,GAI9BrmB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAoI,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAA9tB,eAAA,MAAAoC,EAAA0rB,QAAA,KAAA1rB,EAAA0rB,QAAAvwB,UAAA,KAG6BhR,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAAhQ,UAYpC7F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA8E,EAAA4uB,iBAAA,uBAOTzkC,EAAAyJ,oBAAA,YAaC/J,uBAAqB,eAArBglC,EAAqB,SAAAC,GAAA/jC,EAAA8jC,EAAAC,GAAA,IAAA7jC,EAAAC,EAAA2jC,GAc9B,SAAAA,EACYxsB,EACA0sB,EACA3jC,GAAyB,IAAAG,EAAAvB,SAAAC,KAAA4kC,IAEjCtjC,EAAAN,EAAAO,KAAAvB,OAJQoY,UACA9W,EAAAwjC,SACAxjC,EAAAH,OAfIG,EAAA4iC,UAAoB,EACnB5iC,EAAAyjC,KAAO,IAAI96B,EAAAsV,aACXje,EAAA0jC,OAAS,IAAI/6B,EAAAsV,aACbje,EAAA2jB,IAAM,IAAIhb,EAAAsV,aAAeje,CAe1C,CAACxB,SAAA8kC,EAAA,EAAAnjC,IAAA,mBAAAkE,IAbD,WAA2B,IAAAs/B,EAAA3+B,EACvB,OACgB,QAAZ2+B,EAAAjlC,KAAKyhC,eAAO,IAAAwD,OAAA,EAAZA,EAAc7C,WAAWlP,kBACZ,QADyB5sB,KACtC9F,EAAAsG,sBAAa,IAAAR,OAAA,EAAbA,EAAeU,MAAMksB,cAE7B,GAAC,CAAAzxB,IAAA,WAAAC,MAUM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAK+S,aACD,cACA/S,KAAK8kC,OAAOI,cAAcjyB,UAAU,SAACkyB,GAAM,IAAAC,EAAA,OACvCD,EAAOE,IAAI,aACC,QAAZD,EAAAjgC,EAAKs8B,eAAO,IAAA2D,OAAA,EAAZA,EAAc7xB,MAAO4xB,EAAOx/B,IAAI,SAC1BR,EAAKg/B,cACL,EAAE,GAGpB,GAAC,CAAA1iC,IAAA,OAAAkE,IAED,WAAe,IAAA2/B,EAAAC,EACX,MAA2B,UAAX,QAAZD,EAAAtlC,KAAKyhC,eAAO,IAAA6D,OAAA,EAAZA,EAAcxyB,MAAwB,OACf,aAAX,QAAZyyB,EAAAvlC,KAAKyhC,eAAO,IAAA8D,OAAA,EAAZA,EAAczyB,MAA2B,YACtC,MACX,GAAC,CAAArR,IAAA,MAAAkE,IAED,WAAc,IAAA6/B,EACJxzB,GAAmB,QAAZwzB,EAAAxlC,KAAKyhC,eAAO,IAAA+D,OAAA,EAAZA,EAAcxzB,OAAQuI,KAAKgX,MAClCkU,KAAW1U,EAAAkC,WAAU1Y,KAAKgX,MAAOvf,GACvC,SAAA5N,OAAUqhC,EAAW,WAAU1U,EAAA2U,QAAO1zB,EAAM,QAChD,GAAC,CAAAvQ,IAAA,WAAAkE,IAED,WAAmB,IAAAggC,EACT3uB,EAAQhX,KAAKmB,KAAKwuB,aAAwB,QAAZgW,EAAA3lC,KAAKyhC,eAAO,IAAAkE,OAAA,EAAZA,EAAc9xB,QAAS,IAC3D,SAAAzP,OAAU4S,GAAOvB,cAAgBuB,GAAOvD,MAAQ,GACpD,GAAC,CAAAhS,IAAA,SAAAkE,IAED,WAAiB,IAAAigC,EAAAC,EAAAC,EACb,GAAgB,QAAhBF,EAAI5lC,KAAKyhC,eAAO,IAAAmE,GAAZA,EAAc/U,QAAS,MAAO,UAClC,IAAMkV,GAAoB,QAAZF,EAAA7lC,KAAKyhC,eAAO,IAAAoE,OAAA,EAAZA,EAAc7zB,OAAQuI,KAAKgX,MACnCjd,GAAuB,QAAZwxB,EAAA9lC,KAAKyhC,eAAO,IAAAqE,OAAA,EAAZA,EAAcxxB,WAAY,GACrC2Q,KAAM8L,EAAAiV,YAAWD,EAAOzxB,GACxB2xB,KAAMlV,EAAAmV,gBAAe,CACvBC,MAAOC,KAAKC,MAAM/xB,EAAW,IAC7BgyB,QAAShyB,EAAW,KAEnB4oB,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA94B,UAAU2sB,EAAA2U,QAAOK,EAAO,UAAS,OAAA3hC,UAAM2sB,EAAA2U,QAAOzgB,EAAK,UAAS,MAAA7gB,OAAK6hC,EAAG,IACxE,GAAC,CAAAxkC,IAAA,cAAAC,MAEM,WAAW,IAAA8E,EAAAxG,KACTA,KAAKyhC,SACVzhC,KAAK6D,QAAQ,OAAQ,WACjB,IAAM2U,EAAMhS,EAAK4R,QAAQrD,KAAK+uB,EAAAyC,6BAA8B,CACxDzjC,KAAM0D,EAAKi7B,UAEfj7B,EAAKuM,aACD,OACAyF,EAAIM,kBAAkBisB,KAAK9xB,UAAU,kBAAMzM,EAAKu+B,KAAKtlB,MAAM,IAE/DjZ,EAAKuM,aACD,SACAyF,EAAIM,kBAAkBksB,OAAO/xB,UAAU,kBAAMzM,EAAKw+B,OAAOvlB,MAAM,IAEnEjZ,EAAKuM,aACD,MACAyF,EAAIM,kBAAkBmM,IAAIhS,UAAU,kBAAMzM,EAAKye,IAAIxF,MAAM,GAEjE,EACJ,KAACmlB,CAAA,CApF6B,CAAQb,EAAAt7B,cAA7Bm8B,SAAqB,mBAAA3kC,iBAArB2kC,GAAoB1kC,EAAAwI,4BAAAC,EAAAuQ,WAAAhZ,EAAAwI,4BAAAG,EAAA29B,gBAAAtmC,EAAAwI,4BAAAK,EAAAD,qBAAA,EAApB87B,EAAqB,UAAA1kC,EAAA,kCAArB0kC,EAAoBz7B,UAAA,mBAAAuW,OAAA,CAAA+hB,QAAA,UAAAyC,SAAA,YAAAvkB,QAAA,CAAAolB,KAAA,OAAAC,OAAA,SAAA/f,IAAA,OAAA7b,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,4vCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAzGzBvJ,EAAA+R,qBAAA,EAAAw0B,EAAA,YAKAvmC,EAAA+R,qBAAA,EAAAy0B,EAAA,aAsFAxmC,EAAA+R,qBAAA,EAAA00B,EAAA,yBAAAzmC,EAAAkmB,yCA3FoClmB,EAAA+Q,qBAAA,OAAAvH,EAAA+3B,SAW/BvhC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA+3B,mNA8FAmD,CAAqB,sNCvHlC,IAAA36B,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OACA0C,EAAA1C,EAAA,OACAizB,EAAAjzB,EAAA,OAEA8oC,EAAA9oC,EAAA,OACA+oC,EAAA/oC,EAAA,OAGA6+B,GAFA7+B,EAAA,OACAA,EAAA,OACAA,EAAA,oJAWgBoC,EAAAyJ,oBAAA,qCAIAzJ,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,uBAIJzJ,EAAAsN,iEAHQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAA8E,EAAA0rB,SAAA,MAAA1rB,EAAA0rB,QAAAxM,eAAA,KAAAlf,EAAA0rB,QAAAxM,eAAAzJ,OAAA,2BA0EItrB,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,GAERvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GAKJvN,EAAAsN,wBAAAtN,4CATUA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAkM,EAAAohB,QAAAqF,WAAA,qBAIN5mC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0S,EAAAohB,QAAAqF,WAAA,mDAQJ5mC,EAAAyJ,oBAAA,yBAEIzJ,EAAA+Q,qBAAA,4EA3BZ/Q,EAAAqN,yBAAA,eAOIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAC,EAAAlW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA4E,EAAA2wB,kBAAiB,GAE1B7mC,EAAA+R,qBAAA,EAAA+0B,EAAA,cAeA9mC,EAAA+R,qBAAA,EAAAg1B,EAAA,0BAAA/mC,EAAAkmB,kCAMJlmB,EAAAsN,wBAAA,yEA1BItN,EAAA0f,sBAAA,eAAAiC,EAAA4f,QAAAqF,YACA5mC,EAAA+Q,qBAAA,WAAA4Q,EAAAqlB,aAMKhnC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA4Q,EAAAqlB,YAAAhnC,CAAoB,WAAAgtB,EAAA,2BAhBjChtB,EAAAqN,yBAAA,YAKIrN,EAAA+R,qBAAA,EAAAk1B,EAAA,iBA+BAjnC,EAAAqN,yBAAA,cAAArN,CAKC,cACaA,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,2EA/BnBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAU,EAAAy1B,cA4BDlnC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,oBAAA+Q,EAAA,4FA6CR9hB,EAAAyJ,oBAAA,+DAGIzJ,EAAA+Q,qBAAA,YAAAqX,EAAAtR,MAAA,KAAAsR,EAAAtR,MAAAtD,OAAAxT,CAAqB,WAAAooB,EAAAlf,SAArBlJ,CAAqB,UAAAA,EAAA0R,0BAAA,EAAAy1B,GAAA,+DAoBjCnnC,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAk2B,GAAA,IAAAhxB,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAA0uB,OAAAvlB,OAAa,GAEtBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,MAAwBzuB,EAAAsN,wBAAAtN,EAAM,+DAElCA,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAm2B,GAAA,IAAAhpB,EAAAre,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+M,EAAA0G,IAAAxF,OAAU,GAEnBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,MAAqBzuB,EAAAsN,wBAAAtN,EAAM,EAM9BN,+BAA4B,eAA5B2mC,EAA4B,WAsCrC,SAAAA,EACqCiB,EACzBtmC,EACAC,EACAiX,GAAkB,IAAA6sB,EAAAllC,EAAAC,KAAAumC,GAHOvmC,KAAAwnC,WACzBxnC,KAAAkB,YACAlB,KAAAmB,OACAnB,KAAAoY,UAzCKpY,KAAA+kC,KAAO,IAAI96B,EAAAsV,aACXvf,KAAAglC,OAAS,IAAI/6B,EAAAsV,aACbvf,KAAAilB,IAAM,IAAIhb,EAAAsV,aACXvf,KAAAyhC,QAAUzhC,KAAKwnC,SACxBxnC,KAAAynC,UAAW,EACXznC,KAAAknC,aAAc,EACLlnC,KAAAoJ,SAAW,CACvB,CACIrD,SAAsB,QAAdk/B,EAAEjlC,KAAKyhC,eAAO,IAAAwD,OAAA,EAAZA,EAAc/zB,SACxB2W,QAASgf,EAAA/e,iBAiCd,CAAChoB,SAAAymC,EAAA,EAAA9kC,IAAA,QAAAkE,IA7BJ,WAAgB,IAAA2/B,EACZ,OAAOtlC,KAAKmB,KAAKwuB,aAAwB,QAAZ2V,EAAAtlC,KAAKyhC,eAAO,IAAA6D,OAAA,EAAZA,EAAczxB,QAAS,GACxD,GAAC,CAAApS,IAAA,WAAAkE,IAED,WAAmB,IAAArE,EAAAtB,KACf,OAAOA,KAAKmB,KAAK+U,UAAU0Z,KAAK,SAAC5W,GAAG,IAAAusB,EAAA,QACnB,QAAZA,EAAAjkC,EAAKmgC,eAAO,IAAA8D,OAAA,EAAZA,EAAc1xB,QAAS,IAAI5N,SAAS+S,EAAIzF,GAAG,EAEpD,GAAC,CAAA9R,IAAA,eAAAkE,IAED,WAAuB,IAAA6/B,EACnB,OAAOxlC,KAAKkB,UAAUyE,IAAG,OAAAvB,QACF,QAAZohC,EAAAxlC,KAAKyhC,eAAO,IAAA+D,OAAA,EAAZA,EAAc1yB,OAAQ,WAAU,iBAE/C,GAAC,CAAArR,IAAA,iBAAAkE,IAED,WAAyB,IAAAggC,EAAAC,EAAAC,EACf6B,EAAKntB,KAAKgX,MACVwU,EAAsC,KAAlB,QAAZJ,EAAA3lC,KAAKyhC,eAAO,IAAAkE,OAAA,EAAZA,EAAcgC,eACtB1iB,EAAkC,KAAhB,QAAZ2gB,EAAA5lC,KAAKyhC,eAAO,IAAAmE,OAAA,EAAZA,EAAcgC,aAC1B,OAAgB,QAAhB/B,EAAI7lC,KAAKyhC,eAAO,IAAAoE,GAAZA,EAAchV,QAAgBkV,GAAS2B,EACpC3B,GAAS2B,GAAMA,GAAMziB,CAChC,GAAC,CAAAxjB,IAAA,SAAAkE,IASD,WAAiB,IAAAmgC,EAAA+B,EAAAC,EACb,GAAgB,QAAhBhC,EAAI9lC,KAAKyhC,eAAO,IAAAqE,GAAZA,EAAcjV,QAAS,MAAO,UAClC,IAAMkV,GAAoB,QAAZ8B,EAAA7nC,KAAKyhC,eAAO,IAAAoG,OAAA,EAAZA,EAAc71B,OAAQuI,KAAKgX,MACnCjd,GAAuB,QAAZwzB,EAAA9nC,KAAKyhC,eAAO,IAAAqG,OAAA,EAAZA,EAAcxzB,WAAY,GACrC2Q,KAAM8L,EAAAiV,YAAWD,EAAOzxB,GACxB2xB,KAAMlV,EAAAmV,gBAAe,CACvBC,MAAOC,KAAKC,MAAM/xB,EAAW,IAC7BgyB,QAAShyB,EAAW,KAEnB4oB,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAA94B,UAAU2sB,EAAA2U,QAAOK,EAAO,UAAS,OAAA3hC,UAAM2sB,EAAA2U,QAAOzgB,EAAK,UAAS,MAAA7gB,OAAK6hC,EAAG,IACxE,GAAC,CAAAxkC,IAAA,kBAAAC,OAAAqmC,EAAApmC,EAAAC,IAAAC,KAEM,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAxC,KAAKknC,aAAc,EAAK5kC,EAAAE,KAAA,KAClBm6B,EAAAqL,gBACFhoC,KAAKyhC,QAAQluB,IACZvT,KAAKyhC,QAAQqF,YAChBxjC,YAAW,OACZtD,KAAKyhC,QAAgBqF,YAAc9mC,KAAKyhC,QAAQqF,cACjDtmC,EAAAynC,eAAa,gBAAA7jC,OAELpE,KAAKyhC,QAAQqF,WAAa,aAAe,kBAGjD9mC,KAAKknC,aAAc,EAAM,wBAAA5kC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC5B,SAAA+mC,IAAA,OAAAgB,EAAA/iC,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,eAAAC,MAEM,WAAY,IAAAyD,EAAAnF,KACfA,KAAKynC,UAAW,EACJznC,KAAKoY,QAAQrD,KAAK6xB,EAAAsB,wBAAyB,CACnDC,SAAU,OACVC,UAAW,OACXtlC,KAAM,CACFmZ,KAAM,CACF1I,GAAIvT,KAAKwnC,SAASt2B,SAClBuC,KAAMzT,KAAKwnC,SAASh0B,WACpBE,OAAQ1T,KAAKwnC,SAASvS,eAAevhB,OACrCsD,MAAOhX,KAAKgX,UAIpB4B,cAAc3F,UAAU,kBAAO9N,EAAKsiC,UAAW,CAAK,EAC5D,KAAClB,EAhCA,IAAAwB,CAgCA,CAzFoC,GAA5BxB,SAA4B,mBAAAtmC,iBAA5BsmC,GAA4BrmC,EAAAwI,4BAuCzBsF,EAAAsuB,iBAAep8B,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAAmQ,WAAA,EAvClBqtB,EAA4B,UAAArmC,EAAA,kCAA5BqmC,EAA4Bp9B,UAAA,4BAAAwW,QAAA,CAAAolB,KAAA,OAAAC,OAAA,SAAA/f,IAAA,OAAA3b,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ssCA9E+B0iB,UAAAC,MAAAC,EAAA,+9CA+D9CF,UAAAG,MAAAD,EAAA,+FASAF,UAAAI,MAAAF,EAAA,0HAtMlBhwB,EAAAqN,yBAAA,UAAArN,CAEC,WAIOA,EAAA+R,qBAAA,EAAAo2B,EAAA,aAIAnoC,EAAA+R,qBAAA,EAAAq2B,EAAA,aASApoC,EAAAqN,yBAAA,UAKIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,eAmCrCA,EAAAuN,iBAAA,IASJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,IAAYvN,EAAAsN,wBAAAtN,KAGtCA,EAAA+R,qBAAA,GAAAs2B,EAAA,cA6CJroC,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAwC,YAAxCA,CAAwC,YAIhCA,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,UAAKrN,EAAAuN,iBAAA,kCAA4CvN,EAAAsN,wBAAAtN,GAErDA,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAClBtN,EAAAqN,yBAAA,UAAKrN,EAAAuN,iBAAA,IAAYvN,EAAAsN,wBAAAtN,GAErBA,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,IAEJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,IAIJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAGIrN,EAAA8Q,qBAAA,0BAAStH,EAAA8+B,cAAc,GAEvBtoC,EAAA+R,qBAAA,GAAAw2B,EAAA,0BAOJvoC,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAKC,eACaA,EAAAuN,iBAAA,YAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAAqN,yBAAA,qBAKIrN,EAAA+R,qBAAA,GAAAy2B,EAAA,iBASAxoC,EAAA+R,qBAAA,GAAA02B,EAAA,iBASJzoC,EAAAsN,gCAhMatN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAvH,EAAA+3B,SAAA,MAAA/3B,EAAA+3B,QAAAxM,gBAAA,MAAAvrB,EAAA+3B,QAAAxM,eAAAzJ,QAAA9hB,EAAA+3B,QAAAxM,eAAAzJ,OAAAnmB,SAIAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAA+3B,SAAA,MAAA/3B,EAAA+3B,QAAAxM,gBAAA,MAAAvrB,EAAA+3B,QAAAxM,eAAAzJ,OAAA,KAAA9hB,EAAA+3B,QAAAxM,eAAAzJ,OAAAnmB,QAUDnF,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,eAAAlW,EAAA+3B,SAAA,MAAA/3B,EAAA+3B,QAAAxM,gBAAAvrB,EAAA+3B,QAAAxM,eAAAzJ,SAEAtrB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA+3B,QAAAjgC,MAAA,KAMQtB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAAlW,EAAA+3B,QAAA+C,SAAA,oBAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAAAvkC,CAGC,iBAAAwJ,EAAA+3B,QAAA+C,SAAA,qBAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAHDvkC,CAGC,cAAAwJ,EAAA+3B,QAAA+C,SAAA,oBAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAHDvkC,CAGC,cAAAwJ,EAAA+3B,QAAA+C,SAaGtkC,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAAlW,EAAA+3B,QAAA+C,SAAA,oBAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAAAvkC,CAGC,gBAAAwJ,EAAA+3B,QAAA+C,SAAA,qBAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAHDvkC,CAGC,YAAAwJ,EAAA+3B,QAAA+C,SAAA,oBAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAHDvkC,CAGC,mBAAAwJ,EAAA+3B,QAAA+C,SAYGtkC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA+3B,QAAA+C,QAAA,qCAAA96B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAAA,4BAAA/6B,EAAA+3B,QAAA,KAAA/3B,EAAA+3B,QAAAgD,QAAA,uBAWUvkC,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAAg7B,QAMrBxkC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA+3B,QAAA+C,SAqDItkC,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAjU,EAAAmU,sBAAA,MAAA3K,EAAA+3B,QAAAzvB,KAAA,oBAIA9R,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAAg7B,QAKDxkC,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,WAAAnW,EAAAsN,MAAA,KAAAtN,EAAAsN,MAAAvB,gBAAA,MAAA/L,EAAAsN,MAAA,KAAAtN,EAAAsN,MAAAvD,MAAA,KAAA/J,EAAA+3B,QAAAjuB,YAAA9J,EAAA+3B,QAAAvwB,SAAA,KAOAhR,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,WAAAnW,EAAAsM,SAAA,KAAAtM,EAAAsM,SAAAP,gBAAA,MAAA/L,EAAAsM,SAAA,KAAAtM,EAAAsM,SAAAvC,MAAA,UAAA/J,EAAAsM,UAAAtM,EAAAsM,SAAA6Z,QAAA,KAAAnmB,EAAAsM,SAAA6Z,QAAA,QAaH3vB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA+9B,UAwBRvnC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAk/B,gBASA1oC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAk/B,mNAWJrC,CAA4B,qSCzNzCzoC,EAAA,WACAD,EAAAC,EAAA,OACA0C,EAAA1C,EAAA,OAUAyC,EAAAzC,EAAA,MAMAizB,EAAAjzB,EAAA,OACAgc,EAAAhc,EAAA,OAQAwC,EAAAxC,EAAA,OAeAqiC,GAFAriC,EAAA,OAEAA,EAAA,QACA+qC,EAAA/qC,EAAA,OACA6+B,EAAA7+B,EAAA,OACAgrC,EAAAhrC,EAAA,OACAirC,EAAAjrC,EAAA,OAEAkrC,GADAlrC,EAAA,MACAA,EAAA,QACA04B,EAAA14B,EAAA,wEAIMmrC,EAAe,CACjB,aACA,eACA,iBACA,oBAyCSrpC,qBAAmB,eAAnBmR,EAAmB,SAAAlQ,GAAAC,EAAAiQ,EAAAlQ,GAAA,IAyT3BqoC,EAzT2BloC,EAAAC,EAAA8P,GAwM5B,SAAAA,EACYP,EACAtP,EACAC,EACAiX,EACA+wB,GAA0B,IAAA7nC,EAAAvB,SAAAC,KAAA+Q,IAElCzP,EAAAN,EAAAO,KAAAvB,OANQwQ,UACAlP,EAAAJ,YACAI,EAAAH,OACAG,EAAA8W,UACA9W,EAAA6nC,YA5MJ7nC,EAAA8nC,MAAQ,IAAItvB,EAAAqB,gBAAiC,QAC7C7Z,EAAAu7B,SAAW,IAAI/iB,EAAAqB,gBAAoC,CACvDrI,KAAM,SAEFxR,EAAAkmC,SAAW,IAAI1tB,EAAAqB,gBAAyB,MACxC7Z,EAAA+nC,cAAwC,GACxC/nC,EAAA6vB,SAAW,IAAIrX,EAAAqB,gBAAwB,IAExC7Z,EAAA4S,aAAwB,IAAIisB,EAAAtL,QAC/BpwB,KAAKmxB,MACDvxB,eAAe6D,QAAQ,gCAAkC,OAGjD5G,EAAA+hB,QAAU/hB,EAAK6vB,SAAS7V,eACxBha,EAAAyhB,QAAUzhB,EAAKu7B,SAAS15B,QAAK7C,EAAAuyB,aAAY,IACzCvxB,EAAAoP,QAAOm4B,EAAAS,uBAEPhoC,EAAAyV,UAAwCzV,EAAKyhB,QAAQ5f,QACjE7C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAsxB,yBAAwB,SAAM,EAC9BtxB,EAAAwxB,WAAU,SAAAxrB,GAAa,IAAVwM,EAAIxM,EAAJwM,KACT,IAAKxR,EAAKH,KAAK6U,SAAU,SAAO8D,EAAAO,IAAG,IACnC,OAAQvH,GACJ,IAAK,OACDxR,SAAK6vB,SAAS3uB,KAAI,oBACXlB,EAAKioC,iBAAiB,SACjC,IAAK,UACDjoC,SAAK6vB,SAAS3uB,KAAI,6BACXlB,EAAKioC,iBAAiB,kBACjC,IAAK,SACDjoC,SAAK6vB,SAAS3uB,KAAI,sBACXlB,EAAKioC,iBAAiB,WAErC,SAAOzvB,EAAAO,IAAG,GACd,IAAC,EACD/Z,EAAAsjB,KAAI,kBAAMtiB,EAAK6vB,SAAS3uB,KAAI,GAAI,MAChClC,EAAAuyB,aAAY,IAGAvxB,EAAA8H,SAAiC9H,EAAKyV,UAAU5T,QAC5D7C,EAAAwb,KAAI,SAAC0W,GACD,IACmCsE,EAD7B5jB,EAAiB,GAAG6jB,EAAAC,EACCxE,GAAQ,IAAnC,IAAAuE,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAqC,KAAxBhuB,EAAQ0tB,EAAAp1B,MAAR0H,SACTA,aAAoBogC,OACdpgC,EAASsgB,QAAQ,SAACrmB,GAAC,OAAK6P,EAAKijB,KAAK9yB,EAAE,GAE7C,OAAAsnB,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,SAAO72B,EAAAipC,QAAOv2B,GAAM8J,KAAK,SAACmW,EAAGrU,GAAC,OAAKqU,EAAEqK,cAAc1e,EAAE,EACzD,IAAC,EACDxe,EAAAuyB,aAAY,IAGAvxB,EAAAooC,aACZpoC,EAAKyhB,QAAQ5f,QACT7C,EAAAwxB,WAAU,SAAA1pB,GACN,SAAO7H,EAAAopC,cACHroC,EAAKH,KAAK6U,SAASzC,GAAE,GAAAnP,OAFZgE,EAAJ0K,KAGE,kBACT3P,QAAK7C,EAAAmyB,YAAW,oBAAM3Y,EAAAO,IAAG,CAAEjD,QAAS,IAAK,GAC/C,IAAC,EACD9W,EAAAwb,KAAI,SAACzY,GAAC,OAAMA,EAAE+T,mBAAmBoyB,MAAQnmC,EAAE+T,QAAU,EAAE,IAAC,EACxD9W,EAAAuyB,aAAY,IAGJvxB,EAAAsoC,uBAAsB9vB,EAAAgJ,eAAc,CAChDxhB,EAAKyhB,QACLzhB,EAAKyV,UACLzV,EAAKooC,gBACL5vB,EAAA+vB,OAAMvoC,EAAKoP,KAAK/K,IAAI,QAAQqN,gBAAc8G,EAAAgwB,OAAM,OAAK,EACrDhwB,EAAA+vB,OAAMvoC,EAAKoP,KAAK/K,IAAI,YAAYqN,gBAAc8G,EAAAgwB,OAAM,QACrD3mC,QACC7C,EAAA0b,QACI,kBACI1a,EAAKoP,KAAKq5B,cAAc/3B,KAAO,GAC/B1Q,EAAKoP,KAAKq5B,cAAcz1B,SAAW,CAAC,MAE5ChU,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAsjB,KAAI,SAAAX,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAQ,OACR3hB,EAAK6vB,SAAS3uB,KAAI,YAAA4B,OADV8e,EAAA,GAAJpQ,KAC+B,oBAAmB,MAE1DxS,EAAAwxB,WAAU,SAAA2L,GAAA,IAAA1K,EAAA/P,EAAAya,EAAA,GAAE1a,EAAOgQ,EAAA,GAAEhc,EAASgc,EAAA,GAAE2W,EAAY3W,EAAA,YACxC4J,EAAA/I,eAAc,CACVL,gBAAcxC,EAAAyC,aAAYlyB,EAAKoP,KAAKq5B,cAAc/3B,MAClD0hB,cAAY3C,EAAAyC,gBACRzC,EAAAiV,YACI1kC,EAAKoP,KAAKq5B,cAAc/3B,KACxB1Q,EAAKoP,KAAKq5B,cAAcz1B,UAAY,OAG5CxB,KAAMiQ,EAAQjQ,KACde,MAAOkP,EAAQinB,UAChB7mC,QACC7C,EAAAwb,KAAI,SAACoZ,GACD,IAAM6Q,EAAQzkC,EAAKoP,KAAKq5B,cAAc/3B,KAChCiT,MAAM8L,EAAAiV,YACRD,EACAzkC,EAAKoP,KAAKq5B,cAAcz1B,UAC1BwgB,UACImV,GAAcP,EAAa9Z,KAC7B,SAACvsB,IAAC,OACG0iC,GAAS1iC,GAAE0iC,OAASA,EAAQ1iC,GAAE4hB,KAC9BA,IAAO5hB,GAAE4hB,KAAOA,GAAM5hB,GAAE0iC,KAAM,GAEvCzkC,SAAK+nC,cAAgB,GACrBnU,EAASxL,QACL,SAACrmB,IAAC,OAAM/B,EAAK+nC,cAAchmC,GAAE6N,UAAY7N,GAAE6mC,SAAS,GAEjDnzB,EAAUiF,OACb,SAACmd,IAAK,IAAAgR,GAAAC,EAAAC,GAAAC,GAAA,QACAL,KACGA,GAAYpyB,OAAO5R,SAASkzB,GAAM5lB,SACzB,QAAb42B,GAAChR,GAAM0G,cAAM,IAAAsK,IAAZA,GAAc9kC,SACZ8zB,GAAM0G,OAAO0K,KAAK,SAACC,IAAG,SAClBhqC,EAAAsG,eAAc+4B,OAAO55B,SAASukC,GAAI,MAEvB,IAAnBrR,GAAMsR,YACJ1nB,EAAQ3Z,WACU,QADFghC,EACdrnB,EAAQ3Z,gBAAQ,IAAAghC,OAAA,EAAhBA,EAAkBrH,MAAM,SAAC1/B,IAAC,OACtB81B,GAAM/vB,SAASnD,SAAS5C,GAAE,QAEhC0f,EAAQinB,SACNjnB,EAAQinB,WAAsB,QAAfK,GAAKlR,GAAMrlB,YAAI,IAAAu2B,QAAA,EAAVA,GAAY92B,KAChCwP,EAAQinB,WAAsB,QAAfM,GAAKnR,GAAMrlB,YAAI,IAAAw2B,QAAA,EAAVA,GAAYv2B,cACnCmhB,EAAStF,KACN,SAAC8a,IAAG,OACAA,GAAIx5B,WAAaioB,GAAM5lB,IACR,aAAfm3B,GAAIjG,MAAqB,EAChC,EAEb,GACH,MAELnkC,EAAAsjB,KAAI,kBAAMtiB,EAAK6vB,SAAS3uB,KAAK,GAAG,MAChClC,EAAAuyB,aAAY,IAGAvxB,EAAAqpC,wBAAuB7wB,EAAAgJ,eAAc,CACjDxhB,EAAKyhB,QACLzhB,EAAKsoC,sBACNzmC,QACC7C,EAAAwb,KAAI,SAAAkX,GAQA,QARwB4X,EAAAvX,EAAArQ,EAAAgQ,EAAA,GAAtBjQ,EAAOsQ,EAAA,GACHwM,EAAS,GACT7C,EAAa7Z,EAFAkQ,EAAA,IAEcrW,KAAK,SAACmW,GAAGrU,GAAC,IAAA+rB,GAAAC,GAAAC,GAAA,OACjC,QADiCF,GACvC1X,GAAErf,YAAI,IAAA+2B,IAAI,QAAJC,GAAND,GAAQt3B,UAAE,IAAAu3B,QAAJ,EAANA,GAAYtN,cAAoB,QAAPuN,GAACjsB,EAAEhL,YAAI,IAAAi3B,QAAA,EAANA,GAAQx3B,GAAG,GAEnCy3B,GAAyB,QAAfJ,EAAA7nB,EAAQioB,eAAO,IAAAJ,GAAfA,EAAiBvlC,OAC3B0d,EAAQioB,QACR,IAACxqC,EAAAsG,gBAAemwB,GAAA,WAIlB,QAFMS,EAAQ,GACVyB,GAAQ6D,EAAWiO,MAChBvT,EAAMryB,OAAS2lC,GAAQ3lC,UAEtBqyB,EAAMryB,QACLqyB,EAAM9H,KAAK,SAACvsB,IAAC,IAAA6nC,GAAAC,GAAA,OAAW,QAAND,GAAA7nC,GAAEyQ,YAAI,IAAAo3B,QAAA,EAANA,GAAQ33B,OAAiB,QAAf43B,GAAKhS,GAAMrlB,YAAI,IAAAq3B,QAAA,EAAVA,GAAY53B,GAAE,KAIpDmkB,EAAMvB,KAAKgD,IACXA,GAAQ6D,EAAWiO,MAEvB,GAAIvT,EAAMryB,OAAS2lC,GAAQ3lC,OAAM,iBACjCw6B,EAAO1J,KAAKuB,IAdTsF,EAAW33B,QAAM4xB,KAgBxB,OAAO4I,CACX,IA0CAv+B,EAAKyR,aACD,kBACAzR,EAAKkP,QAAQujB,OAAO9gB,UAAU,SAACwuB,GAEvBA,aAAmB5jC,EAAAutC,gBAClBnC,EAAarZ,KAAK,SAACvsB,GAAC,OAAKo+B,EAAQ7zB,IAAI3H,SAAS5C,EAAE,IAEjD/B,EAAKmP,WAEb,IAEJnP,EAAKH,KAAK+B,YACLC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnB4P,UAAU,kBAAM3R,EAAKuR,WAAW,GAAG,GAAEvR,CAC9C,CAACxB,SAAAiR,EAAA,EAAAtP,IAAA,OAAAkE,IArDD,WACI,OAAO3F,KAAKopC,MAAMrwB,UACtB,GAAC,CAAAtX,IAAA,UAAAkE,IAED,WACI,OAAO3F,KAAKwnC,SAASzuB,UACzB,GAAC,CAAAtX,IAAA,mBAAAC,MAEM,SAAiB6R,GACpB,OAAOvT,KAAKqpC,cAAc91B,EAC9B,GAAC,CAAA9R,IAAA,UAAAC,MAEM,WAAwC,IAAAyD,EAAAnF,KAAhCyhC,EAAAx8B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAAIk7B,EAAAtL,QAClC70B,KAAK0Q,KAAK26B,QACVrrC,KAAK0Q,KAAKe,cACNlR,EAAAmgC,aAAWnO,IAAA,GAEAkP,GACAA,EAAQxM,gBAEf,CAAC,UAAM3vB,EAAW,MAG1BtF,KAAK+S,aACD,cACA/S,KAAK0Q,KAAKsC,aAAaC,UAAU,kBAAM9N,EAAK8jB,WAAW,IAE3DjpB,KAAKwnC,SAAShlC,KAAKi/B,GACnBzhC,KAAK68B,SAASr6B,KAAK,CAAEsQ,KAAM9S,KAAK68B,SAAS9jB,WAAWjG,MACxD,GAAC,CAAArR,IAAA,UAAAC,MA0BM,SAAQA,GACX1B,KAAKopC,MAAM5mC,KAAKd,EACpB,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWA,GACd1B,KAAK68B,SAASr6B,KAAI+vB,IAAA,GAAMvyB,KAAK68B,SAAS9jB,YAAerX,GACzD,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWia,EAAiB2vB,GAAe,IAAAC,EAC9C,GAAY,MAAP5vB,KAAStW,OACd,KAAM+D,GAAmC,QAAxBmiC,EAAAvrC,KAAK68B,SAAS9jB,kBAAU,IAAAwyB,OAAA,EAAxBA,EAA0BniC,WAAY,GACnDkiC,IAAWliC,EAASnD,SAAS0V,IAAUvS,EAAS+sB,KAAKxa,IACpD2vB,GAAUliC,EAASnD,SAAS0V,IAC7BvS,EAASoiC,OACLpiC,EAASqiC,UAAU,SAACvmB,GAAC,OAAKA,IAAMvJ,CAAO,GACvC,GAER3b,KAAK6S,WAAW,CAAEzJ,YAAU,CAChC,GAAC,CAAA3H,IAAA,YAAAC,MAEM,WACH,IAAM+/B,EAAUzhC,KAAKwnC,SAASzuB,WAC9B/Y,KAAK0Q,KAAK26B,MAAM,CAAE5d,QAAMjtB,EAAAsG,eAAe4kC,aAAWlrC,EAAAsG,iBAClD9G,KAAK0Q,KAAKe,cACNlR,EAAAmgC,aAAWnO,IAAA,GAECkP,GAAW,IACXA,GAASxM,gBAAkB,IAEnC,CAAC,UAAM3vB,EAAW,MAG1BtF,KAAK68B,SAASr6B,KAAK,CAAEsQ,KAAM9S,KAAK68B,SAAS9jB,WAAWjG,MACxD,GAAC,CAAArR,IAAA,YAAAC,MAEM,WACH2C,eAAesnC,WAAW,wBAC1BtnC,eAAesnC,WAAW,gCAC1B3rC,KAAK8oB,SACT,GAAC,CAAArnB,IAAA,YAAAC,MAEM,WACH2C,eAAeC,QACX,uBACAG,KAAKC,UAAU1E,KAAK0Q,KAAKq5B,eAAiB,KAE9C1lC,eAAeC,QACX,+BACAG,KAAKC,UAAU1E,KAAK68B,SAAS9jB,YAAc,IAEnD,GAAC,CAAAtX,IAAA,WAAAC,MAEM,WAAQ,IAAAkqC,EACX5rC,KAAK0Q,KAAK26B,MAAM,CAAE5d,QAAMjtB,EAAAsG,eAAe4kC,aAAWlrC,EAAAsG,iBAClD,IAAMhE,EAAO2B,KAAKmxB,MACdvxB,eAAe6D,QAAQ,yBAA2B,MAEhDu5B,EAAU,IAAItB,EAAAtL,QAAQ/xB,GAC5B9C,KAAKwnC,SAAShlC,KAAKi/B,GACnB,IAAMoK,KAAetrC,EAAAmgC,aAAWnO,MAAA,GAErBzvB,GACC2+B,GAAW,IACXA,GAASxM,gBAAkB,IAEnC,CAAC,UAAM3vB,EAAW,KAEtBtF,KAAK0Q,KAAKe,WAAWo6B,GACrB7rC,KAAK6S,WAAU0f,EAAA,CACXyX,QAA2B,QAApB4B,EAAE5rC,KAAKmB,KAAK6U,gBAAQ,IAAA41B,OAAA,EAAlBA,EAAoBr4B,IAC1B9O,KAAKmxB,MACJvxB,eAAe6D,QAAQ,iCAAmC,OAGtE,GAAC,CAAAzG,IAAA,gBAAAC,MAEM,WACH2C,eAAesnC,WAAW,+BAC1B3rC,KAAKkU,aAAe,IAAIisB,EAAAtL,OAC5B,GAAC,CAAApzB,IAAA,uBAAAC,MAEM,WAA2C,IAAtBoqC,EAAA7mC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAExB,GADAjF,KAAK0Q,KAAKsY,mBACLhpB,KAAK0Q,KAAKgE,OAAUo3B,EACzB,KAAMhd,EAAQ,IAAIqR,EAAAtL,QAAOtC,IAAA,GAClBvyB,KAAKyhC,SACLzhC,KAAK0Q,KAAKq5B,gBAEjB/pC,KAAKoY,QAAQrD,KAAKi0B,EAAA+C,0BAA2B,CAAEjpC,KAAMgsB,GAAO,CAChE,GAAC,CAAArtB,IAAA,cAAAC,OAAAwnC,EAAAvnC,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAihB,EAAArhB,EAAAmmB,EAAAzQ,EAAA,OAAAxV,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGxC,KAAKgsC,iBAAgB,OACrBjpB,SAAU/iB,KAAK68B,SAAS9jB,WACxBrX,EAAQ1B,KAAK0Q,KAAKq5B,cACpBliB,EAAO,8BAAAzjB,OAAiC2e,EAAQjQ,KAAI,KAAA1O,OACpD1C,EAAM8R,WACV,SAAApP,UAAQ2sB,EAAA2U,QAAOhkC,EAAMsQ,KAAM,gBAAc5N,OACrC1C,EAAM4S,SAAW,IACX,UAASyc,EAAA2U,QAAOhkC,EAAMsQ,KAAM,UAC5B,IAEN+Q,EAAQ2U,QACR7P,EAAO,GAAAzjB,OAAMyjB,EAAO,6EACvBvlB,EAAAE,KAAA,KACqBhC,EAAA4uB,kBAClB,CACI5tB,MAAK,QAAA4C,OAAU2e,EAAQjQ,MACvB+U,UACAwH,KAAM,CAAExH,QAAS,oBAErB7nB,KAAKoY,SACR,OAPY,GAAPhB,EAAO9U,EAAA4B,KAQW,SAApBkT,GAASkY,OAAiB,CAAAhtB,EAAAE,KAAA,cAAQ,iBAAgB,QACL,GAAjD4U,EAAQiM,QAAQ,kCACZN,EAAQ2U,MAAK,CAAAp1B,EAAAE,KAAA,SAAAF,SAAAE,KAAA,GACPxC,KAAKisC,mBAAkBznC,MAAO,SAACnB,GACjC,QAAA7C,EAAAmU,aAAYlQ,KAAKC,UAAUrB,IAC3B+T,EAAQpP,QACF3E,CACV,GAAE,QAAAf,EAAAE,KAAA,iBAAAF,SAAAE,KAAA,GAEIxC,KAAKwqB,WAAUhmB,MAAO,SAACnB,GACzB,QAAA7C,EAAAmU,aAAYlQ,KAAKC,UAAUrB,IAC3B+T,EAAQpP,QACF3E,CACV,GAAE,QACN+T,EAAQpP,QAAQ,yBAAA1F,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACnB,SAAA4Q,IAAA,OAAAs4B,EAAAlkC,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,WAAAC,MAAA,eAAAgpB,EAAA/oB,EAEM,eAAA6E,EAAAxG,KAAeksC,EAAYjnC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAQ,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAA4mC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5K,EAAA6K,EAAAxY,EAAAyY,GAAAC,GAAAC,GAAAjrC,GAAA+/B,EAAAmL,GAAAllC,GAAAkM,GAAA,OAAAhS,IAAAS,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,UACjCgE,EAAKkK,KAAI,CAAAjL,GAAAjD,KAAA,aAAQ,sBAAqB,UACtCgE,EAAKkK,KAAKgE,MAAK,CAAAjP,GAAAjD,KAAA,+CAAA4B,UACwB5D,EAAAoU,kBACpCpO,EAAKkK,MACPmE,KAAK,MAAK,YAOuC,GANvDrO,EAAKkK,KAAKe,WAAW,CACjBmC,aACIpN,EAAKkK,KAAKq5B,cAAcn2B,cACxBpN,EAAKq2B,SAAS9jB,WAAWjG,OAE7BpR,GAAQ8E,EAAKkK,KAAKq5B,cAClBtI,EAAUj7B,EAAKghC,SAASzuB,YAAc,IAAIonB,EAAAtL,QACzCqX,EAAY,CAAAzmC,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,GACPgE,EAAKqmC,uBACPnrC,GACA8E,EAAKq2B,SAAS9jB,WAAWjG,MAC5B,QAQJ,IANGpR,GAAM4S,UAAY,KAAW5S,GAAMmvB,WACnCrqB,EAAKkK,KAAKe,WAAW,CACjBO,QAAM+e,EAAArV,KAAIha,GAAMsQ,KAAM,CAAEm0B,MAAO,GAAIG,QAAS,KAAMxR,UAClDxgB,SAAU,MAEd5S,GAAQ8E,EAAKkK,KAAKq5B,gBAElBvjC,EAAK2iC,UAAU2D,eAAc,CAAArnC,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,GACPgE,EAAK2iC,UAAU4D,YAAY,CAC7Cj6B,KAAMtM,EAAKq2B,SAAS9jB,WAAWjG,KAC/Bk6B,cAAetrC,GAAM8R,WACrBxB,KAAMtQ,GAAMsQ,KACZsC,SAAU5S,GAAM4S,SAChBuc,QAASnvB,GAAMmvB,UACjB,QANW,GAOD,OAPN+b,GAAOnnC,GAAAvB,OAOR0oC,GAASK,QAAO,CAAAxnC,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,kBACpBjC,GAAcuzB,eAAiB,CAC5BiY,QAASN,GACTO,WAAYP,GAAQO,YACtB,QAEN3mC,SAAK2qB,SAAS3uB,KAAK,kBAAkBiD,GAAAjD,KAAA,MAChBm6B,EAAAyQ,aACjB,IAAIjN,EAAAtL,QAAOtC,MAAA,GACJ/rB,EAAKq2B,SAAS9jB,YACdrX,IAAK,IACRiS,YAAajS,GAAM8R,YAAc9R,GAAMiS,YACvCu2B,UAAqB,QAAZiC,EAAEzqC,GAAM+rB,YAAI,IAAA0e,OAAA,EAAVA,EAAY14B,KACvB45B,SACgB,QAAXjB,EAAC1qC,GAAM+rB,YAAI,IAAA2e,GAAI,QAAJC,EAAVD,EAAY74B,UAAE,IAAA84B,GAAdA,EAAgBpmC,SAAS,KAAyB,GAAb,QAARqmC,EAAG5qC,UAAK,IAAA4qC,GAAM,QAANC,EAALD,EAAO7e,YAAI,IAAA8e,OAAN,EAALA,EAAah5B,MAClC,QADyCouB,KACtDnhC,EAAAsG,sBAAa,IAAA66B,OAAA,EAAbA,EAAepuB,IACnB0hB,eAAc1C,IAAA,GACL7wB,GAAcuzB,gBAAkB,IAAE,IACvCqY,YACc,QAAVd,EAAA9qC,GAAM+rB,YAAI,IAAA+e,OAAA,EAAVA,EAAYc,cAA2B,QAAjBtZ,KAAIxzB,EAAAsG,sBAAa,IAAAktB,OAAA,EAAbA,EAAesZ,cAEjDC,WAAY/mC,EAAKtF,UAAUyE,IAAI,gCAGlCrC,YAAWkB,MACL,SAAC0gB,IACJ1e,QAAK2qB,SAAS3uB,KAAK,IACb0iB,IAAG/e,OAAS+e,EACtB,GAAE,QArBM,GAANxd,GAAMjC,GAAAvB,OAsBI,QAAZuoC,GAAA/qC,GAAMmW,cAAM,IAAA40B,IAAZA,GAAcpnC,QAAuC,QAAjCqnC,GAAIjL,EAAQxM,eAAepd,cAAM,IAAA60B,IAA7BA,GAA+BrnC,QAAM,CAAAI,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,MACvDg0B,EAAAkN,gCACFh8B,GACA,CACIsK,KAAMtQ,GAAMsQ,KACZsC,SAAU5S,GAAM4S,SAChBG,KAAM/S,GAAM8rC,iBAEhB9rC,GAAMmW,OACN4pB,EAAQxM,eAAepd,QAC1B,QAELrR,SAAK2qB,SAAS3uB,KAAK,IACXoR,GAAiBlS,GAAjBkS,aACRpN,EAAKiK,YACI,QAATk8B,GAAAnmC,EAAKkK,YAAI,IAAAi8B,IAATA,GAAWl7B,WAAW,CAAEmC,kBACxBpN,EAAK0N,aAAexM,GACpBrD,eAAeC,QACX,8BACAG,KAAKC,UAAUgD,KAEnBlB,EAAK4O,QAAQ,WAAW3P,GAAA9B,OAAA,SACjB+D,IAAM,yBAAAjC,GAAAX,OAAA,EAAAS,EAAA,EArFyB3D,EAqFzB,GAChB,gBAAA4oB,IAAA,OAAAE,EAAA1lB,MAAAhF,KAAAiF,UAAA,EAxFA,IAwFA,CAAAxD,IAAA,mBAAAC,MAAA,eAAA+rC,EAAA9rC,EAAAC,IAAAC,KAEM,SAAAwE,IAAA,IAAAqnC,EAAAC,EAAA3C,EAAAl4B,EAAA86B,EAAAl9B,EAAAssB,EAAA6Q,EAAA72B,GAAAD,GAAA+2B,GAAAC,GAAAzb,EAAA0b,GAAAC,GAAAxgB,GAAA0L,GAAA/xB,EAAApH,KAAA,OAAA4B,IAAAS,KAAA,SAAAoE,IAAA,cAAAA,GAAAlE,KAAAkE,GAAAjE,MAAA,OACyB,GADzBmrC,EAC8B3tC,KAAK68B,SAAS9jB,WAAvCiyB,EAAO2C,EAAP3C,QAAgBl4B,EAAI66B,EAAJ76B,KAAF66B,EAALjW,MACP,CAAAjxB,GAAAjE,KAAA,aAAQ,iCAAgC,OAGjD,MAFKorC,EAAgB5C,EAAQhvB,OAC1B,SAAC3Y,IAAC,OAAKA,GAAE2D,WAAUxG,EAAAsG,eAAcE,KAAK,IAExB3B,QAAU,GAAC,CAAAoB,GAAAjE,KAAA,aACnB,wCAAuC,OAC3CkO,SAAO1Q,KAAK0Q,KAAKhP,MAAK+E,GAAAjE,KAAA,EACHxC,KAAK4pC,oBACzBzmC,QAAK7C,EAAA4b,MAAK,IACV5Y,YAAW,OAFV05B,OAGA6Q,GAHA7Q,EAAUv2B,GAAAvC,MAGmB0rB,KAC/B,SAACvsB,IAAC,OAAKA,GAAEkQ,KAAO7C,EAAKQ,UAAY7N,GAAEqQ,SAAWhD,EAAKQ,QAAQ,GAEzD8F,GAAQhX,KAAKmB,KAAKwuB,YAAY,CAAqB,QAArB+d,EAACG,EAAgB/5B,YAAI,IAAA45B,OAAA,EAApBA,EAAsBn6B,KAAI9M,GAAAlC,GAAA,CAE3DspC,GAAepnC,GAAAynC,GAAA/qB,EAAA1c,GAAAjE,KAAA,GACLxC,KAAKmuC,oBACXn3B,GAAMtD,OACNhD,EAAKQ,SACL8rB,EACA4Q,EAAcvoC,QACjB,QAAAoB,UAAA2nC,GAAA3nC,GAAAvC,KAAAuC,GAAA4nC,MAAA5nC,GAAAynC,IAAAznC,GAAA2nC,IAPCr3B,GAAStQ,GAAAlC,GAAAH,OAAA7C,KAAAkF,GAAAlC,GAAAkC,GAAA4nC,IASTP,MAAgBttC,EAAAipC,QAAM,IACvBjpC,EAAAsG,gBAAa1C,OAAA+e,EAAKyqB,IACnB,SACHnnC,GAAAjE,KAAA,GACKwB,QAAQsmB,IACVwjB,GAAchyB,IAAI,SAACzY,GAAGirC,IAAG,OACrBlnC,EAAKylC,uBAAsBta,IAAA,GAEhB7hB,GAAI,IACPQ,SAAU6F,GAAUu3B,IAAK56B,QAAUqD,GAAUu3B,IAAK/6B,GAClD6uB,WAAY/+B,GAAE2D,QAElB8L,EACH,IAER,QACKi7B,GAAU,GAAA3pC,UAAM5D,EAAAsG,eAAcE,MAAK,KAAA5C,UAAI2sB,EAAA2U,QACzCnrB,KAAKgX,MACL,cACH,KACQe,EAAI,EAAC,aAAEA,EAAIwb,GAAczoC,QAAM,CAAAoB,GAAAjE,KAAA,SAC9BirB,UAAOqgB,GAAcxb,GACrB6G,GAAQpiB,GAAUub,GACxBtyB,KAAK0Q,KAAKe,WAAU8gB,IAAA,GACb7hB,GAAI,IACP+c,KAAMA,GACN2U,WAAY3U,GAAKzmB,MACjBqmC,QAAS5f,GAAKla,GACdrC,SAAUioB,IAAO5lB,GACjBC,WAAY2lB,GAAM1lB,KAClBE,YAAawlB,GAAM1lB,KACnBC,OAAQylB,IAAOzlB,QAAUylB,IAAO5lB,GAChCmkB,MAAOqW,GACPl6B,MAAOslB,GAAMrlB,QACPtT,EAAAipC,QAAO,CACHzpC,KAAKmB,KAAKotC,aAAah7B,GACb,QADey6B,GACzB7U,GAAMrlB,YAAI,IAAAk6B,QAAA,EAAVA,GAAYj6B,UACF,QADWk6B,GACrB9U,GAAMrlB,YAAI,IAAAm6B,QAAA,EAAVA,GAAY16B,KAEhB,CAACvT,KAAKmB,KAAKotC,aAAah7B,OAC/B9M,GAAAjE,KAAA,GACGxC,KAAKwqB,UAAS,GAAK,QArBa8H,IAAG7rB,GAAAjE,KAAA,kCAAAiE,GAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IAuBhD,gBAAAisC,IAAA,OAAAwB,EAAAzoC,MAAAhF,KAAAiF,UAAA,EAtEA,IAsEA,CAAAxD,IAAA,iBAAAC,MAAA,eAAA8sC,EAAA7sC,EAAAC,IAAAC,KAEO,SAAAsF,IAAA,IAAAqR,EAAA9Q,EAAAgJ,EAAA,OAAA9O,IAAAS,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,WACqD,IAArDxC,KAAKkB,UAAUyE,IAAI,8BAAuC,CAAA0B,EAAA7E,KAAA,eAAA6E,EAAA1D,OAAA,iBACxD6U,SAAMxY,KAAKoY,QAAQrD,KAAK+zB,EAAA2F,6BAA4BpnC,EAAA7E,KAAA,EACrCwB,QAAQ0qC,KAAK,CAC9Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OALU,GAANoE,EAAML,EAAAnD,KAMW,SAAnBwD,GAAQ4nB,OAAiB,CAAAjoB,EAAA7E,KAAA,aAAQ,iBAAgB,OAC/CkO,EAAO8H,EAAIM,kBAAkBpI,KAAKq5B,cAAa1iC,EAAA9C,GAAA3C,IAAAyoB,KACnC3Z,GAAI,YAAArJ,EAAA6mC,GAAA7mC,EAAA9C,MAAA6yB,KAAA,CAAA/vB,EAAA7E,KAAA,SAAR,IACNkO,EADMrJ,EAAA6mC,GAAAxsC,OACG,CAAA2F,EAAA7E,KAAA,cAAQ,2BAA0B,QAAA6E,EAAA7E,KAAA,iBAEnDgW,EAAIxQ,QAAQ,yBAAAX,EAAAvC,OAAA,EAAAqC,EAAAnH,KAAA,IACf,gBAAAgsC,IAAA,OAAAwC,EAAAxpC,MAAAhF,KAAAiF,UAAA,EAjBA,IAmBD,CAAAxD,IAAA,yBAAAC,MAAA,eAAAitC,EAAAhtC,EACQ,SAAAitC,EAEJ97B,GAAiB,IAAA+7B,EAAA7uC,KADfkR,EAAQ09B,EAAR19B,SAAUc,EAAI48B,EAAJ58B,KAAMsC,EAAQs6B,EAARt6B,SAAU8tB,EAAUwM,EAAVxM,WAAYvR,EAAO+d,EAAP/d,QAAO,OAAAjvB,IAAAC,KAAA,SAAAitC,IAAA,IAAAC,EAAA7Z,EAAA8Z,GAAAC,GAAAC,GAAA,OAAAttC,IAAAS,KAAA,SAAA8sC,GAAA,cAAAA,EAAA5sC,KAAA4sC,EAAA3sC,MAAA,UAG1C4/B,EAAU,CAAA+M,EAAA3sC,KAAA,aAAQ,mCAAkC,OACzD8R,SAAWuc,EAAU,IAAUvc,GAAY,GAAG66B,EAAA3sC,KAAA,KACvBm6B,EAAA/I,eAAc,CACjCL,gBAAcxC,EAAAyC,aAAYxhB,GAC1B0hB,cAAY3C,EAAAyC,aAAYxhB,EAAkB,GAAXsC,EAAgB,KAC/CxB,SACDxP,YAAW,OAJA,KAAR4xB,EAAQia,EAAAjrC,MAKD0rB,KAAK,SAACvsB,IAAC,OAAKA,GAAE6N,WAAaA,CAAQ,GAAC,CAAAi+B,EAAA3sC,KAAA,aACzC0O,EAASjL,SAAS,KAAI,CAAAkpC,EAAA3sC,KAAA,iBAAA4B,OACb8M,EAAQ,gEAAA9M,OAER8M,EAAQ,kDAI6C,MADhE89B,GAC2D,QAD3CD,EAClBF,EAAK3tC,UAAUyE,IAAG,6BAAAvB,OAA8B0O,EAAI,kBAAS,IAAAi8B,IAAI,GAE9C,GACnB7Z,EAASlZ,OACL,SAAC3Y,IAAC,IAAA6wB,GAAA,OACE7wB,GAAE++B,cAAgBA,IAA2B,QAAjBlO,MAAI1zB,EAAAsG,sBAAa,IAAAotB,QAAA,EAAbA,GAAeltB,SAClC,aAAb3D,GAAEohC,MAAqB,GAC7Bp/B,QAAU2pC,IAAgB,CAAAG,EAAA3sC,KAAA,SAEtB0sC,SAAU9M,KAA4B,QAAlB6M,MAAKzuC,EAAAsG,sBAAa,IAAAmoC,QAAA,EAAbA,GAAejoC,OAAK,GAAA5C,OAC1C8qC,GAAU,MAAQ9M,EAAU,aAAAh+B,OACjC8qC,GAAU,OAAS,MACvB,OAAA9qC,OAAM0O,EAAI,0BAAAq8B,EAAAxrC,OAAA,UAEP,GAAI,yBAAAwrC,EAAArqC,OAAA,EAAAgqC,EAAA,EAhCoCltC,EAgCpC,GACd,gBAAAirC,EAAA1vB,EAAAwmB,GAAA,OAAAgL,EAAA3pC,MAAAhF,KAAAiF,UAAA,EAnCD,IAmCC,CAAAxD,IAAA,mBAAAC,MAEM,SAAiBoR,GACpB,SAAOvS,EAAA6uC,mBAAkBpvC,KAAKmB,KAAK6U,SAASzC,GAAI,CAC5CE,KAAMX,IACP3P,QACC7C,EAAAwb,KAAI,SAAChZ,GAAI,SACLtC,EAAAoyB,SACI9vB,EAAKgZ,IAAI,SAACzY,GAAC,IAAAgsC,EAAAC,EAAA,QACU,QAAhBD,EAAAhsC,EAAEksC,SAASz8B,UAAK,IAAAu8B,OAAA,EAAhBA,EAAkBj4B,mBAAmBoyB,MAChB,QADqB8F,EACrCjsC,EAAEksC,SAASz8B,UAAK,IAAAw8B,OAAA,EAAhBA,EAAkBl4B,QAClB,IACJ0E,IAAI,SAACjD,GAAC,IAAA22B,EAAA,MACc,YAAjB18B,EAA0Byf,IAAA,GAEd1Z,GAAC,IACJtF,GAAIsF,EAAEtF,IAAMsF,EAAEnF,OACdI,KAAMzQ,EAAEyQ,QAEH,QAAT07B,EAAA32B,EAAE2b,eAAO,IAAAgb,OAAA,EAATA,EAAW1zB,IAAI,SAACzY,GAAC,OAAAkvB,IAAA,GACVlvB,GAAC,IACJosC,QAAS52B,EAAEtF,GACXO,KAAMzQ,EAAEyQ,MAAI,KACT,EAAE,EAClB,GAER,GAGb,GAAC,CAAArS,IAAA,sBAAAC,MAAA,eAAAguC,EAAA/tC,EAAAC,IAAAC,KAEO,SAAA8tC,EACJC,EACAr8B,EACAwD,EACA2lB,GAAa,IAAAmT,EAAA7S,EAAAyG,EAAAnR,EAAA,OAAA1wB,IAAAS,KAAA,SAAAytC,GAAA,cAAAA,EAAAvtC,KAAAutC,EAAAttC,MAAA,OAEPqtC,EAAmB,GACrB7S,EAAajmB,EAAUiF,OACvB,SAAC3Y,IAAC,OAAKA,GAAEkQ,KAAOA,GAAMlQ,GAAEqQ,SAAWH,CAAE,GACxCkwB,EAAA7hC,IAAAC,KAAA,SAAA4hC,KAAA,IAAAxnB,GAAA,OAAAra,IAAAS,KAAA,SAAA0tC,IAAA,cAAAA,GAAAxtC,KAAAwtC,GAAAvtC,MAAA,OAAAutC,UAAAvtC,KAAA,KAEsBumC,EAAAiH,mBACfJ,EACAr8B,EACAypB,EAAWlhB,IAAI,SAACzY,GAAC,OAAKA,EAAEqQ,QAAUrQ,EAAEkQ,EAAE,IACzC,QAJK0I,GAAI8zB,GAAA7rC,QAMN2rC,EAAiB1Z,KACbpf,EAAU6Y,KAAK,SAACvsB,GAAC,OAAKA,EAAEkQ,KAAO0I,IAAQ5Y,EAAEqQ,SAAWuI,EAAI,IAE5D+gB,EAAaA,EAAWhhB,OACpB,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAO0I,IAAQ5Y,EAAEqQ,SAAWuI,EAAI,IAEhD,wBAAA8zB,GAAAjrC,OAAA,EAAA2+B,GAAA,GAbInR,EAAI,EAAC,YAAEA,EAAIoK,GAAK,CAAAoT,EAAAttC,KAAA,eAAAstC,EAAAG,cAAAxM,IAAA,eAAEnR,IAAGwd,EAAAttC,KAAA,sBAAAstC,EAAAnsC,OAAA,SAevBksC,GAAgB,yBAAAC,EAAAhrC,OAAA,EAAA6qC,EAAA,IAC1B,gBAAAxB,EAAAvK,EAAAC,EAAAqM,EAAAC,GAAA,OAAAT,EAAA1qC,MAAAhF,KAAAiF,UAAA,EA5BA,MA4BA8L,CAAA,CA7mB2B,CAAQvQ,EAAAiI,cAA3BsI,SAAmB,mBAAA9Q,iBAAnB8Q,GAAkB7Q,EAAAsd,mBAAA7U,EAAA0E,QAAAnN,EAAAsd,mBAAA3U,EAAAD,iBAAA1I,EAAAsd,mBAAAzU,EAAAD,qBAAA5I,EAAAsd,mBAAAvU,EAAAiQ,WAAAhZ,EAAAsd,mBAAAiI,EAAA2qB,iBAAA,EAAlBr/B,EAAmB,WAAA7Q,EAAA,oCAAnB6Q,EAAkB0M,QAAlB1M,EAAkB2M,UAAAC,WAFf,SAEH5M,CAAmB,6KClGhC,IAAA/C,EAAAlQ,EAAA,OAEAuyC,GADAvyC,EAAA,OACAA,EAAA,WAKAA,EAAA,2FAqDa8B,4BAAyB,eAAzBmsC,EAAyBjsC,EASlC,SAAAisC,EACqCuE,EACzBpvC,GAA0BnB,EAAAC,KAAA+rC,GADD/rC,KAAAswC,SACzBtwC,KAAAkB,YAVIlB,KAAAuwC,gBAAeF,EAAAG,+BAC3BxwC,KAAKswC,QAEOtwC,KAAAywC,eAAcJ,EAAAK,4BAC1B1wC,KAAKswC,QAEOtwC,KAAA2wC,aAAYN,EAAAO,0BAAyB5wC,KAAKswC,OAKvD,GAZMvE,SAAyB,mBAAA9rC,iBAAzB8rC,GAAyB7rC,EAAAwI,4BAUtBsF,EAAAsuB,iBAAep8B,EAAAwI,4BAAAC,EAAAC,iBAAA,EAVlBmjC,EAAyB,UAAA7rC,EAAA,kCAAzB6rC,EAAyB5iC,UAAA,yBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wTArCX0iB,UAAAC,MAAAC,EAAA,0IAWAF,UAAAG,MAAAD,EAAA,wHAWAF,UAAAI,MAAAF,EAAA,mMAjCnBhwB,EAAAqN,yBAAA,WAA6BrN,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,yBACvDtN,EAAAqN,yBAAA,UAAArN,CAA+D,0CASvDA,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA4BzuB,EAAAsN,wBAAAtN,GAEhCA,EAAAqN,yBAAA,0CAQIrN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,MAAoCzuB,EAAAsN,wBAAAtN,GAExCA,EAAAqN,yBAAA,wCAQIrN,EAAAqN,yBAAA,iBAA0BrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,MAA6BzuB,EAAAsN,wBAAAtN,KAGrCA,EAAAqN,yBAAA,cAAArN,CAA6D,eAC/CA,EAAAuN,iBAAA,YAAKvN,EAAAsN,wBAAAtN,UA/BXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAAmU,sBAAA,IAAA3K,EAAA6mC,aAAA,OAAArwC,EAAAurB,yBAWAvrB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAAmU,sBAAA,IAAA3K,EAAA+mC,YAAA,OAAAvwC,EAAAurB,yBAWAvrB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAAmU,sBAAA,KAAA3K,EAAAinC,UAAA,OAAAzwC,EAAAurB,qPAoBHsgB,CAAyB,qJC7DtC,IAAAvrC,EAAA1C,EAAA,OAEAizB,EAAAjzB,EAAA,OAsBM+yC,EAAkB,CAAC,OAAQ,YAAa,YAAa,SAAU,WAcrEjxC,UAAoB,WA0EhB,SAAAi1B,IAA+C,IAAAic,EAAAC,EAAAC,EAAAC,EAAAC,EAAnCpuC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,GAwEzC,QAAWxD,KAxEgC1B,EAAAC,KAAA60B,GAC3C70B,KAAKuT,GAAKzQ,EAAKyQ,IAAM,GACrBvT,KAAKkR,SAAWpO,EAAKoO,UAAY,GACjClR,KAAKwT,WACD1Q,EAAK0Q,aACc,QADJs9B,EACfhuC,EAAKmyB,sBAAc,IAAA6b,OAAA,EAAnBA,EAAqBt9B,cACF,QADYu9B,EAC/BjuC,EAAKmyB,sBAAc,IAAA8b,OAAA,EAAnBA,EAAqBt9B,OACrB3Q,EAAK6Q,aACL,GACJ3T,KAAK6T,MAAQ/Q,EAAK+Q,OAAS,GAC3B7T,KAAK2nC,cACDvB,KAAKC,MAAMvjC,EAAKkP,KAAO,MACvBlP,EAAK6kC,kBACL5W,EAAAyC,gBACIzC,EAAAogB,0BAAsBpgB,EAAAiV,YAAWzrB,KAAKgX,MAAO,GAAI,CAC7C6f,UAAW,KAGvBpxC,KAAK4nC,YACDxB,KAAKC,MAAMvjC,EAAKkP,KAAO,KAAwB,GAAhBlP,EAAKwR,UACpCxR,EAAK8kC,gBACL7W,EAAAyC,gBACIzC,EAAAiV,YAAgC,IAArBhmC,KAAK2nC,cAAsB7kC,EAAKwR,UAAY,KAE/DtU,KAAK4T,aAAe9Q,EAAK8Q,cAAgB,IACzC5T,KAAK8S,KAAOhQ,EAAKgQ,MAAQhQ,EAAK8Q,cAAgB,UAC9C5T,KAAKgS,KAAOlP,EAAKkP,MAA6B,IAArBhS,KAAK2nC,eAAwBptB,KAAKgX,MAC3DvxB,KAAKsU,SACDxR,EAAKwR,UACL8xB,KAAKiL,OACDtgB,EAAAugB,qBACyB,IAArBtxC,KAAK2nC,cACc,IAAnB3nC,KAAK4nC,eAGb,GACJ5nC,KAAKuxC,SACDzuC,EAAKyuC,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7D3xC,KAAKoiC,WAAat/B,EAAKs/B,YAAc,GACrCpiC,KAAKqtC,QAAUvqC,EAAKuqC,SAAW,GAC/BrtC,KAAKkqC,UAAYpnC,EAAKonC,WAAa,GACnClqC,KAAKwB,MACS,QADJwvC,EACNluC,EAAKtB,aAAK,IAAAwvC,IACThxC,KAAK4T,aACA,GAAAxP,UAAG5D,EAAAoxC,uBAAsB5xC,KAAK4T,cAAa,YAAWi+B,OACtD,GACV7xC,KAAK2T,YAAc7Q,EAAK6Q,aAAe,GACvC3T,KAAK8mC,aAAehkC,EAAKgkC,WACzB9mC,KAAK8xC,WAAahvC,EAAKgvC,SACvB9xC,KAAKutC,WAAazqC,EAAKyqC,SACvBvtC,KAAK+xC,UAAYjvC,EAAKivC,QACtB/xC,KAAKgyC,aAAelvC,EAAKkvC,cAAgB,GACzChyC,KAAKiyC,eAAiBnvC,EAAKmvC,gBAAkB,GAC7CjyC,KAAKwtC,gBAAkB1qC,EAAK0qC,iBAAmB,GAC/CxtC,KAAKkyC,YAAcpvC,EAAKovC,aAAe,GACvClyC,KAAKmyC,eAAiBrvC,EAAKqvC,gBAAkB,GAC7CnyC,KAAKoyC,cAAgBtvC,EAAKsvC,eAAiB,GAC3CpyC,KAAKi1B,eAAiBnyB,EAAKmyB,gBAAkB,GAC7Cj1B,KAAKqyC,SAA8B,QAApBpB,EAACnuC,EAAKmyB,sBAAc,IAAAgc,IAAnBA,EAAqBoB,QACrCryC,KAAKiiC,SAAWn/B,EAAKm/B,SACrBjiC,KAAKwW,UAAY1T,EAAK0T,WAAa1T,EAAKkoC,SAAW,GACnDhrC,KAAK6wB,QAAsB,QAAfqgB,EAAGpuC,EAAK+tB,eAAO,IAAAqgB,IAAIlxC,KAAKsU,UAAY,IAChDtU,KAAKsyC,eAAiBxvC,EAAKwvC,eAC3BtyC,KAAKuyC,aAAezvC,EAAKyvC,cAAgB,KACzCvyC,KAAKykC,OACDzkC,KAAKsyC,eAAiB,EAChB,QACAtyC,KAAK8xC,SACL,WACA9xC,KAAKutC,SACL,WACA,YACQzqC,IACRrB,KAAOzB,QAAU6wC,EAAgB5qC,SAASxE,IAAQqB,EAAKrB,KACzDzB,KAAKi1B,eAAexzB,GAChBqB,EAAKrB,IAAQzB,KAAKi1B,eAAexzB,GAGjD,CAAC3B,SAAA+0B,EAAA,EAAApzB,IAAA,QAAAkE,IAlFD,WACI,OAAO3F,KAAKi1B,eAAeyC,OAAS,EACxC,GAAC,CAAAj2B,IAAA,SAAAC,MAkFM,WACH,IAAMoB,EAAIyvB,EAAA,GAAQvyB,MAClB,OAAKA,KAAKuT,WAAWzQ,EAAKyQ,UACnBzQ,EAAKkP,YACLlP,EAAKwR,YACZ9T,EAAAgyC,mBAAkB1vC,GACXA,CACX,GAAC,CAAArB,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAK2T,WAChB,GAEA,CAAAlS,IAAA,WAAAkE,IACA,WACI,SAAOorB,EAAAkC,WAAUjzB,KAAKgS,KAAM,IAAIuI,KACpC,GAEA,CAAA9Y,IAAA,UAAAkE,IACA,WACI,IAAMogC,EAAQ,IAAIxrB,KACZ0K,EAAMjlB,KAAK6wB,WACXE,EAAA0hB,UAASzyC,KAAKgS,KAAM,KAAE,EACtB+e,EAAAiV,YAAWhmC,KAAKgS,KAAMhS,KAAKsU,UAC3Bo+B,EAEF,KADC1yC,KAAKsyC,gBAAkBtyC,KAAKi1B,eAAeqd,gBAAkB,GAE9DlnB,EAAWnG,EAAI0tB,UACnB,SAAID,GAAen4B,KAAKgX,MAAQmhB,KAAoB,EAC7C3hB,EAAA6hB,SAAQ7M,EAAO,IAAIxrB,KAAK6Q,GACnC,GAEA,CAAA3pB,IAAA,QAAAkE,IACA,WAMI,IAAM4rB,EAAM,IAAIhX,KACVvI,EAAOhS,KAAKgS,KAClB,SAAI+e,EAAA8hB,UAASthB,KAAKR,EAAA+hB,KAAI9gC,EAAM,CAAEs0B,SAAS,MAAgB,YACnDvV,EAAA8hB,UAASthB,EAAKvf,GAAc,cAC5B+e,EAAA8hB,UAASthB,KAAKR,EAAA+hB,KAAI9gC,EAAM,CAAEs0B,QAAS,MAAe,aAClDvV,EAAA8hB,UAASthB,KAAKR,EAAA+hB,KAAI9gC,EAAM,CAAEs0B,QAAStmC,KAAKsU,YACjC,cACJ,MACX,KAACugB,CAAA,CAzMe,qOCtCpB,IAAAjrB,EAAA9L,EAAA,OACA0C,EAAA1C,EAAA,OAEAi1C,EAAAj1C,EAAA,MACAk1C,EAAAl1C,EAAA,OAMAqiC,EAAAriC,EAAA,OAyDuC,SAAAm1C,aAAAtxC,EAAhC,SACHiuC,EACAsD,GAA2B,IAC3BC,EAAAluC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAAArD,IAAAC,KAAA,SAAAC,IAAA,IAAAsxC,EAAA7/B,EAAA8/B,EAAAC,EAAAC,EAAAC,EAAAzc,EAAAD,EAAA1jB,EAAA9M,EAAAmtC,EAAAC,EAAA76B,EAAA,OAAAjX,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEjB4wC,SAAUtd,SAAS6d,cAAc,QAC/BC,MAAMC,SAAW,WACzBT,EAAQQ,MAAME,IAAM,UACpBV,EAAQQ,MAAMnsC,MAAQ,SACtB2rC,EAAQQ,MAAMpsC,OAAS,SACvBsuB,SAASmN,KAAK8Q,YAAYX,GAAS9wC,EAAAE,KAAA,KAClBwwC,EAAAgB,cAAa,CAC1BpmC,IAAKgiC,EACLwD,YACF,OACIC,KAASL,EAAAiB,WAJT1gC,EAAEjR,EAAA4B,MAKFovC,GAAgC,iBAAhBJ,EAChBG,EAAOa,SAAShB,GAChBA,IAAgB,CAAEO,EAAG,GAAKC,EAAG,IAC/BH,EAAO,GACPC,EAAU,GAAEzc,EAAAC,EACGmc,GAAQ,IAA3B,IAAApc,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MACYqc,GADGntC,EACM+sC,EAAOa,SADjB9gC,EAAI0jB,EAAAp1B,QAC+B,CAAE+xC,EAAG,EAAGC,EAAG,IAA7CD,EAAGC,EAACptC,EAADotC,GACL76B,EAAIutB,KAAK+N,MACVV,EAAIH,EAAMG,IAAMA,EAAIH,EAAMG,IAAMC,EAAIJ,EAAMI,IAAMA,EAAIJ,EAAMI,KAEvDH,IACJA,EAAO16B,EACP26B,EAAUpgC,EAEjB,OAAAuX,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACDvB,gBAASmN,KAAKmR,YAAYhB,IAAO,EACjCJ,EAAAqB,cAAa9gC,GAAIjR,EAAAqB,OAAA,SACV6vC,GAAO,yBAAAlxC,EAAAwC,OAAA,EAAAhD,EAAA,EA9BSF,EA8BT,GACjBqxC,EAAAjuC,MAAAhF,KAAAiF,UAAA,CAzFDrF,sBAAA,SAAgB0pC,IAAoD,IAAAgL,EAAA5H,EAAA6H,EAAAC,EAAAC,EAAhChT,EAAAx8B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAAIk7B,EAAAtL,QACjDnkB,EAAO,IAAI9G,EAAA60B,UAAU,CACvBlrB,GAAI,IAAI3J,EAAA80B,YAAY+C,EAAQluB,IAAM,IAClCvB,KAAM,IAAIpI,EAAA80B,YAAY+C,EAAQzvB,KAAM,CAACpI,EAAA+0B,WAAWC,WAChD/N,QAAS,IAAIjnB,EAAA80B,YAA2B,QAAhB4V,EAAC7S,EAAQ5Q,eAAO,IAAAyjB,MACxC7gC,KAAM,IAAI7J,EAAA80B,YACN+C,EAAQxM,eAAexhB,MAAQguB,EAAQjuB,YAAc,IAEzDc,SAAU,IAAI1K,EAAA80B,YAAY+C,EAAQntB,SAAU,CAACy+B,EAAA2B,cAC7C9gC,aAAc,IAAIhK,EAAA80B,YAAY+C,EAAQ7tB,cACtCC,MAAO,IAAIjK,EAAA80B,YAAY+C,EAAQ5tB,OAC/BrS,MAAO,IAAIoI,EAAA80B,YAAY+C,EAAQjgC,OAC/BmS,YAAa,IAAI/J,EAAA80B,YAAY+C,EAAQ9tB,aACrCK,cAAe,IAAIpK,EAAA80B,YAAY,MAC/B3nB,UAAW,IAAInN,EAAA80B,YAAY,IAC3BiW,QAAS,IAAI/qC,EAAA80B,YAAY,IACzBxtB,SAAU,IAAItH,EAAA80B,YAAY+C,EAAQvwB,SAAU,CAACtH,EAAA+0B,WAAWC,WACxDprB,WAAY,IAAI5J,EAAA80B,YAAY+C,EAAQ9tB,aACpCkE,OAAQ,IAAIjO,EAAA80B,aAAkC,QAAtBgO,EAAAjL,EAAQxM,sBAAc,IAAAyX,OAAA,EAAtBA,EAAwB70B,SAAU,IAC1DrB,UAAW,IAAI5M,EAAA80B,YAAY+C,EAAQjrB,WAAa,IAChD9C,OAAQ,IAAI9J,EAAA80B,YAAkC,QAAvB6V,EAAC9S,EAAQxM,sBAAc,IAAAsf,OAAA,EAAtBA,EAAwB7gC,QAChD+Z,KAAM,IAAI7jB,EAAA80B,eAAYl+B,EAAAsG,gBACtBumC,QAAS,IAAIzjC,EAAA80B,YAAY+C,EAAQ4L,SACjC3V,MAAO,IAAI9tB,EAAA80B,YAAY+C,EAAQ/J,OAC/B0K,WAAY,IAAIx4B,EAAA80B,YAAY+C,EAAQW,YACpCsJ,UAAW,IAAI9hC,EAAA80B,eAAYl+B,EAAAsG,gBAC3BkrC,aAAc,IAAIpoC,EAAA80B,YAAY+C,EAAQuQ,cACtCxE,gBAAiB,IAAI5jC,EAAA80B,YAAY+C,EAAQ+L,iBACzC97B,mBAAoB,IAAI9H,EAAA80B,aACE,QAAtB8V,EAAA/S,EAAQxM,sBAAc,IAAAuf,OAAA,EAAtBA,EAAwBI,oBACE,QADcH,EACpChT,EAAQxM,sBAAc,IAAAwf,OAAA,EAAtBA,EAAwB/iC,uBAGpChB,SAAKsC,aAAaC,UAAU,SAACwQ,GACzB,IAAMgK,EAAOhK,EAAEgK,KACTonB,EAASpxB,EAAEioB,WACjBmJ,GAAUpnB,IACJ/c,EAAKe,WACD,CACI47B,QAAS5f,EAAKla,IAAMshC,EAAOthC,GAC3B6uB,WAAY3U,EAAKzmB,OAAS6tC,EAAOthC,GACjCy+B,aAAc6C,EAAOthC,GACrBi6B,gBAAiBqH,EAAO7tC,OAE5B,CAAE8tC,WAAW,GAG3B,GACApkC,EAAKqU,SAAS8L,QAAQ7d,aAAaC,UAAU,SAAC4d,GACtCA,EAASngB,EAAKqU,SAASzQ,SAASygC,UAC/BrkC,EAAKqU,SAASzQ,SAASg3B,QAChC,GACO56B,CACX,EAEA9Q,oBAFC,SAEqBowC,EAAiB7yB,EAAAwmB,GAAA,OAAAsP,EAAAjuC,MAAAhF,KAAAiF,UAAA,EAoCvCrF,8BAAA,SAAgBo1C,EAA4BlmB,GAAoB,IAAAmmB,EAAAC,EAAAC,EAC5D,OAAO,IAAIhV,EAAAtL,QAAQ,CACfthB,GAAIub,EAAMvb,GACV6uB,WAAYtT,EAAMra,KAClBvD,SAAsB,QAAd+jC,EAAEnmB,EAAMzV,cAAM,IAAA47B,OAAA,EAAZA,EAAc1hC,GACxBC,YAAwB,QAAZ0hC,EAAApmB,EAAMzV,cAAM,IAAA67B,OAAA,EAAZA,EAAcz/B,gBAA4B,QAAhB0/B,EAAIrmB,EAAMzV,cAAM,IAAA87B,OAAA,EAAZA,EAAc1hC,MACxDG,aAAc,OACd25B,SAA2B,aAAjBze,EAAM2V,OAChBxP,eAAc1C,EAAA,GACPzD,IAGf,qSCnHA,IAAAvuB,EAAAzC,EAAA,MACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAEAoiC,EAAApiC,EAAA,OACAqiC,EAAAriC,EAAA,OACAs3C,EAAAt3C,EAAA,OACAizB,EAAAjzB,EAAA,OAyBMu3C,EAAiB,yBAMvB,SAAgBzhB,EAAc0M,GAC1B,IAAMhN,KAAQ4M,EAAAK,eAAcD,GAC5B,SAAO//B,EAAAoF,KAAG,GAAAvB,OAAIixC,GAAiBjxC,OAAGkvB,EAAQ,IAAMA,EAAQ,KAAMnwB,QAC1D7C,EAAAwb,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,EAAC,MACnD3b,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAG,GAEhC,CAiBA,SAAgB8nB,EAAcr/B,EAAyBw9B,GACnD,IAAMhN,KAAQ4M,EAAAK,eAAcD,GAC5B,SAAO//B,EAAAkgC,MAAI,GAAAr8B,OAAIixC,GAAiBjxC,OAAGkvB,EAAQ,IAAMA,EAAQ,IAAMxwB,GAAMK,QACjE7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,GAEvC,CAQA,SAAgBq5B,EACZ/hC,EACAzQ,GAGA,OAAmB,WAFnBmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,SAEG1E,EAAAg1C,MAAQh1C,EAAAqgC,KAAG,GAAAx8B,OACjCixC,EAAiB,KAAAjxC,OAAIoxC,mBAAmBjiC,IAC3CzQ,GACFK,QAAK7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,GAC1C,CA7CArc,gBAAAg0B,EAaAh0B,cAAA,SAAgB61C,EAAYliC,GACxB,SAAOhT,EAAAoF,KAAG,GAAAvB,OAAIixC,EAAiB,KAAAjxC,OAAIoxC,mBAAmBjiC,KAAOpQ,QACzD7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,GAEvC,EAMArc,gBAAAuiC,EAaAviC,gBAAA01C,EAgBa11C,cAAc,SAACkD,EAAwBw9B,GAA4C,OAC5Fx9B,EAAKyQ,GAAK+hC,EAAcxyC,EAAKyQ,GAAIzQ,GAAQq/B,EAAcr/B,EAAMw9B,EAAE,EAOnE1gC,gBAAA,SAAgBsiC,EAAc3uB,GAC1B,SAAOhT,EAAAiiC,KAAG,GAAAp+B,OAAIixC,EAAiB,KAAAjxC,OAAIoxC,mBAAmBjiC,IAAO,CACzDmiC,cAAe,QAEvB,EAOA91C,iBAAA,SAAgB+1C,EAAepiC,GAC3B,SAAOhT,EAAAkgC,MAAI,GAAAr8B,OACJixC,EAAiB,KAAAjxC,OAAIoxC,mBAAmBjiC,GAAG,YAC9C,IACFpQ,QAAK7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,GAC1C,EAOArc,gBAAA,SAAgBg2C,EAAcriC,GAC1B,SAAOhT,EAAAkgC,MAAI,GAAAr8B,OACJixC,EAAiB,KAAAjxC,OAAIoxC,mBAAmBjiC,GAAG,WAC9C,IACFpQ,QAAK7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,GAC1C,EAOArc,iBAAA,SAAgBooC,EAAez0B,EAAY8oB,GACvC,IAAM/I,KAAQ4M,EAAAK,eAAc,CAAElE,UAC9B,SAAO97B,EAAAkgC,MAAI,GAAAr8B,OACJixC,EAAiB,KAAAjxC,OAAIoxC,mBAAmBjiC,GAAG,cAAAnP,OAAakvB,GAC3D,IACFnwB,QAAK7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIkkB,EAAAtL,QAAQ5Y,EAAK,GAC1C,EAOArc,yBAAA,SAAgBi2C,EACZtiC,EACAvM,EACAq1B,GAEA,IAAM/I,KAAQ4M,EAAAK,eAAc,CAAElE,UAC9B,SAAO97B,EAAAkgC,MAAI,GAAAr8B,OACJixC,EAAiB,KAAAjxC,OAAIoxC,mBACpBjiC,GACH,YAAAnP,OAAWoxC,mBAAmBxuC,GAAM,cAAA5C,OAAakvB,GAClD,IACFnwB,QAAK7C,EAAAwb,KAAI,SAACG,GAAI,OAAK,IAAIm5B,EAAAU,UAAU75B,EAAK,GAC5C,EAOArc,4BAAA,SAAgBm2C,EACZ5rB,EACA4b,EACAzxB,EACAgpB,GAGA,OAAO1J,EAAc,CACjB9gB,KAHJ7N,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,OAIhBsuB,gBAAcxC,EAAAyC,aAAYuS,GAC1BrS,cAAY3C,EAAAyC,gBAAYzC,EAAAiV,YAAWD,EAAOzxB,MAC3CnR,QACC7C,EAAAwb,KAAI,SAACzY,GAAC,OACF8mB,EAAQrO,IACJ,SAACvI,GAAE,OACElQ,EAAEusB,KACC,SAAC9Q,GAAC,OAAKA,EAAE5N,WAAaqC,KAAQ+pB,GAAUA,IAAWxe,EAAEvL,GAAG,EAC3D,EACR,GAGb,EAEA3T,sBAAA,SAAgBo2C,EACZziC,EACAwyB,EACAzxB,EACAgpB,GAGA,OAAO1J,EAAc,CACjB9gB,KAHJ7N,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,OAIhBsuB,gBAAcxC,EAAAyC,aAAYuS,GAC1BrS,cAAY3C,EAAAyC,gBAAYzC,EAAAiV,YAAWD,EAAOzxB,MAC3CnR,QACC7C,EAAAwb,KACI,SAACzY,GAAC,OAEE,IADAA,EAAE2Y,OAAO,SAAC3Y,GAAC,OAAKA,EAAE6N,WAAaqC,GAAMlQ,EAAEkQ,KAAO+pB,CAAM,GAAEj4B,MACrD,GAGjB,6IC9MA,IAAA7E,EAAA1C,EAAA,OAEA8L,EAAA9L,EAAA,OACAgQ,EAAAhQ,EAAA,OACAwQ,EAAAxQ,EAAA,MAEAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACAqQ,EAAArQ,EAAA,OACA2Q,EAAA3Q,EAAA,MAEAm4C,EAAAn4C,EAAA,OACAo4C,EAAAp4C,EAAA,OAwBA+P,GAtBA/P,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAmM,EAAAnM,EAAA,MAEA0Q,GADA1Q,EAAA,OACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,iBA0Da8B,uBAAoB,eAApBqP,EAAoBnP,EAAA,SAAAmP,IAAAlP,EAAAC,KAAAiP,EAAA,GAApBA,SAAoB,mBAAAhP,iBAApBgP,EAAoB,EAApBA,EAAoB,UAAA/O,EAAA,iCAApB+O,MAAoB,UAAA/O,EAAA,sCAHlB,CAAC0J,EAAAwC,qBAAoBb,QAAA,CAjB5B/K,EAAAiZ,aACA7P,EAAAiC,YACAjC,EAAAwC,oBACAqC,EAAA4B,eACAnC,EAAAuB,eACAxB,EAAAsB,mBACAxB,EAAAsB,oBACAvB,EAAAsB,gBACApB,EAAAsB,gBACAnB,EAAAuB,yBACApB,EAAA0B,kBACAnC,EAAA+B,sBACAsmC,EAAA/pC,iBACA8pC,EAAA9mC,iBACAlF,EAAA6F,gBACAtB,EAAA4B,oBAKKnB,CAAoB,mLCzGjC,IAAAhF,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,UAEAA,EAAA,oJAqBYoC,EAAAqN,yBAAA,aAAArN,CAA+C,SACjBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,iEAK/BA,EAAAqN,yBAAA,WAAArN,CAAqD,WACjDA,EAAAyuB,iBAAA,MAAgBzuB,EAAAsN,yBAChBtN,EAAAqN,yBAAA,4BACIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA8b,GAAA,IAAA7M,EAAAngB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA6O,EAAA5L,KAAAtD,EAAA,GACHjR,EAAAsN,wBAAAtN,EAAsB,4CADnBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAmD,KAAA,2BAKJvU,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,gCACJvN,EAAAsN,kEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,IAAAuC,EAAA5E,KAAA,iFAEJ9R,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA+kC,GAAA,IAAAj2B,EAAAhgB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA0O,EAAAlO,KAAAb,EAAA,GACHjR,EAAAsN,wBAAA,4CADGtN,EAAA+Q,qBAAA,UAAAc,EAAAC,KAAA,+DAGR9R,EAAAqN,yBAAA,WAAArN,CAA4D,WACxDA,EAAAyuB,iBAAA,MAAkBzuB,EAAAsN,yBAClBtN,EAAAqN,yBAAA,sBAAArN,CAAqC,cAG7BA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA6M,GAAA,IAAAC,EAAAhe,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA0M,EAAAoR,OAAAne,EAAA,GAFJjR,EAAAsN,wBAAAtN,IAIE,4CAFEA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA4Q,EAAAyN,OAAA,+DAvBpBpvB,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,EAAAmkC,EAAA,aAMAl2C,EAAAqN,yBAAA,UAAArN,CAAuB,WACnBA,EAAAyuB,iBAAA,MAAgBzuB,EAAAsN,yBAChBtN,EAAA+R,qBAAA,EAAAokC,EAAA,cAGAn2C,EAAA+R,qBAAA,EAAAqkC,EAAA,uBAIJp2C,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAskC,EAAA,cAUAr2C,EAAAqN,yBAAA,OAAArN,EAAAyuB,iBAAA,OAIAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAAqD,gBAC3BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqF,GAAA,IAAAC,EAAAxW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAkF,EAAA8/B,UAAS,GAAxCt2C,EAAAyuB,iBAAA,OAAsDzuB,EAAAsN,wBAAAtN,GAE9DA,EAAA0hB,iCAAA,2CAnCyC1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAA0gC,cAQvBv2C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA8E,EAAA2gC,cAIDx2C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAA2gC,cAI+Bx2C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA8E,EAAA4gC,aAcxCz2C,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA,IAAA9Y,EAAAoe,MAAA9uB,OAAA,OAAAnF,CAAI6V,EAAA6gC,UAAJ12C,EAAI,MAAA6V,EAAAiB,MAAA,KAAAjB,EAAAiB,MAAAvB,gBAAA,MAAAM,EAAAiB,MAAA,KAAAjB,EAAAiB,MAAAvD,OAAJvT,EAAA6uB,sBAAA,8BAOJ7uB,EAAAqN,yBAAA,aACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAavN,EAAAsN,wBAAAtN,2CADHA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eACV/Q,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAmU,EAAAjF,QAAA,EAaNzjB,4BAAyB,eAAzBi3C,EAAyB,WA4BlC,SAAAA,EACqCC,EACzB51C,GAA0BnB,EAAAC,KAAA62C,GADD72C,KAAA82C,QACzB92C,KAAAkB,YA7BKlB,KAAA8uB,MAAQ,IAAI7kB,EAAAsV,aAEbvf,KAAAm0B,MAAQn0B,KAAK82C,MAAM3iB,OAAS,GAErCn0B,KAAAgS,KAAOhS,KAAK82C,MAAM9kC,KAClBhS,KAAAyU,KAAOzU,KAAK82C,MAAMriC,KAETzU,KAAA02C,aAAe12C,KAAK82C,MAAMJ,aAEnC12C,KAAAsvB,OAAStvB,KAAK82C,MAAMxnB,OAEXtvB,KAAAgX,MAAQhX,KAAK82C,MAAM9/B,KAmBhC,CAAClX,SAAA+2C,EAAA,EAAAp1C,IAAA,YAAAkE,IAfJ,WACI,OAAO3F,KAAKm0B,MAAMrY,IAAI,SAACzY,GAAC,OAAKA,EAAEoQ,IAAI,GAAEoB,KAAK,KAC9C,GAAC,CAAApT,IAAA,cAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,wBAChC,GAAC,CAAAlE,IAAA,eAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,gCAChC,GAAC,CAAAlE,IAAA,UAAAC,MAOM,WACH1B,KAAKqjB,QAAU,6BACfrjB,KAAK8uB,MAAMrP,KAAK,CAAE6P,OAAQ,QAC9B,KAACunB,CAAA,CApCiC,GAAzBA,SAAyB,mBAAA52C,iBAAzB42C,GAAyB32C,EAAAwI,4BA6BtBsF,EAAAsuB,iBAAep8B,EAAAwI,4BAAAC,EAAAC,iBAAA,EA7BlBiuC,EAAyB,UAAA32C,EAAA,kCAAzB22C,EAAyB1tC,UAAA,wCAAAwW,QAAA,CAAAmP,MAAA,SAAAxlB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kBA5DjB0iB,UAAAC,MAAAC,EAAA,mUAeWF,UAAAG,MAAAD,EAAA,2LAmBRF,UAAAI,MAAAF,EAAA,kKACK,gBACT,gBACA,sGAI2CF,UAAAM,MAAAJ,EAAA,wHAhC/BF,UAAAO,MAAAL,EAAA,4JAgBAF,UAAA+mB,MAAA7mB,EAAA,oTA1BxBhwB,EAAAqN,yBAAA,WAAArN,CAAQ,QACJA,EAAAyuB,iBAAA,KAAwBzuB,EAAAsN,yBACxBtN,EAAAyJ,oBAAA,WACAzJ,EAAA+R,qBAAA,EAAA+kC,EAAA,gBAGJ92C,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAglC,EAAA,uBAsCA/2C,EAAA+R,qBAAA,EAAAilC,EAAA,yBAAAh3C,EAAAkmB,yEA1CmClmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAIpBnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAAnjB,CAAgB,WAAAqmB,EAAA,uXAsD1BswB,CAAyB,6LClFtC,IAAA5sC,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKAq5C,GAJAr5C,EAAA,OAEAA,EAAA,OAEAA,EAAA,sNAmBwBoC,EAAAqN,yBAAA,qBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAimC,EAAAl3C,EAAAkR,wBAAA8b,GAAAnP,UAAAsC,EAAAngB,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAA6O,EAAAg3B,WAAAD,EAAAjmC,GAAuB,GAGxCjR,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAA,0DALItN,EAAA+Q,qBAAA,WAAAc,EAAAyK,mBAAAtc,EAAA0R,0BAAA,EAAA0lC,IAAArxC,SAAAmxC,GAAAl3C,CAAmD,iBAAAA,EAAA0R,0BAAA,EAAA2lC,IAInDr3C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAypC,EAAA,+BATZl3C,EAAAqN,yBAAA,WAAArN,CAAoD,cAC7BA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACvBtN,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,EAAAulC,EAAA,uBAQJt3C,EAAAsN,wBAAAtN,4CAPwBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAU,EAAAvI,SAAA,0BAYxBlJ,EAAAyJ,oBAAA,6DAEIzJ,EAAA+Q,qBAAA,MAAAwmC,EAAAjsB,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAIAvrB,EAAAyJ,oBAAA,yEA3BZzJ,EAAAqN,yBAAA,WAKIrN,EAAA+R,qBAAA,EAAAylC,EAAA,aAaAx3C,EAAAqN,yBAAA,WAGIrN,EAAA+R,qBAAA,EAAA0lC,EAAA,cAKAz3C,EAAA+R,qBAAA,EAAA2lC,EAAA,0BAAA13C,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA4B,YAEpBA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAgDvN,EAAAsN,wBAAAtN,GAEvDA,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA+E,GAAA4H,UAAA3H,EAAAlW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4E,EAAAyhC,gBAAAJ,GAAqB,GAE9Bv3C,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA+E,GAAA4H,UAAAzH,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAAwhC,eAAAL,GAAoB,GAE7Bv3C,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAO,EAAAxW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAkF,EAAA2hB,gBAAA3hB,EAAAyiB,OAAsB,GAE/Bj5B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFA7EXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAAjJ,SAAA,KAAAiJ,EAAAjJ,SAAA/D,QAiBGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAwmC,EAAAjsB,OAAA,KAAAisB,EAAAjsB,OAAAnmB,OAAAnF,CAA2B,WAAA8hB,GAa5B9hB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA8pC,EAAAhkC,MAAA,YAIGvT,EAAAwN,oBAAA,GAAAxN,EAAAiU,6BAAA,MAAAsjC,EAAA3jC,KAAA,KAAA2jC,EAAA3jC,KAAA2B,gBAAA,MAAAgiC,EAAA3jC,KAAA,KAAA2jC,EAAA3jC,KAAAL,OAoCPvT,EAAAwN,oBAAA,IAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAkmB,UAAAtyB,SAAA,MAAAoM,EAAA8mB,MAAA,KAAA9mB,EAAA8mB,MAAA5lB,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAkmB,UAAAtyB,SAAA,MAAAoM,EAAA8mB,MAAA,KAAA9mB,EAAA8mB,MAAA5lB,IAAA,+BApF9B,IAAMilB,EAAuB,GAqHhB54B,yBAAsB,eAAtBm4C,EAAsB,WAc/B,SAAAA,EACY72C,EACAkX,GAAkB,IAAA9W,EAAAtB,KAAAD,EAAAC,KAAA+3C,GADlB/3C,KAAAkB,YACAlB,KAAAoY,UAfIpY,KAAAoJ,SAAqB,GAC9BpJ,KAAAg4C,UAAY,EACZh4C,KAAA04B,MAAwB,GACxB14B,KAAA24B,UAAW,EACX34B,KAAAwc,kBAA8B,GAoDrBxc,KAAA44B,iBAAmB,SAACC,GAA+B,OAC9Dv3B,EAAKw3B,UAAYD,CAAE,EAER74B,KAAA+4B,kBAAoB,SAACF,GAA+B,OAC/Dv3B,EAAK03B,SAAWH,CAAE,EACP74B,KAAAi5B,iBAAmB,SAACtP,GAAU,OAAMroB,EAAKq3B,SAAWhP,CAAC,CA7ClE,CAEH7pB,SAAAi4C,EAAA,EAAAt2C,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAcwxC,EAAAc,eAAiBzf,CACzD,GAAC,CAAA/2B,IAAA,kBAAAC,MAQM,WAAe,IAAAyD,EAAAnF,KACZwY,EAAMxY,KAAKoY,QAAQrD,KAAKoiC,EAAAe,yBAA0B,CACpDp1C,KAAM,CACF41B,MAAO14B,KAAK04B,MACZ3V,QAAS,CAAEjD,SAAU9f,KAAKg4C,cAGlCx/B,EAAII,cAAc3F,UAAU,SAACylB,GACpBA,IAAOA,EAAQlgB,EAAIM,kBAAkBuG,UAC1Cla,EAAKk0B,SAASX,EAClB,EACJ,GAEA,CAAAj3B,IAAA,iBAAAC,MACO,SAAeib,GAClB3c,KAAKq5B,SAASr5B,KAAK04B,MAAM1c,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAOoJ,EAAMpJ,EAAE,GAC5D,GAEA,CAAA9R,IAAA,WAAAC,MAIO,SAASw3B,GACZl5B,KAAK04B,MAAQQ,EACTl5B,KAAK84B,WAAW94B,KAAK84B,UAAU94B,KAAK04B,MAC5C,GAGA,CAAAj3B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK04B,MAAQh3B,GAAS,EAC1B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBib,GACnB,IAAM6c,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAAS0W,EAAMpJ,IAEvCvT,KAAKkB,UAAUw4B,gBAAgByd,EAAAc,aAD/Bxe,EAC2C,GAAAr1B,OAAA+e,EACpCqW,GAAQ,CACX7c,EAAMpJ,KAKNimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAMsZ,EAAMpJ,EAAE,GAGjD,KAACwkC,CAAA,CA9E8B,GAAtBA,SAAsB,mBAAA93C,iBAAtB83C,GAAsB73C,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAqQ,WAAA,EAAtB6+B,EAAsB,UAAA73C,EAAA,kCAAtB63C,EAAsB5uC,UAAA,sBAAAuW,OAAA,CAAAtW,SAAA,YAAAA,SAAA,CAAAlJ,EAAA4vB,6BARpB,CACP,CACIpjB,QAAS9C,EAAA+vB,kBACTC,eAAa3vB,EAAA4vB,YAAW,kBAAMke,CAAsB,GACpDje,OAAO,MAEdxwB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,8SAdsB0iB,UAAAC,MAAAC,EAAA,szBA3CKF,UAAAG,MAAAD,EAAA,2JAAc,uFAYdF,UAAAI,MAAAF,EAAA,6JAAe,6cAjEvChwB,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAAkmC,EAAA,cAqFJj4C,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAAmuC,iBAAiB,GAE1B33C,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAmBzuB,EAAAsN,wBAAAtN,KAG3BA,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,gCAjGyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgvB,iHA4GpBqf,CAAsB,qLChInC,IAAA9tC,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,UACAA,EAAA,mIAKQoC,EAAAqN,yBAAA,UAAArN,CAAwD,UACpDA,EAAAyuB,iBAAA,KAAmDzuB,EAAAsN,yBACnDtN,EAAAqN,yBAAA,WAAArN,CAAqC,UAArCA,CAAqC,WAE7BA,EAAAg4B,sBAAA,KAESh4B,EAAAyJ,oBAAA,UACTzJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAAArN,CAGC,wBACoCA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,yBAAkCrN,EAAAuN,iBAAA,SAAEvN,EAAAsN,wBAAAtN,KAG5CA,EAAAqN,yBAAA,WAAArN,CAAgC,YAC5BA,EAAAg4B,sBAAA,OAEah4B,EAAAyJ,oBAAA,WACbzJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACAtN,EAAAqN,yBAAA,wBAAArN,CAA4D,yBACvBA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,yBAAkCrN,EAAAuN,iBAAA,SAAEvN,EAAAsN,wBAAAtN,KAG5CA,EAAAqN,yBAAA,YAAArN,CAA2B,YACvBA,EAAAg4B,sBAAA,OAEah4B,EAAAyJ,oBAAA,WACbzJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACAtN,EAAAqN,yBAAA,wBAAArN,CAGC,yBACoCA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,yBAAkCrN,EAAAuN,iBAAA,SAAEvN,EAAAsN,wBAAAtN,OAIhDA,EAAAqN,yBAAA,eAAArN,CAAqD,gBAC3BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4Q,GAAA,IAAAsG,EAAApoB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8W,EAAA8vB,SAAQ,GAAvCl4C,EAAAyuB,iBAAA,OAAoDzuB,EAAAsN,wBAAAtN,GAExDA,EAAAqN,yBAAA,eAAArN,CAA8C,WAChBA,EAAAuN,iBAAA,YAAKvN,EAAAsN,wBAAAtN,IAAI,2CA1CrBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAoB,EAAA3B,MAUYxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YACA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YASA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YACA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAYA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YACA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mCAY9B/Q,EAAAqN,yBAAA,YAAArN,CAAoC,UAChCA,EAAAyuB,iBAAA,MAKAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAAArN,CAA8C,UAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,MAoBtCN,8BAA2B,eAA3B6uC,EAA2B,WA/ExC,SAAAA,IAAA1uC,EAAAC,KAAAyuC,GAgFqBzuC,KAAA8uB,MAAQ,IAAI7kB,EAAAsV,aAEtBvf,KAAA0Q,KAAO,IAAI9G,EAAA60B,UAAU,CACxB4Z,UAAW,IAAIzuC,EAAA80B,aAAY,GAC3B4Z,OAAQ,IAAI1uC,EAAA80B,aAAY,GACxB6Z,QAAS,IAAI3uC,EAAA80B,aAAY,KAkBhC5+B,SAAA2uC,EAAA,EAAAhtC,IAAA,SAAAC,MAdU,WAAM,IAAAJ,EAAAtB,KACTA,KAAK0Q,KAAKsY,mBAENoB,OAAOC,KAAKrqB,KAAK0Q,KAAKhP,OAAOkuB,KACzB,SAACnuB,GAAG,OACyB,IAAzBH,EAAKoP,KAAKhP,MAAMD,IACS,SAAzBH,EAAKoP,KAAKhP,MAAMD,EAAe,GAGvCzB,KAAKw4C,SAAU,EAGnBx4C,KAAK8uB,MAAMrP,KAAK,CAAE6P,OAAQ,QAC9B,KAACmf,CAAA,CAvBmC,GAA3BA,SAA2B,mBAAAxuC,iBAA3BwuC,EAA2B,EAA3BA,EAA2B,UAAAvuC,EAAA,kCAA3BuuC,EAA2BtlC,UAAA,0BAAAwW,QAAA,CAAAmP,MAAA,SAAAxlB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,gHA3EC0iB,UAAAC,MAAAC,EAAA,2JAGTF,UAAAG,MAAAD,EAAA,4KAEH,iBAAO,6EAWJF,UAAAI,MAAAF,EAAA,qLAEC,kBAAO,qFAQRF,UAAAM,MAAAJ,EAAA,gLAEC,kBAAO,qJAYsBF,UAAAO,MAAAL,EAAA,oNAQ1BF,UAAA+mB,MAAA7mB,EAAA,+VAjD5BhwB,EAAA+R,qBAAA,EAAAwmC,EAAA,cA+CAv4C,EAAA+R,qBAAA,EAAAymC,EAAA,yBAAAx4C,EAAAkmB,yEA/CMlmB,EAAA+Q,qBAAA,QAAAvH,EAAA8uC,QAAAt4C,CAAgB,WAAAiuB,EAAA,gZA4EjBsgB,CAA2B,4KCnFxC,IAAAxkC,EAAAnM,EAAA,OASA+oC,EAAA/oC,EAAA,+FA6BgBoC,EAAAyJ,oBAAA,+DACIzJ,EAAA+Q,qBAAA,SAAAqX,EAAAlV,KAAAoY,OAAA,2BA6DAtrB,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,wBAAAtN,2BAAVA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAwkC,EAAA,sDAV7Cz4C,EAAAqN,yBAAA,eAAArN,CAIC,WACGA,EAAAyuB,iBAAA,MAA+CzuB,EAAAsN,yBAC/CtN,EAAA+R,qBAAA,EAAA2mC,EAAA,cAMJ14C,EAAAsN,kEALyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAA8B,KAAAhK,UAAAlJ,EAAA0R,0BAAA,EAAAinC,GAAA,oFAMzB34C,EAAAqN,yBAAA,gBAKIrN,EAAAyJ,oBAAA,wBAMJzJ,EAAAsN,kEAJQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,MAAA2F,EAAAg5B,QAAA1vC,CAAe,WAAA0W,EAAAxN,SAAflJ,CAAe,UAAAA,EAAA0R,0BAAA,EAAAknC,GAAA,+DAtF/B54C,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,eASIrN,EAAA+R,qBAAA,EAAA8mC,EAAA,wBAKA74C,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA7M,EAAAngB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6O,EAAArY,MAAAyX,OAAY,GAGrBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAAhN,EAAAhgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0O,EAAA8Z,UAAAva,OAAgB,GAGzBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,UAAArN,CAEC,eAFDA,CAEC,WAGWA,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAGC,YACmCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBACvCtN,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAmBzuB,EAAAsN,wBAAAtN,GAEvBA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAgDvN,EAAAsN,wBAAAtN,KAG3DA,EAAA+R,qBAAA,GAAA+mC,EAAA,kBAaA94C,EAAA+R,qBAAA,GAAAgnC,EAAA,kBAYJ/4C,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAEC,gBAOOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA9W,EAAAlW,EAAAqR,0BAAA6E,SAAA6jB,QAAA7jB,EAAA6jB,OAA2B/5B,EAAAsR,sBAAA4E,EAAA8jB,aAAAza,KAAArJ,EAAA6jB,QAAyB,GAEpD/5B,EAAAqN,yBAAA,YAAArN,CAA8C,kBACfA,EAAAuN,iBAAA,IAEzBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAGAzuB,EAAAsN,wBAAAtN,OAIhBA,EAAA0hB,iCAAA,2CA9GQ1hB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAe,KAAAoY,OAAA,KAAAnZ,EAAAe,KAAAoY,OAAAnmB,OAAAnF,CAAqC,aAAAmS,EAAAe,KAAAoY,OAAA,KAAAnZ,EAAAe,KAAAoY,OAAAnmB,OAArCnF,CAAqC,iBAAAmS,EAAAe,KAAAoY,QAAAnZ,EAAAe,KAAAoY,OAAAnmB,QAArCnF,CAAqC,eAAAmS,EAAAe,KAAAoY,QAAAnZ,EAAAe,KAAAoY,OAAAnmB,QAArCnF,CAAqC,0BAAAmS,EAAAe,KAAAoY,QAAAnZ,EAAAe,KAAAoY,OAAAnmB,SAQhCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAAe,KAAAoY,OAAA,KAAAnZ,EAAAe,KAAAoY,OAAAnmB,QAgBDnF,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAAvN,EAAA8nB,IAAAj6B,CAAyB,gBAAAmS,EAAA8nB,KAKfj6B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA8nB,IAAA,8BAUNj6B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAAe,KAAAqC,cAAApD,EAAAe,KAAAK,MAAApB,EAAAe,KAAAG,GAAA,KAeIrT,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,IAAA0E,EAAAe,KAAAqC,cAAApD,EAAAe,KAAAK,MAAApB,EAAAe,KAAAG,GAAA,KAKDrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,6BAAA,MAAA9B,EAAAe,KAAAU,KAAA,KAAAzB,EAAAe,KAAAU,KAAA2B,gBAAA,MAAApD,EAAAe,KAAAU,KAAA,KAAAzB,EAAAe,KAAAU,KAAAL,OAKNvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAAe,KAAAhK,SAAA,KAAAiJ,EAAAe,KAAAhK,SAAA/D,QAcAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAAo1B,UAiBDvnC,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAvN,EAAA4nB,QAK+B/5B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA4nB,OAAA,gBAM3B/5B,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAxc,EAAA4nB,QAAA/5B,EAAA6uB,sBAAA,2BAMZ7uB,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,IAKHN,uBAAoB,eAApBs5C,EAAoB,WA/IjC,SAAAA,IAAAn5C,EAAAC,KAAAk5C,GAiJoBl5C,KAAAm6B,KAAe,EACfn6B,KAAAi6B,QAAkB,EAClBj6B,KAAAynC,UAAoB,EAEnBznC,KAAAgI,MAAQ,IAAIiC,EAAAsV,aACZvf,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAChBvf,KAAAk6B,aAAe,IAAIjwB,EAAAsV,aAE7Bvf,KAAA4vC,QAAU,GACV5vC,KAAAoJ,SAA4B,GAiBtCtJ,SAAAo5C,EAAA,EAAAz3C,IAAA,cAAAC,MAfU,SAAY24B,GACXA,EAAQjnB,MAAQpT,KAAKoT,MACrBpT,KAAKm5C,eAEb,GAAC,CAAA13C,IAAA,gBAAAC,MAEO,WACJ1B,KAAK4vC,QAAU5vC,KAAKoT,KAAKU,KAAKJ,OAC9B1T,KAAKoJ,SAAW,CACZ,CACIrD,SAAU/F,KAAKoT,KAAKM,QAAU1T,KAAKoT,KAAKG,GACxCsU,QAASgf,EAAA/e,iBAGrB,KAACoxB,CAAA,CA3B4B,GAApBA,SAAoB,mBAAAj5C,iBAApBi5C,EAAoB,EAApBA,EAAoB,UAAAh5C,EAAA,kCAApBg5C,EAAoB/vC,UAAA,mBAAAuW,OAAA,CAAAtM,KAAA,OAAA+mB,IAAA,MAAAF,OAAA,SAAAwN,SAAA,YAAA9nB,QAAA,CAAA3X,MAAA,QAAAgyB,UAAA,YAAAE,aAAA,gBAAA9wB,SAAA,CAAAlJ,EAAAo6B,gCAAAhxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAAyiB,aA1EDC,UAAAC,MAAAC,EAAA,8FAuDJF,UAAAG,MAAAD,EAAA,81CADIF,UAAAI,MAAAF,EAAA,0FACJG,mHArC6BL,UAAAM,MAAAJ,EAAA,4iBAiDFF,UAAAO,MAAAL,EAAA,uJAxH/ChwB,EAAA+R,qBAAA,EAAAmnC,EAAA,wBAmHAl5C,EAAA+R,qBAAA,EAAAonC,EAAA,yBAAAn5C,EAAAkmB,yEAnHelmB,EAAA+Q,qBAAA,OAAAvH,EAAA0J,KAAAlT,CAAY,WAAAiuB,EAAA,wUA+HtB+qB,CAAoB,uNC3JjC,IAAAjvC,EAAAnM,EAAA,OAEA0C,GADA1C,EAAA,OACAA,EAAA,QAEAw7C,EAAAx7C,EAAA,MAEAizB,GADAjzB,EAAA,OACAA,EAAA,sIA0EYoC,EAAAqN,yBAAA,WAAArN,CAIC,OACMA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,uBAAAuoC,EAAAr5C,EAAAkR,wBAAA4Q,GAAAjE,UAAAuK,EAAApoB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8W,EAAA+uB,WAAAkC,GAAiB,GAAM,GAEhCr5C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,2BAR3BA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAolC,EAAA,+DAWPr5C,EAAAqN,yBAAA,WAAArN,CAAqD,UACjDA,EAAAyuB,iBAAA,MAA0BzuB,EAAAsN,yBAC1BtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqd,GAAA,IAAA7X,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAA/D,WAAA,CAAA2mC,UAAuB,IAAQ,GAExCt5C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,6BAMjCN,8BAA4B,eAA5B65C,EAA4B,SAAA54C,GAAAC,EAAA24C,EAAA54C,GAAA,IAAAG,EAAAC,EAAAw4C,GAmBrC,SAAAA,EACYC,EACA3/B,GAA0B,IAAAzY,EAAAvB,SAAAC,KAAAy5C,IAElCn4C,EAAAN,EAAAO,KAAAvB,OAHQ05C,UACAp4C,EAAAyY,SApBIzY,EAAAq4C,KAAuB,OACtBr4C,EAAAs4C,WAAa,IAAI3vC,EAAAsV,aAClBje,EAAAyhB,QAAUzhB,EAAKyY,OAAOgJ,QACtBzhB,EAAAuR,WAAa,SAACyQ,GAAC,OAAKhiB,EAAKyY,OAAOlH,WAAWyQ,EAAE,EAC7ChiB,EAAA+1C,WAAa,SAAChgB,EAAGnS,GAAC,OAAK5jB,EAAKyY,OAAOs9B,WAAWhgB,EAAGnS,EAAE,EAYnD5jB,EAAAu4C,WAAa,kBAAMv4C,EAAKo4C,QAAQ3kC,KAAKukC,EAAAQ,qBAAqB,EAACx4C,CAO3E,CAACxB,SAAA25C,EAAA,EAAAh4C,IAAA,QAAAkE,IAjBD,WACI,OAAO3F,KAAK+Z,OAAOrJ,KAAKhP,MAAMsQ,IAClC,GAAC,CAAAvQ,IAAA,MAAAkE,IAED,WACI,IAAAo0C,EAAoC/5C,KAAK+Z,OAAOrJ,KAAKhP,MAA7CsQ,EAAI+nC,EAAJ/nC,KAAMsC,EAAQylC,EAARzlC,SACd,OAD+BylC,EAAPlpB,SACpBA,EAAgBE,EAAA4C,UAAS3hB,GACtBA,EAAkB,GAAXsC,EAAgB,GAClC,KAACmlC,CAAA,CAfoC,CAAQj5C,EAAAiI,cAApCgxC,SAA4B,mBAAAx5C,iBAA5Bw5C,GAA2Bv5C,EAAAwI,4BAAAC,EAAA2M,gBAAApV,EAAAwI,4BAAAG,EAAAkI,oBAAA,EAA3B0oC,EAA4B,UAAAv5C,EAAA,kCAA5Bu5C,EAA2BtwC,UAAA,2BAAAuW,OAAA,CAAAi6B,KAAA,QAAAh6B,QAAA,CAAAi6B,WAAA,cAAAxwC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,oLAlE3B0iB,UAAAC,MAAAC,EAAA,8MAYIF,UAAAG,MAAAD,EAAA,iLAWAF,UAAAI,MAAAF,EAAA,0ZA6BUF,UAAAM,MAAAJ,EAAA,uNA/DnBhwB,EAAAqN,yBAAA,cAAArN,CAGC,cAMOA,EAAA8Q,qBAAA,0BAAStH,EAAAmwC,YAAY,GALzB35C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAA+B,cAOvBA,EAAA8Q,qBAAA,mBAAAtH,SAAAiwC,KAAgB,MAAOjwC,EAAAkwC,WAAAn6B,KAAA/V,EAAAiwC,KAAqB,GANhDz5C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAAtH,SAAAiwC,KAAgB,OAAQjwC,EAAAkwC,WAAAn6B,KAAA/V,EAAAiwC,KAAqB,GANjDz5C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,cAAArN,CAAyD,WAE/BA,EAAAuN,iBAAA,kCAAgCvN,EAAAsN,yBACtDtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAEJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA+nC,EAAA,6CAgBA95C,EAAA+R,qBAAA,GAAAgoC,EAAA,6CAYJ/5C,EAAAsN,gCAtDYtN,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,kBAAAlW,EAAAiwC,MAWAz5C,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,mBAAAlW,EAAAiwC,MAUcz5C,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAjU,EAAAmU,sBAAA,KAAA3K,EAAAq8B,MAAA,eAElB7lC,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAA3f,EAAAmU,sBAAA,MAAA3K,EAAAq8B,MAAA,wBAAA7lC,EAAAmU,sBAAA,MAAA3K,EAAAub,IAAA,kBAMiB/kB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAyX,EAAAxoB,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAA2F,EAAAtf,WAAAlJ,EAAA0R,0BAAA,GAAAinC,IAaH34C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAipC,EAAAh6C,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAm3B,EAAAV,+iBAejBC,CAA4B,uLC9GzC37C,EAAA,OACAA,EAAA,OADA,IAEAizB,EAAAjzB,EAAA,UAEAA,EAAA,OACAA,EAAA,iPAmBgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAU,GAAA,IAAAC,GAAA7R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAO,GAAA/J,QAAO,GAEhB9H,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,yBAAmBvN,EAAAsN,wBAAAtN,EAAW,2BA8BhCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAkpC,GAEAj6C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAwsC,EAAA1kC,cAAA0kC,EAAA1mC,KAAA,2GArBhBvT,EAAAqN,yBAAA,WAAArN,CAGC,WACGA,EAAAyuB,iBAAA,MAAoBzuB,EAAAsN,yBACpBtN,EAAAqN,yBAAA,sBAAArN,CAAoD,mBAI5CA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAA+kC,GAAA,IAAAj2B,GAAAhgB,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA0O,GAAAlK,SAAA7E,GAAA,EAAAjR,CAAsB,yBAAAiR,IAAAjR,EAAAkR,wBAAA+kC,GAAA,IAAAj4B,GAAAhe,EAAAqR,0BAAA,OAG9BrR,EAAAsR,sBAAA0M,GAAArL,WAAA,CAAAm3B,QAAA,MAAA74B,GAAA,KAAAA,GAAAoC,KAGlB,GAE0BrT,EAAA+R,qBAAA,EAAAmoC,EAAA,mDAMJl6C,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAC,SAAA9V,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAyoC,IASFn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAC,EAAAG,WAAA,2BA0BpBhW,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAqpC,EAAA/mC,IAEArT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA2sC,EAAA7kC,cAAA6kC,EAAA7mC,KAAA,mEArBhBvT,EAAAqN,yBAAA,WAAArN,CAGC,WACUA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACZtN,EAAAqN,yBAAA,sBAAArN,CAAqC,mBAK7BA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAAm2B,GAAA,IAAAhpB,GAAAre,EAAAqR,0BAAA,OAERrR,EAAAsR,sBAAA+M,GAAA1L,WAAA,CAAAm3B,QAAA74B,IAAAoN,GAAAvI,SAAAzC,KAGlB,GAE0BrT,EAAA+R,qBAAA,EAAAsoC,EAAA,mDAMJr6C,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAqE,SAAA9V,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAyoC,IASFn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAnE,EAAAkR,QAAA,wBA4ChC3iB,EAAAqN,yBAAA,WAAArN,CAA+D,qBAC3DA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,4FA0BJA,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,qBAIIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,IAAAqpC,GAAAt6C,EAAAkR,wBAAAqpC,GAAA18B,UAAArG,GAAAxX,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAkG,GAAA2/B,WAAAmD,GAAArpC,IAAwB,iCAE5CjR,EAAAsN,wBAAAtN,EAAe,8DAPqBA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAqmC,GAEjCt6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAwN,GAAAve,EAAA4V,sBAAA,IAAA4kC,GAAA33B,UAAA,KAAAtE,GAAArV,WAAAlJ,EAAA0R,0BAAA,EAAA+oC,IAAA10C,SAAAu0C,GAAAt6C,CAEC,iBAAAA,EAAA0R,0BAAA,EAAAyoC,GAAA,2BAdbn6C,EAAAqN,yBAAA,eAAArN,CAIC,UACGA,EAAAyuB,iBAAA,MAAyCzuB,EAAAsN,yBACzCtN,EAAA+R,qBAAA,EAAA2oC,EAAA,4CAaJ16C,EAAAsN,iEAZyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAxE,EAAAlI,UAAA,+DAc7BlJ,EAAAqN,yBAAA,WAAArN,CAGC,eAMOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAypC,GAAA,IAAA35B,GAAAhhB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0P,GAAAlZ,QAAO,GALpB9H,EAAAyuB,iBAAA,MASAzuB,EAAAsN,wBAAAtN,EAAS,EAIRN,uBAAoB,eAApBk6C,EAAoB,WAuC7B,SAAAA,EAEYgB,EACA/gC,EACA5Y,GACAD,IAA0B,IAAAI,GAAAtB,KAAAD,EAAAC,KAAA85C,GAH1B95C,KAAA86C,cACA96C,KAAA+Z,SACA/Z,KAAAmB,QACAnB,KAAAkB,aA3CLlB,KAAA+6C,WAAY,EACH/6C,KAAA+iB,QAAU/iB,KAAK+Z,OAAOgJ,QACtB/iB,KAAAoJ,SAAWpJ,KAAK+Z,OAAO3Q,SACvBpJ,KAAAkW,UAAYlW,KAAKmB,KAAK65C,iBACtBh7C,KAAA6iB,OAAS7iB,KAAKmB,KAAK85C,cACnBj7C,KAAA0Q,KAAO1Q,KAAK+Z,OAAOrJ,KASnB1Q,KAAAgI,MAAQ,kBAAM1G,GAAKw5C,YAAY/7B,SAAS,EACxC/e,KAAA6S,WAAa,SAACyQ,IAAC,OAAKhiB,GAAKyY,OAAOlH,WAAWyQ,GAAE,EAC7CtjB,KAAAq3C,WAAa,SAAChgB,GAAGnS,GAAC,OAAK5jB,GAAKyY,OAAOs9B,WAAWhgB,GAAGnS,EAAE,EACnDllB,KAAAk7C,SAAW,SAAC5lB,IAAO,EA4B/Bt1B,KAAK+6C,YAAc/6C,KAAK86C,WAC5B,CAACh7C,SAAAg6C,EAAA,EAAAr4C,IAAA,WAAAkE,IAvCD,WACI,OAAO3F,KAAKmB,KAAK6U,QACrB,EAAC0F,IACD,SAAoB1C,GAChBhZ,KAAKmB,KAAK6U,SAAWgD,CACzB,GAAC,CAAAvX,IAAA,qBAAAkE,IAOD,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,+BAChC,GAAC,CAAAlE,IAAA,gBAAAkE,IACD,WACI,OACI3F,KAAKm7C,sBACHn7C,KAAKkB,UAAUyE,IAAI,0BAE7B,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,SAAOorB,EAAA4C,aACH5C,EAAAqqB,SACI7gC,KAAKgX,MACLvxB,KAAKkB,UAAUyE,IAAI,+BAAiC,IAGhE,KAACm0C,CAAA,CArC4B,GAApBA,SAAoB,mBAAA75C,iBAApB65C,GAAoB55C,EAAAwI,4BAAAC,EAAAsW,kBAAA,GAAA/e,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAL,iBAAA,EAApBkxC,EAAoB,UAAA55C,EAAA,kCAApB45C,EAAoB3wC,UAAA,mBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,6RAhK2B0iB,UAAAC,MAAAC,EAAA,0SAQPF,UAAAG,MAAAD,EAAA,6KA0DrBF,UAAAI,MAAAF,EAAA,gMAYIF,UAAAM,MAAAJ,EAAA,8JASAF,UAAAO,MAAAL,EAAA,sOAmBiBF,UAAA+mB,MAAA7mB,EAAA,oGACjC,4EAGyCF,UAAAqrB,MAAAnrB,EAAA,oGACrC,uTAjGQF,UAAAsrB,MAAAprB,EAAA,gcAsFiCF,UAAAurB,MAAArrB,EAAA,uHA2BZF,UAAAwrB,MAAAtrB,EAAA,iaA2BxCF,UAAAyrB,MAAAvrB,EAAA,iJAzKLhwB,EAAAqN,yBAAA,UAAArN,CAEC,WAEOA,EAAA+R,qBAAA,EAAAypC,EAAA,gBAUJx7C,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA4DzuB,EAAAsN,yBAC5DtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAGC,cAHDA,CAGC,UAEOA,EAAAyuB,iBAAA,KAA4CzuB,EAAAsN,yBAE5CtN,EAAA+R,qBAAA,GAAA0pC,EAAA,6CA2BAz7C,EAAA+R,qBAAA,GAAA2pC,EAAA,6CA4BA17C,EAAAqN,yBAAA,YAAArN,CAAkC,YAC9BA,EAAAyuB,iBAAA,OAAgBzuB,EAAAsN,yBAChBtN,EAAAqN,yBAAA,sBAKIrN,EAAAuN,iBAAA,uCACJvN,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,YAEjCA,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,yBACtBtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAgH,KAAAe,WAAA,CAAAO,KAAAb,IAAiC,GAErDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAA0B,YACtBA,EAAAyuB,iBAAA,OAAoBzuB,EAAAsN,yBACpBtN,EAAAyJ,oBAAA,0BAQJzJ,EAAAsN,wBAAAtN,GAGJA,EAAA+R,qBAAA,GAAA4pC,EAAA,cAKJ37C,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAAArN,CAAqC,WACjCA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA+B,aAC3BA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAmJ,WAAA,CAAA2mC,SAAAroC,IAAgC,kCAGrDjR,EAAAsN,wBAAAtN,KAGRA,EAAA+R,qBAAA,GAAA6pC,EAAA,iDAoBJ57C,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA8pC,EAAA,qBArJa77C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAqxC,WAWT76C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,MAMSxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAgF,GAAA/V,EAAA4V,sBAAA,MAAApM,EAAAwM,YAAA,KAAAD,GAAA5Q,QA2BAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAqB,GAAApS,EAAA4V,sBAAA,MAAApM,EAAAmZ,SAAA,KAAAvQ,GAAAjN,QAAA,GAgCGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,KAAAvH,EAAAsyC,UAEA97C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAA4V,sBAAA,8BASI5V,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgH,KAAAhP,MAAAsQ,KAAA9R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAyoC,IAS3Bn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAgrC,GAAAvyC,EAAAgH,KAAA/K,IAAA,cAAAs2C,GAAAv6C,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAStCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA6I,eASNrS,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA4V,sBAAA,4BAAA5V,EAAA6uB,sBAAA,IAII7uB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA4V,sBAAA,gCAAA5V,EAAA6uB,sBAAA,IAGI7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAirC,GAAAh8C,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAm5B,GAAA1C,SAAAt5C,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAyoC,IAU9Cn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAkrC,EAAAj8C,EAAA4V,sBAAA,MAAApM,EAAAN,WAAA,KAAA+yC,EAAA92C,QAoBJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAqxC,sfAeAjB,CAAoB,sLCpMjC,IAAA7vC,EAAAnM,EAAA,OACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,6FAwC4BoC,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,4BAElBA,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,MAAAmrC,EAAA5wB,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,yEA3BhBzJ,EAAAqN,yBAAA,UAAArN,CAKC,eAKOA,EAAA8Q,qBAAA,uBAAAorC,EAAAl8C,EAAAkR,wBAAAk2B,GAAAvpB,UAAAzH,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAA+lC,WAAAD,GAAgB,GAEzBl8C,EAAAqN,yBAAA,YAGIrN,EAAA+R,qBAAA,EAAAqqC,EAAA,cAMAp8C,EAAA+R,qBAAA,EAAAsqC,EAAA,cAKAr8C,EAAA+R,qBAAA,EAAAuqC,EAAA,0BAAAt8C,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA6C,aAErCA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAAorC,EAAAl8C,EAAAkR,wBAAAk2B,GAAAvpB,UAAAQ,EAAAre,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA+M,EAAAyb,UAAAva,KAAA28B,GAAoB,GAE7Bl8C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFAzDjBA,EAAA0f,sBAAA,mBAAA7N,EAAAkoB,SAAAmiB,EAAA7oC,IAaarT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAc,EAAAsN,SAAApZ,SAAAm2C,EAAA7oC,KAKArT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAmrC,EAAA5wB,OAAA,KAAA4wB,EAAA5wB,OAAAnmB,OAAAnF,CAA2B,WAAAwV,GAa5BxV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAyuC,EAAA3oC,MAAA2oC,EAAA7oC,IAAA,YAKIrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAyuC,EAAAtoC,KAAA,KAAAsoC,EAAAtoC,KAAA2B,gBAAA,MAAA2mC,EAAAtoC,KAAA,KAAAsoC,EAAAtoC,KAAAL,OAAA,kBAcZvT,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAA7N,EAAAkpB,YAAAmhB,EAAA7oC,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAApC,EAAAkpB,YAAAmhB,EAAA7oC,IAAA,wDA7DtBrT,EAAAqN,yBAAA,UAIIrN,EAAA+R,qBAAA,EAAAwqC,EAAA,4CAgEJv8C,EAAAsN,kEA9DyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAc,EAAAud,OAAA,2BAP7Bj0B,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAyqC,EAAA,0CAqEJx8C,EAAA0hB,0GAnES1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAA8hB,QAAA,KAAA3S,EAAAnc,OAAAnF,CAA+B,WAAAqtB,EAAA,wBAqEpCrtB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,wBAAAtN,UADnCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,sCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,0DACJvN,EAAAsN,wBAAAtN,IAKHN,oBAAiB,eAAjB+8C,EAAiB,WAiB1B,SAAAA,EAAoB5iC,GAA0B,IAAAzY,EAAAtB,KAAAD,EAAAC,KAAA28C,GAA1B38C,KAAA+Z,SAhBJ/Z,KAAAi6B,OAAiB,GACjBj6B,KAAAqf,SAAmB,GACnBrf,KAAAu4B,UAAsB,GACrBv4B,KAAAu7B,SAAW,IAAItxB,EAAAsV,aACfvf,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAEjBvf,KAAAm0B,SAAQra,EAAAgJ,eAAc,CAClC9iB,KAAK+Z,OAAOgJ,QACZ/iB,KAAK+Z,OAAO6vB,sBACbzmC,QACC7C,EAAAwb,KAAI,SAAAxV,GAAA,IAAA8B,EAAA4a,EAAA1c,EAAA,GAAIkzC,EAAQpxC,EAAA,GAARoxC,SAAa,OAAApxC,EAAA,GACf4T,OAAO,SAACsW,GAAC,OAAMknB,GAAYl4C,EAAK25B,YAAY3I,EAAE/e,GAAG,EAAC,IAG5CvT,KAAAqjB,QAAUrjB,KAAK+Z,OAAOsJ,OAEW,CAACvjB,SAAA68C,EAAA,EAAAl7C,IAAA,cAAAC,MAE3C,SAAYk7C,GACf,OAAO58C,KAAKu4B,UAAUtyB,SAAS22C,EACnC,GAAC,CAAAn7C,IAAA,aAAAC,MAEM,SAAW0R,GACdpT,KAAKu7B,SAAS9b,KAAKrM,EACvB,KAACupC,CAAA,CAzByB,GAAjBA,SAAiB,mBAAA18C,iBAAjB08C,GAAiBz8C,EAAAwI,4BAAAC,EAAAoI,oBAAA,EAAjB4rC,EAAiB,UAAAz8C,EAAA,kCAAjBy8C,EAAiBxzC,UAAA,gBAAAuW,OAAA,CAAAua,OAAA,SAAA5a,SAAA,WAAAkZ,UAAA,aAAA5Y,QAAA,CAAA4b,SAAA,WAAAvB,UAAA,aAAA1wB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kCAhGK0iB,UAAAC,MAAAC,EAAA,qIACmBF,UAAAG,MAAAD,EAAA,oHAC1C,qoDAFJhwB,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAkCzuB,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,mCAEAzuB,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA4qC,EAAA,oDAuEA38C,EAAA+R,qBAAA,EAAA6qC,EAAA,yBAAA58C,EAAAkmB,kCASAlmB,EAAA+R,qBAAA,EAAA8qC,EAAA,yBAAA78C,EAAAkmB,6EAjFAlmB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAArN,EAAAthB,EAAA4V,sBAAA,IAAApM,EAAAyqB,QAAA,KAAA3S,EAAAnc,SAAA,GAAAnF,EAAA6uB,sBAAA,GACe7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAwN,EAAAve,EAAA4V,sBAAA,IAAApM,EAAA2Z,WAAA5E,EAAApZ,QAAAnF,CAAkC,WAAAiuB,EAAA,yRA4F5CwuB,CAAiB,oMCnH9B,IAAA1yC,EAAAnM,EAAA,OAQA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,OAGAgc,GADAhc,EAAA,OACAA,EAAA,QACAk/C,EAAAl/C,EAAA,OACAm/C,EAAAn/C,EAAA,6IA8BoBoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAisC,GAEAh9C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAuvC,EAAAznC,cAAAynC,EAAAzpC,KAAA,8CAiCX7T,mBAAiB,eAAjBu9C,EAAiB,SAAAt8C,GAAAC,EAAAq8C,EAAAt8C,GAAA,IAAAG,EAAAC,EAAAk8C,GAsF1B,SAAAA,EACYpjC,EACA7Y,GAA0B,IAAAI,EAAAvB,SAAAC,KAAAm9C,IAElC77C,EAAAN,EAAAO,KAAAvB,OAHQ+Z,SACAzY,EAAAJ,YAvFII,EAAA87C,cAAwB,EACxB97C,EAAA24B,OAAS,GACR34B,EAAAi6B,SAAW,IAAItxB,EAAAsV,aAEhBje,EAAA6yB,MAAQ7yB,EAAKyY,OAAO6vB,oBACpBtoC,EAAA+hB,QAAU/hB,EAAKyY,OAAOsJ,QAE/B/hB,EAAA0mB,KAAO,EACP1mB,EAAA+7C,OAAS,CAAE5J,EAAG,GAAKC,EAAG,IAGrBpyC,EAAAg8C,QAAU,IAAIxjC,EAAAqB,gBAAgB,GAEtB7Z,EAAAuR,WAAa,SAACyQ,GAAC,OAAKhiB,EAAKyY,OAAOlH,WAAWyQ,EAAE,EAM7ChiB,EAAAuhB,OAASvhB,EAAKyY,OAAO6vB,oBAAoBzmC,QACrD7C,EAAAwb,KAAI,SAACqY,GAAK,SACN3zB,EAAAipC,QACItV,EAAMrY,IAAI,SAAC1I,GAAI,OAAKA,EAAKU,IAA4B,GACrD,KACH,IAIOxS,EAAAi8C,QAAUj8C,EAAKyY,OAAO6vB,oBAAoBzmC,QACtD7C,EAAAwb,KAAI,SAACqY,GAAK,OACNA,EAAMrY,IAAI,SAAC1I,GAAI,MAAM,CACjBG,GAAIH,EAAKM,QAAUN,EAAKG,GACxB4T,OAAQ,CAAC,WAAY,WACrBC,SAAU,kBAAM9lB,EAAK+6C,WAAWjpC,EAAY,EAC/C,EAAE,IAIK9R,EAAA8H,SAAW9H,EAAKyY,OAAOhD,UAAU5T,QAC7C7C,EAAAwb,KAAI,SAACqY,GACD,OAAO7yB,EAAKJ,UAAUyE,IAAI,uBACpB,GACAwuB,EAAMrY,IAAI,SAAC1I,GAAI,MAAM,CACjBrN,SAAUqN,EAAKG,GACfsU,QAASo1B,EAAAO,yBACTC,WAAW,EACXC,UAAU,EACV56C,KAAM,CACFyQ,GAAIH,EAAKM,QAAUN,EAAKG,GACxBG,OAAQN,EAAKK,KACbA,KAAML,EAAKK,MAAQL,EAAKM,OACxB+Z,KAAMnsB,EAAKyY,OAAO4jC,iBAAiBvqC,EAAKG,KAE5CwU,QAAS,GACZ,EACX,IAGYzmB,EAAA2mB,UAASnO,EAAAgJ,eAAc,CACnCxhB,EAAKyY,OAAOhD,UACZzV,EAAKyY,OAAO6vB,oBACZtoC,EAAKg8C,UACNn6C,QACC7C,EAAAwb,KAAI,SAAAxV,GAAA,IAAA8B,EAAA4a,EAAA1c,EAAA,GAASs3C,EAAUx1C,EAAA,UAAZA,EAAA,GACD+zB,OAAO,SAAClU,EAAQ7U,GAClB,IAAMyqC,EAAUv8C,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtD8+B,EACFnjC,EAAK24B,SAAW7mB,EAAKG,GACf,SACAqqC,EAAWhuB,KAAK,SAACvsB,GAAC,OAAKA,EAAEkQ,KAAOH,EAAKG,EAAE,GACvC,OACA,OACV0U,SAAM,IAAA7jB,OAAKgP,EAAKM,QAAUN,EAAKG,KAAQ,CACnCuqC,KACe,WAAXrZ,EACM,UACAoZ,EAAO,QAAAz5C,OAASqgC,KAChBoZ,EAAO,GAAAz5C,OAAIqgC,KACXuY,EAAAe,gBAAe,GAAA35C,OAAIqgC,KAE1Bxc,CACX,EAAG,GAAG,IAEZ3mB,CAOF,CAACxB,SAAAq9C,EAAA,EAAA17C,IAAA,UAAAkE,IA3ED,WAAkB,IAAAq4C,EACd,OAAiB,QAAVA,EAAAh+C,KAAKgX,aAAK,IAAAgnC,OAAA,EAAVA,EAAYtqC,SAAU,EACjC,GAAC,CAAAjS,IAAA,WAAAC,MA2EM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAK+S,aACD,gBACA/S,KAAK6iB,OAAO5P,UAAU,SAAC4P,GACdA,EAAO+M,KAAK,SAACvsB,GAAC,IAAA46C,EAAA,OAAK56C,EAAEkQ,MAAiB,QAAf0qC,EAAK94C,EAAK6R,aAAK,IAAAinC,OAAA,EAAVA,EAAY1qC,GAAE,KAC3CpO,EAAK6R,MAAQ6L,EAAO,GAE5B,GAER,GAAC,CAAAphB,IAAA,cAAAC,MAEM,SAAY24B,GACXA,EAAQJ,QAAQj6B,KAAKs9C,QAAQ96C,KAAK+X,KAAKgX,MAC/C,GAAC,CAAA9vB,IAAA,aAAAC,MAEM,SAAW0R,GACdpT,KAAKu7B,SAAS9b,KAAKrM,EACvB,GAAC,CAAA3R,IAAA,UAAAC,MAEM,SAAQw8C,GACXl+C,KAAKgoB,KAAOoe,KAAK+X,IAAI,GAAK/X,KAAKgY,IAAI,GAAIF,GAC3C,GAAC,CAAAz8C,IAAA,WAAAC,MAEM,WACH1B,KAAKgoB,KAAO,EACZhoB,KAAKq9C,OAAS,CAAE5J,EAAG,GAAKC,EAAG,GAC/B,KAACyJ,CAAA,CAvHyB,CAAQ38C,EAAAiI,cAAzB00C,SAAiB,mBAAAl9C,iBAAjBk9C,GAAgBj9C,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA,EAAhBu0C,EAAiB,UAAAj9C,EAAA,kCAAjBi9C,EAAgBh0C,UAAA,eAAAuW,OAAA,CAAA09B,aAAA,eAAAnjB,OAAA,UAAAta,QAAA,CAAA4b,SAAA,YAAAnyB,SAAA,CAAAlJ,EAAAmJ,qCAAAnJ,EAAAo6B,gCAAAhxB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,+oBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CrBvJ,EAAAqN,yBAAA,UAAArN,CAA0D,qBAA1DA,CAA0D,kBAO9CA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAsN,MAAA7F,CAAA,GAGAjR,EAAA+R,qBAAA,EAAAosC,EAAA,kDAMJn+C,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAAoC,aAG5BA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAse,KAAA7W,CAAA,EAAAjR,CAAe,wBAAAiR,GAAA,OAAAzH,EAAA2zC,OAAAlsC,CAAA,6FAKlBjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,WAAArN,CAGC,eACkCA,EAAA8Q,qBAAA,0BAAStH,EAAA40C,QAAe,IAAf50C,EAAAse,KAAmB,GACvD9nB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,GAErBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAAgCrN,EAAA8Q,qBAAA,0BAAStH,EAAA40C,QAAA50C,EAAAse,MAAgB,EAAI,KAAK,GAC9D9nB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,wBAAAtN,GAEtBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,gBAA6BrN,EAAA8Q,qBAAA,0BAAStH,EAAA60C,UAAU,GAC5Cr+C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,YAnCbA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAsN,MAAA9W,CAAmB,iBAAAA,EAAA0R,0BAAA,GAAAC,IAIC3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAApM,EAAAmZ,SAUxB3iB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,MAAAvH,EAAAkmC,QAAA1vC,CAAe,OAAAwJ,EAAAse,KAAf9nB,CAAe,SAAAwJ,EAAA2zC,OAAfn9C,CAAe,WAAAA,EAAA4V,sBAAA,KAAApM,EAAAN,UAAflJ,CAAe,SAAAA,EAAA4V,sBAAA,KAAApM,EAAAue,QAAf/nB,CAAe,UAAAA,EAAA4V,sBAAA,KAAApM,EAAA6zC,4YA0BlBJ,CAAiB,oNChF9B,IAAAnvC,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,qMAwDoBoC,EAAAqN,yBAAA,kBAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAF,EAAA+mB,gBAAAlnB,GAAuB,EAApCjR,CAAqC,oBAAAiR,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAU,EAAA7R,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAO,EAAAkqB,UAAA9qB,EAAA,GAGxCjR,EAAAsN,wBAAA,2CANGtN,EAAA+Q,qBAAA,eAAAoB,EAAA4pB,UAAA,KAAA5pB,EAAA4pB,UAAA1oB,GAAArT,CAAwB,WAAAmS,EAAA+pB,aAAxBl8B,CAAwB,YAAAmS,EAAAkmB,UAAA,+DAwBhCr4B,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAotC,GAAA,IAAA38B,EAAA3hB,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAqQ,EAAAoa,UAAqB,KAAI,GAN7B/7B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,+DAuDJtN,EAAAqN,yBAAA,iBAIIrN,EAAA8Q,qBAAA,oBAAAG,GAAAjR,EAAAkR,wBAAAsE,GAAA,IAAAC,EAAAzV,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAmE,EAAAsmB,UAAA9qB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAJItN,EAAA+Q,qBAAA,iBAAAqX,EAAA2T,UAAA/7B,CAA4B,eAAAooB,EAAA2T,UAAA,KAAA3T,EAAA2T,UAAA1oB,GAAA,EA/I/B3T,eAAe,kBAuJfA,2BAAwB,eAAxBs4C,EAAwB,WAajC,SAAAA,EACYuG,EACAv9C,EACAguB,EAEA4nB,GAGP/2C,EAAAC,KAAAk4C,GAPOl4C,KAAAy+C,cACAz+C,KAAAkB,YACAlB,KAAAkvB,cAEAlvB,KAAA82C,QAhBL92C,KAAAqf,SAA2B,GAC3Brf,KAAA25C,KAAO,OAoBV35C,KAAKqf,SAAQ8D,EAAQ2zB,EAAMpe,OAAS,IACpC14B,KAAKkvB,YAAYrc,WAAWikC,EAAM/zB,QACtC,CAACjjB,SAAAo4C,EAAA,EAAAz2C,IAAA,eAAAkE,IApBD,WACI,OAAO3F,KAAKqf,SAASvD,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAApT,IAAA,YAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc/F,EAAAq4C,eAAiB,EACzD,GAAC,CAAAx2C,IAAA,aAAAC,MAgBM,SAAW6R,GACd,OAAOA,GAAMvT,KAAKo8B,aAAan2B,SAASsN,EAC5C,GAAC,CAAA9R,IAAA,cAAAC,MAEM,SAAYua,EAAoBogB,GACnC,IAAMnpB,EAAOlT,KAAKqf,SAASrD,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAO0I,EAAK1I,EAAE,GACrD8oB,GAAOnpB,EAAKijB,KAAKla,GACrBjc,KAAKqf,SAAWnM,GACXlT,KAAK82C,MAAM/zB,QAAQ2U,OAAS2E,GAAOr8B,KAAKy+C,YAAYz2C,MAAM,CAACiU,GACpE,GAAC,CAAAxa,IAAA,kBAAAC,MAEM,SAAgBua,GACnB,IAAMud,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAASgW,EAAK1I,IAEtCvT,KAAKkB,UAAUw4B,gBAAgB95B,EAAAq4C,aAD/Bxe,EAC2C,GAAAr1B,OAAA+e,EACpCqW,GAAQ,CACXvd,EAAK1I,KAKLimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM4Y,EAAK1I,EAAE,GAGhD,KAAC2kC,CAAA,CApDgC,GAAxBA,SAAwB,mBAAAj4C,iBAAxBi4C,GAAwBh4C,EAAAwI,4BAAAC,EAAA+1C,cAAAx+C,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAiBrBsF,EAAAsuB,iBAAe,EAjBlB4b,EAAwB,UAAAh4C,EAAA,kCAAxBg4C,EAAwB/uC,UAAA,wBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wOA1IZ0iB,UAAAC,MAAAC,EAAA,k4CAkFRF,UAAAG,MAAAD,EAAA,sXAgBwCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,kHAC/B,gGAc2BF,UAAAO,MAAAL,EAAA,oGACnB,yOA9CXF,UAAA+mB,MAAA7mB,EAAA,2LA9EThwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAAkBzuB,EAAAsN,yBAClBtN,EAAAqN,yBAAA,UAAArN,CAA4D,cAOpDA,EAAA8Q,qBAAA,0BAAAtH,EAAAiwC,KAAgB,KAAK,GAErBz5C,EAAAuN,iBAAA,WACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,0BAAAtH,EAAAiwC,KAAgB,MAAM,GAEtBz5C,EAAAuN,iBAAA,aACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,qBAGAzJ,EAAAqN,yBAAA,WAAArN,CAEC,8BAGOA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAiwC,KAAAxoC,CAAA,GACHjR,EAAAsN,yBACDtN,EAAA+R,qBAAA,GAAA0sC,EAAA,oBASJz+C,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAOIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA6yB,YAAA7yB,EAAAuyB,UAAA9qB,EAA8B,EAA9CjR,CAA+C,8BAElCwJ,EAAA2uB,gBAAA3uB,EAAAuyB,UAA0B,EAFvC/7B,CAA+C,0BAAAwJ,EAAAuyB,UAG1B,IAAI,GAC5B/7B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,gBAGIrN,EAAA+R,qBAAA,GAAA2sC,EAAA,iBAWA1+C,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAA6yB,YAAA7yB,EAAAuyB,WAAwBvyB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAA0B,GAE3DrT,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAMAzuB,EAAAsN,wBAAAtN,SAKhBA,EAAA+R,qBAAA,GAAA4sC,EAAA,0BAAA3+C,EAAAkmB,0EAxHgBlmB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,kBAAAlW,EAAAiwC,MAUAz5C,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,mBAAAlW,EAAAiwC,MAkBAz5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAiwC,MAGCz5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAvH,EAAAiwC,KAAAz5C,CAAuB,WAAAqmB,GAY5BrmB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAAuyB,UAAA/7B,CAA2B,UAAAwJ,EAAAuyB,WAF3B/7B,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,UAAA/7B,CAAkB,SAAAwJ,EAAA0yB,aAAAn2B,SAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAlBrT,CAAkB,mBAAAwJ,EAAAiwC,KAAlBz5C,CAAkB,MAAAwJ,EAAAuyB,WAAAvyB,EAAA6uB,UAAAtyB,SAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KAoBjBrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,WAWD/7B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,OAAAlW,EAAAuyB,WADA/7B,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAeAnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAUJnf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA2V,SAAAha,QAAAnF,EAAA6uB,sBAAA,IAMI7uB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KADArT,EAAA+Q,qBAAA,YAAAvH,EAAAuyB,WAK8B/7B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,gBAS1BrT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,wCAAArT,EAAA6uB,sBAAA,8MAgBXmpB,CAAwB,gMC/JrCp6C,EAAA,WACA0C,EAAA1C,EAAA,OAMAizB,EAAAjzB,EAAA,OACAwC,EAAAxC,EAAA,OAMA6+B,GAJA7+B,EAAA,OAIAA,EAAA,QACAghD,EAAAhhD,EAAA,OACAgrC,EAAAhrC,EAAA,wCAKa8B,eAAY,eAAZm/C,EAAY,WAIrB,SAAAA,EACY59C,EACAiX,GAAkBrY,EAAAC,KAAA++C,GADlB/+C,KAAAmB,OACAnB,KAAAoY,UALLpY,KAAA02C,cAAe,EACf12C,KAAAg/C,eAAgB,CAKpB,CAACl/C,SAAAi/C,EAAA,EAAAt9C,IAAA,WAAAC,OAAAu9C,EAAAt9C,EAEG,SAAA2E,GAAA,IAAAhF,EAAAtB,KACHm0B,EAAK7tB,EAAL6tB,MACA1f,EAAInO,EAAJmO,KACA6a,EAAMhpB,EAANgpB,OACA9Y,EAASlQ,EAATkQ,UACAxE,EAAI1L,EAAJ0L,KAAI,OAAApQ,IAAAC,KAAA,SAAAC,IAAA,IAAAo9C,EAAAloC,EAAAwB,EAAAo+B,EAAAl+B,EAAA,OAAA9W,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAQAlB,EAAK09C,eAAkBvqC,EAAI,CAAAnS,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YACpBnD,EAAAmU,aAAY,8CAA4C,OAE/DF,EAAOA,MAAQjU,EAAAsG,eAAc,OAEjCwoB,SAASA,GAAU,GACbtY,EAAQ1V,EAAKH,KAAKwuB,YACpBwE,EAAM,GAAGrgB,gBAAgB01B,MAAQrV,EAAM,GAAGrgB,KAAO,CAAc,QAAdorC,EAAC/qB,EAAM,GAAGrgB,YAAI,IAAAorC,OAAA,EAAbA,EAAe3rC,KAEjEiF,EAAyBlX,EAAK8W,QAAQrD,KACtC+zB,EAAA2F,6BACHnsC,EAAAE,KAAA,GACmBwB,QAAQ0qC,KAAK,CAC7Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAc,MAAkB,SAAbA,EAAEisB,MAAiB,IAClDhsB,YACLkV,EACKI,cACAzV,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAK,IAAI,IACpBC,cACP,QARS,GAAAhB,EAAA4B,KASC,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBACZ6U,SAAIxQ,QACJwQ,EAAMlX,EAAK8W,QAAQrD,KAAK+pC,EAAAjI,0BAA2B,CAC/C/zC,KAAM,CACF2R,OACA0f,QACAniB,KAAMA,EAAO,IAAIuI,KAAKvI,GAAQ,IAAIuI,KAClC+U,SACAtY,QACA0/B,aAAcp1C,EAAKo1C,gBAExBp0C,EAAAE,KAAA,GACawB,QAAQ0qC,KAAK,CACzBl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAc,MAAkB,SAAbA,EAAEisB,MAAiB,IAClDhsB,YACLkV,EACKI,cACAzV,QAAK7C,EAAAwb,KAAI,SAACzY,GAAC,OAAK,IAAI,IACpBC,cACP,QARK,GAAAhB,EAAA4B,KASK,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBAGoC,GADhDqO,EAAOwG,EAAIM,kBAAkB9G,MAAQA,EACrCsd,EAAS9W,EAAIM,kBAAkBwW,QAAUA,EAFzC7a,EAAO+D,EAAIM,kBAAkBrE,MAAQA,EAG5B,CAAAnS,EAAAE,KAAA,SACLgW,SAAIxQ,QAAQ1F,EAAAqB,OAAA,YACLnD,EAAAmU,aAAY,+CAA6C,QAEpE6D,SAAIM,kBAAkBuK,QAClB,yCAAyC/gB,EAAAE,KAAA,MACtBm6B,EAAA/I,eAAc,CACjC9gB,KAAM,OACNygB,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,GAAQ,IAAIuI,OACjDmZ,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,GAAQ,IAAIuI,SAC9CjX,YAAW,QAGb,GACY,OAHPszC,EALQt0C,EAAA4B,KAKa8X,OACvB,SAACnD,GAAC,OAAKA,EAAEupB,WAAWlP,gBAAkBze,EAAKzN,MAAMksB,aAAa,MAE9D0jB,EAAWvxC,OAAM,CAAA/C,EAAAE,KAAA,SACjBgW,SAAIxQ,QAAQ1F,EAAAqB,OAAA,YACLnD,EAAAmU,aACH,oEACH,QAEL6D,SAAIM,kBAAkBuK,QAAU,kBAC1B3K,EAAK,CAAIjE,GAAIrQ,OAAA+e,EAAM3M,GAAa,KAAElU,EAAAE,KAAA,GAClCwB,QAAQsmB,IAAI,CACd6J,EAAMrY,IAAI,SAAC1I,EAAMk7B,GAAG,OAChBhtC,EAAK69C,gBACD/rC,EACAqB,EACAzC,EAAK8iB,YAAO,IAAUva,MAAOua,UAC7BxF,EACA5W,EAAM41B,GACT,KAEP,QACF,SAAA9tC,EAAAynC,eAAc,4BACdzvB,EAAIxQ,QAAQ1F,EAAAqB,OAAA,UACL,GAAI,yBAAArB,EAAAwC,OAAA,EAAAhD,EAAA,EAzFPF,EAyFO,GACd,SAAAw9C,EAAAjiC,GAAA,OAAA8hC,EAAAj6C,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAAA,eAAA29C,EAAA19C,EAEO,SACJyR,EACAqB,EACAzC,EACAsd,GAAc,IAAAnqB,EAAAnF,KACds/C,EAAAr6C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KAAI,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAA8N,EAAAC,EAAAisC,EAAAC,EAAAz5C,EAAAiR,EAAAnD,EAAAg4B,EAAA,OAAAjqC,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAEfuD,SAAQ,GAAA3B,OAAe,QAAfiP,EAAMD,EAAKU,YAAI,IAAAT,OAAA,EAATA,EAAWI,KAAI,KAAArP,OAAIgP,EAAKG,IACtCyD,EAAQ7R,EAAKhE,KAAKwuB,YACpBvc,EAAKU,gBAAgB01B,MAAQp2B,EAAKU,KAAO,CAAU,QAAVR,EAACF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,KAEnDM,EAAiB,QAAT0rC,EAAAnsC,EAAKU,YAAI,IAAAyrC,GAATA,EAAWhsC,GACnB,CAAU,QAAVisC,EAACpsC,EAAKU,YAAI,IAAA0rC,OAAA,EAATA,EAAWjsC,GAAIyD,GAAOjD,WACvB,CAACiD,GAAOjD,WACR83B,EAAe,CACjBlE,iBAAe5W,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,IACtCq7B,QAASiS,GAAU/rC,IAAMkB,EAAKlB,GAC9B22B,UAAWoV,GAAU7rC,MAAQgB,EAAKhB,KAClC2uB,WAAYkd,GAAUt4C,OAASyN,EAAKzN,MACpC4gC,YAAaxB,KAAKC,SAAMtV,EAAA4C,UAAS3hB,GAAM8iB,UAAY,KACnD5jB,SAAUkC,EAAKG,GACfC,WAAYJ,EAAKK,KACjBjS,MAAO8tB,EACP3b,YAAa5N,EACb8N,QACAD,aAAc,OACdqhB,eAAgB,CACZvhB,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BssB,OAAQzsB,EAAKysB,OACbyf,SAAUA,GAAUt4C,QAE3BvB,EAAA9B,OAAA,YACMg5B,EAAAyQ,aAAYvB,GAAqBvoC,aAAW,wBAAAmC,EAAAX,OAAA,EAAAS,EAAA,EA3B9B3D,EA2B8B,GACtD,gBAAAu9C,EAAAxb,EAAAC,EAAAC,EAAAqM,GAAA,OAAAmP,EAAAr6C,MAAAhF,KAAAiF,UAAA,EAnCA,MAmCA85C,EApIG,IAAAE,CAoIH,CA3IoB,GAAZF,SAAY,mBAAA9+C,iBAAZ8+C,GAAY7+C,EAAAsd,mBAAA7U,EAAAG,qBAAA5I,EAAAsd,mBAAA3U,EAAAqQ,WAAA,EAAZ6lC,EAAY,WAAA7+C,EAAA,oCAAZ6+C,EAAYthC,QAAZshC,EAAYrhC,UAAAC,WAFT,SAEHohC,CAAY,oWCtBzB,IAAA90C,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OACAwC,EAAAxC,EAAA,OAEA0C,EAAA1C,EAAA,OACA2hD,EAAA3hD,EAAA,OACA4hD,EAAA5hD,EAAA,OAIAs3C,GAHAt3C,EAAA,OACAA,EAAA,OAEAA,EAAA,uNA+BgCoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,oDAHItN,EAAA+Q,qBAAA,QAAA0uC,GAAApsC,IAEArT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAgyC,GAAAlqC,cAAAkqC,GAAAlsC,KAAA,gHAnBhBvT,EAAAqN,yBAAA,WAAArN,CAAyD,cACrDA,EAAAg4B,sBAAA,MACah4B,EAAAyJ,oBAAA,UAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBAE3BtN,EAAAqN,yBAAA,sBAAArN,CAAqC,mBAG7BA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAAk2B,IAAA,IAAAhxB,GAAApW,EAAAqR,wBAAA,UAEhCrR,EAAAsR,sBAAA8E,GAAA5F,KAAAe,WAAA,CAAAoC,MAAA,CAAA1C,MACE,GAK8BjR,EAAA+R,qBAAA,EAAA2tC,GAAA,mDAMJ1/C,EAAAsN,wBAAAtN,IAAa,8CAfTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA0E,GAAAjF,KAAAhP,MAAAmS,MAAA,GAAA3T,CAA+B,iBAAAA,EAAA0R,0BAAA,EAAAyoC,IAUXn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAH,GAAAO,WAAA,oEAsDpBhW,EAAAqN,yBAAA,mBAGIrN,EAAA8Q,qBAAA,uBAAA6uC,GAAA3/C,EAAAkR,wBAAA0uC,IAAA/hC,UAAAnG,GAAA1X,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAoG,GAAAmoC,WAAAF,IAAgB,GAEzB3/C,EAAAqN,yBAAA,WAAArN,CAAyC,SAChCA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GAMJvN,EAAAsN,wBAAAtN,IAAM,8BAZVA,EAAA+Q,qBAAA,QAAA4uC,GAAApsC,MAISvT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA0rC,GAAApsC,MAEDvT,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAAggC,GAAA74C,MAAA,IAAA64C,GAAAlL,QAAA,KAAAkL,GAAAlL,QAAA,2EAgCZz0C,EAAAqN,yBAAA,mBAGIrN,EAAA8Q,qBAAA,uBAAAgvC,GAAA9/C,EAAAkR,wBAAA6uC,IAAAliC,UAAA8C,GAAA3gB,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAqP,GAAAk/B,WAAAC,IAAgB,GAEzB9/C,EAAAqN,yBAAA,WAAArN,CAAyC,SAChCA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GAMJvN,EAAAsN,wBAAAtN,IAAM,8BAZVA,EAAA+Q,qBAAA,QAAA+uC,GAAAh5C,OAIS9G,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA6rC,GAAAvsC,MAEDvT,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAAmgC,GAAAh5C,MAAA,IAAAg5C,GAAArL,QAAA,KAAAqL,GAAArL,QAAA,2EAlExBz0C,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,WAAArN,CAA2B,cACvBA,EAAAg4B,sBAAA,MACiBh4B,EAAAyJ,oBAAA,UAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBAE/BtN,EAAAqN,yBAAA,sBAAArN,CAAqC,cAM7BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6Q,IAAA,IAAAC,GAAAhiB,EAAAqR,wBAAA,UAEjCrR,EAAAsR,sBAAA0Q,GAAAg+B,eAAAh+B,GAAAxR,KAAAhP,MAAA8R,YACD,GAR8BtT,EAAAsN,wBAAAtN,GAWJA,EAAAqN,yBAAA,8BACIrN,EAAA+R,qBAAA,EAAAkuC,GAAA,qBAiBJjgD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA2B,eACvBA,EAAAg4B,sBAAA,OACiBh4B,EAAAyJ,oBAAA,WACjBzJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBAAArN,CAAqC,eAO7BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6Q,IAAA,IAAAm+B,GAAAlgD,EAAAqR,wBAAA,UAE/BrR,EAAAsR,sBAAA4uC,GAAAF,eAAAE,GAAA1vC,KAAAhP,MAAAwP,UACH,GAT8BhR,EAAAsN,yBAWAtN,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAC8BzuB,EAAAsN,wBAAAtN,GAGlCA,EAAAqN,yBAAA,+BACIrN,EAAA+R,qBAAA,GAAAouC,GAAA,qBAiBJngD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA2B,eACvBA,EAAAyuB,iBAAA,OAAsCzuB,EAAAsN,yBACtCtN,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMJzJ,EAAAsN,wBAAAtN,GAERA,EAAA0hB,iCAAA,2GA1EgB1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAwF,IAKiBvW,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAiP,GAAAogC,mBAgCjBpgD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAiG,IAQiBhX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAiP,GAAAogC,kBAAA,+BAhHrCpgD,EAAAqN,yBAAA,aACIrN,EAAA+R,qBAAA,EAAAsuC,GAAA,cAwBArgD,EAAAqN,yBAAA,WAAArN,CAA2B,cACvBA,EAAAg4B,sBAAA,MAA2Bh4B,EAAAyJ,oBAAA,UAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACzCtN,EAAAyJ,oBAAA,qBAIJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAyC,WAAzCA,CAAyC,cAEjCA,EAAAg4B,sBAAA,OACch4B,EAAAyJ,oBAAA,WACdzJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACAtN,EAAAyJ,oBAAA,sBAIJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAwC,eACpCA,EAAAg4B,sBAAA,OACah4B,EAAAyJ,oBAAA,WAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBAE3BtN,EAAAyJ,oBAAA,0BAKJzJ,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAAuuC,GAAA,uBAyFAtgD,EAAAqN,yBAAA,YAAArN,CAA2B,eACvBA,EAAAyuB,iBAAA,OAAyCzuB,EAAAsN,yBACzCtN,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMJzJ,EAAAsN,wBAAAtN,8EAvJWA,EAAA+Q,qBAAA,YAAAoP,GAAA3P,MACaxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAoP,GAAAnK,UAAA,KAAAmK,GAAAnK,UAAA7Q,QAAA,GAgDhBnF,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,OAAAoP,GAAA3P,KAAAhP,MAAAsQ,MAIG9R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoP,GAAAogC,SAAAvgD,CAAiB,WAAAmR,GAAA,oEA9DxCnR,EAAAqN,yBAAA,UAAArN,CAGC,UAHDA,CAGC,UAIOA,EAAAyuB,iBAAA,KAAwCzuB,EAAAsN,wBAAAtN,GAE5CA,EAAA+R,qBAAA,EAAAyuC,GAAA,eA0JAxgD,EAAAqN,yBAAA,WAAArN,CAEC,eAMOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAuvC,IAAA,IAAAC,GAAA1gD,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAovC,GAAAC,aAAY,GALzB3gD,EAAAyuB,iBAAA,MASAzuB,EAAAsN,wBAAAtN,IAAS,8CAtKNA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA4Q,GAAAnR,KAAA,+BAVfxQ,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAA6uC,GAAA,2CAkLJ5gD,EAAA0hB,0GAhLS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,IAAAzD,GAAAgR,WAAAhR,GAAA0uC,aAAA7gD,CAA2C,WAAAqtB,GAAA,+DAyLpCrtB,EAAA8gD,6BAAA,8TAMA9gD,EAAA8gD,6BAAA,sPAUI9gD,EAAA8gD,6BAAA,8TAMA9gD,EAAA8gD,6BAAA,2PA7BhB9gD,EAAAqN,yBAAA,WAAArN,CAGC,WAHDA,CAGC,WAEOA,EAAAg4B,sBAAA,MAEIh4B,EAAA+R,qBAAA,EAAAgvC,GAAA,uBAMA/gD,EAAA+R,qBAAA,EAAAivC,GAAA,uBAKJhhD,EAAAi4B,sBAAAj4B,EAAAsN,yBACAtN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,OAAArN,EAAAg4B,sBAAA,MAEIh4B,EAAAqN,yBAAA,OACIrN,EAAA+R,qBAAA,GAAAkvC,GAAA,uBAMAjhD,EAAA+R,qBAAA,GAAAmvC,GAAA,uBAKJlhD,EAAAsN,qFAKJtN,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAEC,YAFDA,CAEC,gBAQWA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiwC,IAAA,IAAAC,GAAAphD,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8vC,GAAAC,SAAQ,GAJrBrhD,EAAAyuB,iBAAA,OAQAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiwC,IAAA,IAAAG,GAAAthD,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAgwC,GAAAt9C,MAAgB,EAAK,GAJzBhE,EAAAyuB,iBAAA,OAQAzuB,EAAAsN,wBAAAtN,MAAS,6CAzDMA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAU,GAAA8uC,UAMAvgD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAU,GAAA8uC,UAUIvgD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAU,GAAA8uC,UAMAvgD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAU,GAAA8uC,UAUvBvgD,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,MAAAld,GAAAqE,SAAA,KAAArE,GAAAqE,SAAAP,gBAAA,MAAA9D,GAAAqE,SAAA,KAAArE,GAAAqE,SAAAvC,MAAAvT,CAAIA,EAAAmU,sBAAA,WAAA1C,GAAAuC,aAAA,KAAAvC,GAAAuC,aAAAlC,KAAA,cAAJ9R,CAAIA,EAAAmU,sBAAA,YAAA1C,GAAAuC,aAAA,KAAAvC,GAAAuC,aAAAlC,KAAA,cAAJ9R,EAAA6uB,sBAAA,8BA+BR7uB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAArN,EAAAyuB,iBAAA,MAA6BzuB,EAAAsN,wBAAAtN,WADhBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,6CAKjB/Q,EAAAqN,yBAAA,WAAArN,CAA8C,cAC1CA,EAAAg4B,sBAAA,MAAuCh4B,EAAAyJ,oBAAA,UAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACrDtN,EAAAyJ,oBAAA,0BAIJzJ,EAAAsN,mEAN2BtN,EAAA+Q,qBAAA,YAAAc,GAAArB,MAInBxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAOPrR,6BAA2B,eAA3B6hD,GAA2B,SAAA5gD,IAAAC,EAAA2gD,GAAA5gD,IAAA,IAuBnCE,GAvBmCC,GAAAC,EAAAwgD,IAyBpC,SAAAA,GACYlxC,GACArP,GACAC,IAAyB,IAAAG,GAAAvB,SAAAC,KAAAyhD,KAEjCngD,GAAAN,GAAAO,KAAAvB,OAJQuQ,YACAjP,GAAAJ,aACAI,GAAAH,QA3BKG,GAAA81B,KAAO,IAAIntB,EAAAsV,aAErBje,GAAA4C,MAAO,EAEE5C,GAAA+hB,QAAU/hB,GAAKiP,SAAS8S,QACjC/hB,GAAAy/C,cAAe,EACNz/C,GAAA4U,UAAY5U,GAAKH,KAAK65C,iBAC/B15C,GAAA4S,aAAe5S,GAAKiP,SAAS2D,aAC7B5S,GAAAogD,WAAa,EACbpgD,GAAA2yB,SAAW,GACX3yB,GAAAg/C,kBAAoB,GAAGh/C,EAoB9B,CAACxB,SAAA2hD,GAAA,EAAAhgD,IAAA,WAAAkE,IAlBD,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,gCAC9B,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAKmB,KAAK6U,QACrB,GAAC,CAAAvU,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKuQ,SAASG,IACzB,GAAC,CAAAjP,IAAA,WAAAC,OAAAX,GAAAY,EAAAC,IAAAC,KAUM,SAAAC,KAAA,IAAAmyB,GAAA8C,GAAAD,GAAA6qB,GAAAC,GAAAz8C,GAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAxC,KAAKkE,MAAO,EACZlE,KAAKuQ,SAASsxC,gBAAgBv/C,GAAAE,KAAA,EACxBxC,KAAK8hD,eAAc,OACzB9hD,KAAK0Q,KACA/K,IAAI,YACJo8C,cAAc,CAACn4C,EAAA+0B,WAAWC,SAAUh1B,EAAA+0B,WAAW33B,QAC9CitB,GAAWj0B,KAAKkB,UAAUyE,IAAI,qBAAuB,GAAEoxB,GAAAC,EAC1C/C,IAAQ,IAA3B,IAAA8C,GAAApN,MAAAmN,GAAAC,GAAAI,KAAAC,MAAeuqB,GAAA7qB,GAAAp1B,MACyBuF,MAAM,KAAI26C,GAAA5+B,EAAA2+B,GAAA,GAC9C3hD,KAAKi0B,SAASkC,KAAK,CAAEnvB,MADT46C,GAAA,GACgBnuC,KADVmuC,GAAA,GACgBjN,QADPiN,GAAA,IAE9B,OAAAj3B,IAAAoM,GAAA7R,EAAAyF,GAAA,SAAAoM,GAAAM,GAAA,CACDr3B,KAAKkgD,eAAe,IACpBlgD,KAAK+S,aACD,QACA/S,KAAK0Q,KACA/K,IAAI,YACJqN,aAAaC,UAAU,SAAC5P,IAAC,OAAK8B,GAAK+6C,eAAe78C,GAAE,IAE7DrD,KAAK+S,aACD,OACA/S,KAAK0Q,KACA/K,IAAI,cACJqN,aAAaC,UAAU,SAAC5P,IAAC,OAAK8B,GAAK+6C,eAAe78C,GAAE,IAEzDrD,KAAKygD,UACLzgD,KAAK0Q,KAAKe,WAAW,CAAEP,SAAU,wBAAyB,yBAAA5O,GAAAwC,OAAA,EAAAhD,GAAA9B,KAAA,IACjE,SAAA+E,KAAA,OAAAhE,GAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,aAAAC,MAEM,SAAWua,IACdjc,KAAK0Q,KAAKe,WAAW,CACjBP,SAAU+K,GAAKjV,MACfwM,WAAYyI,GAAKxI,KACjBkhC,QAAS14B,GAAK04B,SAEtB,GAAC,CAAAlzC,IAAA,iBAAAC,MAEM,SAAesa,IAClB,IAAM2N,IAAK3N,IAAU,IAAIkX,cACzBlzB,KAAKsgD,kBAAoBtgD,KAAKi0B,SAASjY,OACnC,SAAA1V,IAAA,IAAUmN,GAAInN,GAAJmN,KAAMkhC,GAAOruC,GAAPquC,QAAO,OAAfruC,GAALU,MACOksB,cAAcjtB,SAAS0jB,KAC7BlW,GAAKyf,cAAcjtB,SAAS0jB,KAC5BgrB,GAAQzhB,cAAcjtB,SAAS0jB,GAAE,EAE7C,GAAC,CAAAloB,IAAA,SAAAC,MAEM,WACH1B,KAAKo3B,KAAK3X,OACVzf,KAAKkE,MAAO,CAChB,GAAC,CAAAzC,IAAA,aAAAC,MAAA,eAAAsgD,GAAArgD,EAAAC,IAAAC,KAEM,SAAA0D,KAAA,IAAAgT,GAAArH,GAAAsC,GAAAmhC,GAAAsN,GAAAC,GAAA,OAAAtgD,IAAAS,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAC0B,GAA7BxC,KAAK0Q,KAAKsY,mBAELhpB,KAAK0Q,KAAKgE,SACV1U,KAAKygD,UAAazgD,KAAK0Q,KAAKhP,MAAMmW,OAAOxS,QAAO,CAAAI,GAAAjD,KAAA,eAAAiD,GAAA9B,OAAA,YAE1C87C,EAAA9qC,aAAW,6BAAAvQ,UAEVs7C,EAAA9qC,kBAAiB5U,KAAK0Q,MAAMmE,KAAK,OAAS,WAC9C,OACH,OAAA0D,OAEa/E,IAFb+E,GAE6CvY,KAAK0Q,KAAKhP,OAA1C8R,WAAYmhC,GAAOp8B,GAAPo8B,QACxBsN,GAAe,GAAA79C,OADb8M,GAAQqH,GAARrH,SAC2B,KAAA9M,OAAIoP,GAAU,KAAApP,OAAIuwC,IAC/CuN,GAAeliD,KAAKkB,UAAUyE,IAAI,qBAAuB,GAC/D3F,KAAKkB,UAAUw4B,gBAAgB,mBAAkB,GAAAt1B,OAAA+e,EAC1C++B,GAAalmC,OAAO,SAAC3Y,IAAC,OAAMA,GAAE4C,SAASiL,GAAS,IAAC,CACpD+wC,MACDx8C,GAAAjD,KAAA,EACIxC,KAAKygD,SAAWzgD,KAAKmiD,eAAiBniD,KAAKoiD,cAAa,OAC/D,OAAApiD,KAAKkU,aAAelU,KAAKuQ,SAAS2D,aAAazO,GAAAjD,KAAA,GACzCxC,KAAK8hD,eAAc,QACzB9hD,KAAKkE,MAAO,EAAK,yBAAAuB,GAAAX,OAAA,EAAAS,GAAAvF,KAAA,IACpB,gBAAA6gD,KAAA,OAAAmB,GAAAh9C,MAAAhF,KAAAiF,UAAA,EAzBA,IAyBA,CAAAxD,IAAA,eAAAC,MAAA,eAAA2gD,GAAA1gD,EAAAC,IAAAC,KAEO,SAAAwE,KAAA,IAAAulC,GAAA,OAAAhqC,IAAAS,KAAA,SAAAoE,IAAA,cAAAA,GAAAlE,KAAAkE,GAAAjE,MAAA,OAAAiE,UAAAjE,KAAA,EACExC,KAAKmB,KAAK+B,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAC7DtD,KAAKuQ,SAASsC,WAAW,CAAEC,KAAM,YACjC9S,KAAK0Q,KAAKe,WAAW,CACjBmC,aAAc,UACdC,MAAO,CAAmB,QAAnB+3B,GAAC5rC,KAAKmB,KAAK6U,gBAAQ,IAAA41B,QAAA,EAAlBA,GAAoBr4B,MAC7B,wBAAA9M,GAAA3B,OAAA,EAAAuB,GAAArG,KAAA,IACN,gBAAA8hD,KAAA,OAAAO,GAAAr9C,MAAAhF,KAAAiF,UAAA,EATA,IASA,CAAAxD,IAAA,cAAAC,MAAA,eAAA4gD,GAAA3gD,EAAAC,IAAAC,KAEO,SAAAsF,KAAA,IAAAzF,GAAA,OAAAE,IAAAS,KAAA,SAAAgF,IAAA,cAAAA,GAAA9E,KAAA8E,GAAA7E,MAAA,OACEd,OACN1B,KAAK0Q,KAAKe,WAAW,CACjBgC,MAFE/R,GAAQ1B,KAAK0Q,KAAKhP,OAER8R,WACZgD,UAAW,CACP,IAAI4+B,EAAAmN,KAAK,CACL9uC,KAAM/R,GAAM8R,WACZxM,MAAOtF,GAAMwP,SACbq9B,aAAc7sC,GAAMizC,aAG7BttC,GAAA7E,KAAA,EACGxC,KAAKuQ,SAASia,WAAUhmB,MAAO,SAAC0gB,IAClC,QAAAu6B,EAAA9qC,aAAYuQ,IACNA,EACV,GAAE,wBAAA7d,GAAAvC,OAAA,EAAAqC,GAAAnH,KAAA,IACL,gBAAAoiD,KAAA,OAAAE,GAAAt9C,MAAAhF,KAAAiF,UAAA,EAlBA,IAkBA,CAAAxD,IAAA,eAAAC,MAAA,eAAA8gD,GAAA7gD,EAAAC,IAAAC,KAEO,SAAAitC,KAAA,IAAApX,GAAAh2B,GAAAmW,GAAA+jB,GAAAD,GAAAlO,GAAA,OAAA7rB,IAAAS,KAAA,SAAA8sC,IAAA,cAAAA,GAAA5sC,KAAA4sC,GAAA3sC,MAAA,OACJxC,KAAK+gD,cAAe,EACdrpB,GAAK,OAAAtzB,UAAUs7C,EAAA+C,cAAa,IAGlCziD,KAAK0hD,YADC7pC,IADAnW,GAAQ1B,KAAK0Q,KAAKhP,OACHmW,QACIxS,OAAOu2B,GAAA5E,EACbnf,IAAMs3B,GAAA5sC,KAAA,EAAAq5B,GAAAjS,IAAA,WAAAgS,GAAAC,GAAAzE,KAAAC,KAAA,CAAA+X,GAAA3sC,KAAA,SAAV,IAAJirB,GAAIkO,GAAAj6B,OACDsF,MAAK,CAAAmoC,GAAA3sC,KAAA,gBAAA2sC,GAAAxrC,OAAA,uBACf,OAAA3D,KAAK0Q,KAAKe,WAAU8gB,IAAA,GACb7wB,IAAK,IACRkS,aAAc,UACd1C,SAAUuc,GAAKzmB,MACfwM,WAAYia,GAAKha,KACjBga,KAAMA,GACN9Z,YAAa+jB,GACbjkB,KAAMga,GAAKha,KACXoE,OAAQ,GACRrB,UAAW,CACP,IAAI4+B,EAAAmN,KAAK,CACL9uC,KAAMga,GAAKha,KACXzM,MAAOymB,GAAKzmB,MACZunC,aAAc9gB,GAAKknB,SAAWlnB,GAAK8gB,mBAG5CY,GAAA3sC,KAAA,GACGxC,KAAKuQ,SAASia,WAAUhmB,MAAO,SAAC0gB,IAClC,QAAAu6B,EAAA9qC,aAAYuQ,IACNA,EACV,GAAE,QAAAiqB,GAAA3sC,KAAA,gBAAA2sC,GAAA3sC,KAAA,iBAAA2sC,GAAA5sC,KAAA,GAAA4sC,GAAA5qC,GAAA4qC,GAAA3qC,MAAA,GAAAo3B,GAAA1W,EAAAiqB,GAAA5qC,IAAA,QAAA4qC,UAAA5sC,KAAA,GAAAq5B,GAAAvE,IAAA8X,GAAAuT,OAAA,YAEN1iD,KAAK+gD,cAAe,EAAM,yBAAA5R,GAAArqC,OAAA,EAAAgqC,GAAA9uC,KAAA,mBAC7B,gBAAAmiD,KAAA,OAAAK,GAAAx9C,MAAAhF,KAAAiF,UAAA,EAjCA,MAiCAw8C,EAAA,CAxKmC,CAAQjhD,EAAAiI,cAAnCg5C,UAA2B,mBAAAxhD,mBAA3BwhD,IAA0BvhD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAD,qBAAA,EAA1B24C,GAA2B,UAAAvhD,EAAA,kCAA3BuhD,GAA0Bt4C,UAAA,0BAAAwW,QAAA,CAAAyX,KAAA,QAAAhuB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAAyiB,0DAvQOC,UAAAC,MAAAC,EAAA,kGAsKzBF,UAAAG,MAAAD,EAAA,wGA1I0BF,UAAAI,MAAAF,EAAA,2HAAI,iBAAO,sBAQDF,UAAAM,MAAAJ,EAAA,iIACf,kBAAO,uBAShBF,UAAAO,MAAAL,EAAA,+HAAQ,kBAAO,uBAmGCF,UAAA+mB,MAAA7mB,EAAA,mGA5IpBF,UAAAqrB,MAAAnrB,EAAA,+HAAQ,iBAAO,sBAUCF,UAAAsrB,MAAAprB,EAAA,mGA2CZF,UAAAurB,MAAArrB,EAAA,mIAAY,iBAAO,sBAmCQF,UAAAwrB,MAAAtrB,EAAA,oIACf,kBAAO,uBAefF,UAAAyrB,MAAAvrB,EAAA,6GAwBsBF,UAAA2yB,MAAAzyB,EAAA,2FA6FlCF,UAAA4yB,MAAA1yB,EAAA,mGASAF,UAAA6yB,MAAA3yB,EAAA,0GAzDqBF,UAAA8yB,MAAA5yB,EAAA,4RAEtB,mCACI,kBAIJ,0EACA,mCACI,kBAAwB,kBAG5B,mHAGIF,UAAA+yB,MAAA7yB,EAAA,2ZAEJ,iBACI,oCACI,kBAIJ,4EACA,oCACI,kBAAwB,kBAG5B,4EACJ,kBAEA,gBACA,gBACA,+/EAqCAF,UAAAgzB,MAAA9yB,EAAA,0IAKuBF,UAAAizB,MAAA/yB,EAAA,+HAAQ,iBAAO,qGArQtDhwB,EAAA+R,qBAAA,EAAAixC,GAAA,sBAoLAhjD,EAAA+R,qBAAA,EAAAkxC,GAAA,2BAAAjjD,EAAAkmB,kCAsEAlmB,EAAA+R,qBAAA,EAAAmxC,GAAA,yBAAAljD,EAAAkmB,kCASAlmB,EAAA+R,qBAAA,EAAAoxC,GAAA,yBAAAnjD,EAAAkmB,2EAnQelmB,EAAA+Q,qBAAA,QAAAvH,GAAAxF,KAAAhE,CAAa,WAAAiuB,GAAA,0aA+QvBszB,EAA2B,iKC9RxC,IAAAx3C,EAAAnM,EAAA,OAGAk/C,GADAl/C,EAAA,OACAA,EAAA,2HAaYoC,EAAAqN,yBAAA,cAcIrN,EAAA8Q,qBAAA,uBAAAsyC,EAAApjD,EAAAkR,wBAAAmc,GAAAxP,UAAApM,EAAAzR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAG,EAAA4xC,QAAA9jC,KAAA6jC,GAAoB,GAE7BpjD,EAAAyJ,oBAAA,UAAAzJ,CAGO,UAHPA,CAGO,UAHPA,CAGO,WAaPA,EAAAqN,yBAAA,WAGIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBAEAtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,wBAAA,yDAlCItN,EAAAsjD,sBAAA,oBAAAF,EAAAzP,SAAA,KAAA3zC,CAAkD,iBAAAojD,EAAAzP,SAAA,KAAlD3zC,CAAkD,kBAAAojD,EAAAzP,SAAA,IAAAyP,EAAAG,KAAA,MAAlDvjD,CAAkD,mBAAAmS,EAAAoyB,OAAA6e,GAAlDpjD,CAAkD,eAAAojD,EAAAzP,SAAA,IAAAyP,EAAAG,KAAA,OADlDvjD,EAAA0f,sBAAA,aAAAvN,EAAAgN,UAAAhN,EAAAgN,WAAAikC,EAAA/vC,IAQArT,EAAA+Q,qBAAA,aAAAqyC,EAAA7vC,KAAAvT,CAA0B,gBAAAojD,EAAA7Y,UAuBtBvqC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA21C,EAAA7vC,KAAA,iCAsBP7T,sBAAmB,eAAnB8jD,EAAmB,WAkB5B,SAAAA,EAAoBxiD,GAA0BnB,EAAAC,KAAA0jD,GAA1B1jD,KAAAkB,YAhBJlB,KAAA2jD,YAAsC,CAClD,GAAM,OACN,EAAK,WAEO3jD,KAAAqf,SAAW,GACVrf,KAAAujD,QAAU,IAAIt5C,EAAAsV,YAWkB,CAACzf,SAAA4jD,EAAA,EAAAjiD,IAAA,UAAAkE,IATlD,WAAkB,IAAAi+C,EAE+B9sB,EADzC+sB,EAAU,EAAE9sB,EAAAC,GACc,QAAT4sB,EAAA5jD,KAAK8jD,YAAI,IAAAF,OAAA,EAATA,EAAWpvB,UAAW,IAAE,IAA7C,IAAAuC,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAA+C,KAApC2sB,EAAMjtB,EAAAp1B,MACP+xC,EAAIsQ,EAAOlQ,SAAS,GAAKkQ,EAAON,KAAK,GACvChQ,EAAIoQ,IAASA,EAAUpQ,GAC9B,OAAA9oB,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,OAAOwsB,CACX,GAAC,CAAApiD,IAAA,SAAAC,MAIM,SAAOqiD,GACV,IAAMlG,EAAU79C,KAAKkB,UAAUyE,IAAI,uBAAyB,GACtDjE,EAAQ1B,KAAK2jD,YAAYI,EAAOxwC,KAAO,OAC7C,OACIsqC,EAAO,WAAAz5C,OAAY1C,KACnBm8C,EAAO,GAAAz5C,OAAI1C,KACXs7C,EAAAe,gBAAe,GAAA35C,OAAI1C,GAE3B,KAACgiD,CAAA,CA5B2B,GAAnBA,SAAmB,mBAAAzjD,iBAAnByjD,GAAmBxjD,EAAAwI,4BAAAC,EAAAC,iBAAA,EAAnB86C,EAAmB,UAAAxjD,EAAA,kCAAnBwjD,EAAmBv6C,UAAA,kBAAAuW,OAAA,CAAAokC,KAAA,OAAAH,YAAA,cAAAtkC,SAAA,YAAAM,QAAA,CAAA4jC,QAAA,WAAAj6C,MAAA,EAAAC,KAAA,EAAA+D,OAAA,yiCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjExBvJ,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAKIrN,EAAA+R,qBAAA,EAAA+xC,EAAA,iBAwCJ9jD,EAAAsN,gCA/CItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAo6C,KAAA,KAAAp6C,EAAAo6C,KAAArwC,KAAA,KAIAvT,EAAAwN,oBAAA,GAAAxN,EAAAsjD,sBAAA,kCAAA95C,EAAAm6C,QAAA,SAAA3jD,CAA8D,sCAAAwJ,EAAAo6C,KAAA,KAAAp6C,EAAAo6C,KAAAt8C,QAAA,UAIvCtH,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAvH,EAAAo6C,KAAA,KAAAp6C,EAAAo6C,KAAAtvB,UAAAt0B,EAAA0R,0BAAA,EAAAC,sTAwDtB6xC,CAAmB,+LCzEhC,IAAAz5C,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKAmmD,GAJAnmD,EAAA,OAEAA,EAAA,OAEAA,EAAA,sNAmBwBoC,EAAAqN,yBAAA,qBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA+yC,EAAAhkD,EAAAkR,wBAAAsE,GAAAqI,UAAApI,EAAAzV,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAmE,EAAA0hC,WAAA6M,EAAA/yC,GAAuB,GAGxCjR,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAA,0DALItN,EAAA+Q,qBAAA,WAAA4Q,EAAArF,mBAAAtc,EAAA0R,0BAAA,EAAA0lC,IAAArxC,SAAAi+C,GAAAhkD,CAAmD,iBAAAA,EAAA0R,0BAAA,EAAA2lC,IAInDr3C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAu2C,EAAA,+BATZhkD,EAAAqN,yBAAA,WAAArN,CAAoD,cAC7BA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACvBtN,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,EAAAkyC,EAAA,uBAQJjkD,EAAAsN,wBAAAtN,4CAPwBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAU,EAAAvI,SAAA,0BAYxBlJ,EAAAyJ,oBAAA,6DAEIzJ,EAAA+Q,qBAAA,MAAAwmC,EAAAjsB,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAIAvrB,EAAAyJ,oBAAA,kCAgBJzJ,EAAAqN,yBAAA,WAAArN,CAGC,iBAEQA,EAAAuN,iBAAA,gBAAUvN,EAAAsN,yBAEftN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,2BAAqBvN,EAAAsN,wBAAAtN,iEAlDpCA,EAAAqN,yBAAA,WAKIrN,EAAA+R,qBAAA,EAAAmyC,EAAA,aAaAlkD,EAAAqN,yBAAA,WAGIrN,EAAA+R,qBAAA,EAAAoyC,EAAA,cAKAnkD,EAAA+R,qBAAA,EAAAqyC,EAAA,0BAAApkD,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA4B,YAEpBA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAiD,kBAExCA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBAEVtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAgDvN,EAAAsN,wBAAAtN,GAEvDA,EAAA+R,qBAAA,GAAAsyC,EAAA,cASArkD,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA6M,GAAAF,UAAAG,EAAAhe,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0M,EAAA25B,gBAAAJ,GAAqB,GAE9Bv3C,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA6M,GAAAF,UAAArH,EAAAxW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAkF,EAAAohC,eAAAL,GAAoB,GAE7Bv3C,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6M,GAAA,IAAAM,EAAAre,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+M,EAAA8Z,gBAAA9Z,EAAA4a,OAAsB,GAE/Bj5B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFAxFXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAAjJ,SAAA,KAAAiJ,EAAAjJ,SAAA/D,QAiBGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAwmC,EAAAjsB,OAAA,KAAAisB,EAAAjsB,OAAAnmB,OAAAnF,CAA2B,WAAA8hB,GAa5B9hB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA8pC,EAAAhkC,MAAA,cAMGvT,EAAAwN,oBAAA,GAAAxN,EAAAiU,6BAAA,MAAAsjC,EAAA3jC,KAAA,KAAA2jC,EAAA3jC,KAAA2B,gBAAA,MAAAgiC,EAAA3jC,KAAA,KAAA2jC,EAAA3jC,KAAAL,OAIFvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAwmC,EAAA+M,YAyCLtkD,EAAAwN,oBAAA,IAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAkmB,UAAAtyB,SAAA,MAAAoM,EAAA8mB,MAAA,KAAA9mB,EAAA8mB,MAAA5lB,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAkmB,UAAAtyB,SAAA,MAAAoM,EAAA8mB,MAAA,KAAA9mB,EAAA8mB,MAAA5lB,IAAA,+BA/F9B,IAAMilB,EAAuB,GAgIhB54B,2BAAwB,eAAxB6kD,EAAwB,WAcjC,SAAAA,EACYvjD,EACAkX,GAAkB,IAAA9W,EAAAtB,KAAAD,EAAAC,KAAAykD,GADlBzkD,KAAAkB,YACAlB,KAAAoY,UAfIpY,KAAAoJ,SAAqB,GAC9BpJ,KAAAg4C,UAAY,EACZh4C,KAAA04B,MAAwB,GACxB14B,KAAA24B,UAAW,EACX34B,KAAAwc,kBAA8B,GAoDrBxc,KAAA44B,iBAAmB,SAACC,GAA+B,OAC9Dv3B,EAAKw3B,UAAYD,CAAE,EAER74B,KAAA+4B,kBAAoB,SAACF,GAA+B,OAC/Dv3B,EAAK03B,SAAWH,CAAE,EACP74B,KAAAi5B,iBAAmB,SAACtP,GAAU,OAAMroB,EAAKq3B,SAAWhP,CAAC,CA7ClE,CAEH7pB,SAAA2kD,EAAA,EAAAhjD,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAcs+C,EAAAS,iBAAmBlsB,CAC3D,GAAC,CAAA/2B,IAAA,kBAAAC,MAQM,WAAe,IAAAyD,EAAAnF,KACZwY,EAAMxY,KAAKoY,QAAQrD,KAAKkvC,EAAAU,2BAA4B,CACtD7hD,KAAM,CACF41B,MAAO14B,KAAK04B,MACZ3V,QAAS,CAAEjD,SAAU9f,KAAKg4C,cAGlCx/B,EAAII,cAAc3F,UAAU,SAACylB,GACpBA,IAAOA,EAAQlgB,EAAIM,kBAAkBuG,UAC1Cla,EAAKk0B,SAASX,EAClB,EACJ,GAEA,CAAAj3B,IAAA,iBAAAC,MACO,SAAeib,GAClB3c,KAAKq5B,SAASr5B,KAAK04B,MAAM1c,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAOoJ,EAAMpJ,EAAE,GAC5D,GAEA,CAAA9R,IAAA,WAAAC,MAIO,SAASw3B,GACZl5B,KAAK04B,MAAQQ,EACTl5B,KAAK84B,WAAW94B,KAAK84B,UAAU94B,KAAK04B,MAC5C,GAGA,CAAAj3B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK04B,MAAQh3B,GAAS,EAC1B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBib,GACnB,IAAM6c,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAAS0W,EAAMpJ,IAEvCvT,KAAKkB,UAAUw4B,gBAAgBuqB,EAAAS,eAD/BjrB,EAC6C,GAAAr1B,OAAA+e,EACtCqW,GAAQ,CACX7c,EAAMpJ,KAKNimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAMsZ,EAAMpJ,EAAE,GAGjD,KAACkxC,CAAA,CA9EgC,GAAxBA,SAAwB,mBAAAxkD,iBAAxBwkD,GAAwBvkD,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAqQ,WAAA,EAAxBurC,EAAwB,UAAAvkD,EAAA,kCAAxBukD,EAAwBt7C,UAAA,wBAAAuW,OAAA,CAAAtW,SAAA,YAAAA,SAAA,CAAAlJ,EAAA4vB,6BARtB,CACP,CACIpjB,QAAS9C,EAAA+vB,kBACTC,eAAa3vB,EAAA4vB,YAAW,kBAAM4qB,CAAwB,GACtD3qB,OAAO,MAEdxwB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kTAdsB0iB,UAAAC,MAAAC,EAAA,i4BA3CKF,UAAAG,MAAAD,EAAA,2JAAc,yFAYdF,UAAAI,MAAAF,EAAA,6JAAe,idA5EvChwB,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAA2yC,EAAA,cAgGJ1kD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAAmuC,iBAAiB,GAE1B33C,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAqBzuB,EAAAsN,wBAAAtN,KAG7BA,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,gCA5GyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgvB,iHAuHpB+rB,CAAwB,+MC3IrC,IAAAx6C,EAAAnM,EAAA,OACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,OACAA,EAAA,wGAwC4BoC,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,4BAElBA,EAAAyJ,oBAAA,6DAMIzJ,EAAA+Q,qBAAA,MAAA4zC,EAAAr5B,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,yEA9BhBzJ,EAAAqN,yBAAA,UAAArN,CAKC,eAKOA,EAAA8Q,qBAAA,uBAAA6zC,EAAA3kD,EAAAkR,wBAAAk2B,GAAAvpB,UAAAzH,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAAwuC,iBAAAD,GAA6B,GAEtC3kD,EAAAqN,yBAAA,YAGIrN,EAAA+R,qBAAA,EAAA8yC,EAAA,cAMA7kD,EAAA+R,qBAAA,EAAA+yC,EAAA,cAQA9kD,EAAA+R,qBAAA,EAAAgzC,EAAA,0BAAA/kD,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA6C,aAErCA,EAAAuN,iBAAA,GAKJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAiD,kBAExCA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,IAGJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA6zC,EAAA3kD,EAAAkR,wBAAAk2B,GAAAvpB,UAAAQ,EAAAre,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA+M,EAAAyb,UAAAva,KAAAolC,GAA2B,GAEpC3kD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFA1EjBA,EAAA0f,sBAAA,mBAAA7N,EAAAkoB,SAAA4qB,EAAAtxC,IAaarT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAc,EAAAsN,SAAApZ,SAAA4+C,EAAAtxC,KAKArT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA4zC,EAAAr5B,OAAA,KAAAq5B,EAAAr5B,OAAAnmB,OAAAnF,CAGb,WAAAwV,GAaYxV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAk3C,EAAApxC,MAAAoxC,EAAAtxC,IAAA,mBASIrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAk3C,EAAA/wC,KAAA,KAAA+wC,EAAA/wC,KAAA2B,gBAAA,MAAAovC,EAAA/wC,KAAA,KAAA+wC,EAAA/wC,KAAAL,OAAA,kBAYAvT,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAAglC,EAAAK,WAAA,QAAAL,EAAArwB,QAAAnvB,QAAA,iBAYZnF,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAA7N,EAAAkpB,YAAA4pB,EAAAtxC,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAApC,EAAAkpB,YAAA4pB,EAAAtxC,IAAA,wDA9EtBrT,EAAAqN,yBAAA,UAIIrN,EAAA+R,qBAAA,EAAAkzC,EAAA,4CAiFJjlD,EAAAsN,kEA/EgCtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAc,EAAAwuC,cAAA,2BAPpCllD,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAozC,EAAA,0CAsFJnlD,EAAA0hB,0GApFS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAA+yC,eAAA,KAAA5jC,EAAAnc,OAAAnF,CAAsC,WAAAqtB,EAAA,wBAsF3CrtB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,uCAAiCvN,EAAAsN,wBAAAtN,UAD1CA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,sCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,kEACJvN,EAAAsN,wBAAAtN,IAKHN,0BAAuB,eAAvB0lD,EAAuB,WAiChC,SAAAA,EACYvrC,EACAwrC,GAAwB,IAAAjkD,EAAAtB,KAAAD,EAAAC,KAAAslD,GADxBtlD,KAAA+Z,SACA/Z,KAAAulD,WAlCIvlD,KAAAi6B,OAAiB,GACjBj6B,KAAAqf,SAAmB,GACnBrf,KAAAu4B,UAAsB,GACrBv4B,KAAAu7B,SAAW,IAAItxB,EAAAsV,aACfvf,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAEjBvf,KAAAolD,gBAAetrC,EAAAgJ,eAAc,CACzC9iB,KAAK+Z,OAAOgJ,QACZ/iB,KAAK+Z,OAAO6vB,oBACZ5pC,KAAKulD,SAASC,iBACfriD,QACC7C,EAAAwb,KAAI,SAAAxV,GAAqC,IAAA8B,EAAA4a,EAAA1c,EAAA,GAAjCkzC,EAAQpxC,EAAA,GAARoxC,SAAYziC,EAAS3O,EAAA,GACzB,OADgCA,EAAA,GAE3B4T,OACG,SAACsW,GAAC,QACIknB,GAAYl4C,EAAK25B,YAAY3I,EAAE/e,MACjCwD,EAAU6Y,KAAK,SAACvsB,GAAM,OAAKA,EAAEosC,UAAYnd,EAAE/e,EAAE,EAAC,GAErDuI,IAAI,SAACgoC,GAAI,OAAAvxB,IAAA,GACHuxB,GAAI,IACPoB,UAAWnuC,EAAUiF,OACjB,SAAC3Y,GAAM,OAAKA,EAAEosC,UAAYqU,EAAKvwC,EAAE,GACnClO,OACFmvB,QAASsvB,EAAKtvB,QAAQ1Y,IAAI,SAACzY,GAAC,OAAAkvB,IAAA,GACrBlvB,GAAC,IACJyQ,KAAMgwC,EAAKhwC,MAAI,IAChB,EAEf,IAEY9T,KAAAqjB,QAAUrjB,KAAK+Z,OAAOsJ,OAKnC,CAACvjB,SAAAwlD,EAAA,EAAA7jD,IAAA,cAAAC,MAEG,SAAY+jD,GACf,OAAOzlD,KAAKu4B,UAAUtyB,SAASw/C,EACnC,GAAC,CAAAhkD,IAAA,mBAAAC,MAEM,SAAiBgkD,GACpB1lD,KAAKu7B,SAAS9b,KAAKimC,EACvB,KAACJ,CAAA,CA5C+B,GAAvBA,SAAuB,mBAAArlD,iBAAvBqlD,GAAuBplD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAA88C,gBAAA,EAAvBL,EAAuB,UAAAplD,EAAA,kCAAvBolD,EAAuBn8C,UAAA,uBAAAuW,OAAA,CAAAua,OAAA,SAAA5a,SAAA,WAAAkZ,UAAA,aAAA5Y,QAAA,CAAA4b,SAAA,WAAAvB,UAAA,aAAA1wB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kCAjHD0iB,UAAAC,MAAAC,EAAA,qIACmBF,UAAAG,MAAAD,EAAA,oHAC1C,+rDAFJhwB,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAkCzuB,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,mCAEAzuB,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA2zC,EAAA,oDAwFA1lD,EAAA+R,qBAAA,EAAA4zC,EAAA,yBAAA3lD,EAAAkmB,kCASAlmB,EAAA+R,qBAAA,EAAA6zC,EAAA,yBAAA5lD,EAAAkmB,6EAlGAlmB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAArN,EAAAthB,EAAA4V,sBAAA,IAAApM,EAAA07C,eAAA,KAAA5jC,EAAAnc,SAAA,GAAAnF,EAAA6uB,sBAAA,GACe7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAwN,EAAAve,EAAA4V,sBAAA,IAAApM,EAAA2Z,WAAA5E,EAAApZ,QAAAnF,CAAkC,WAAAiuB,EAAA,gSA6G5Cm3B,CAAuB,yNCrIpC,IAAAr7C,EAAAnM,EAAA,OAEA0C,GADA1C,EAAA,OACAA,EAAA,QAEAioD,EAAAjoD,EAAA,OAEAizB,GADAjzB,EAAA,OACAA,EAAA,sIA0EYoC,EAAAqN,yBAAA,WAAArN,CAIC,OACMA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,uBAAAuoC,EAAAr5C,EAAAkR,wBAAA4Q,GAAAjE,UAAAuK,EAAApoB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8W,EAAA+uB,WAAAkC,GAAiB,GAAM,GAEhCr5C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,2BAR3BA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAolC,EAAA,+DAWPr5C,EAAAqN,yBAAA,WAAArN,CAAqD,UACjDA,EAAAyuB,iBAAA,MAA0BzuB,EAAAsN,yBAC1BtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqd,GAAA,IAAA7X,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAA/D,WAAA,CAAA2mC,UAAuB,IAAQ,GAExCt5C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,6BAMjCN,gCAA8B,eAA9BomD,EAA8B,SAAAnlD,GAAAC,EAAAklD,EAAAnlD,GAAA,IAAAG,EAAAC,EAAA+kD,GAoBvC,SAAAA,EACYtM,EACA3/B,GAA0B,IAAAzY,EAAAvB,SAAAC,KAAAgmD,IAElC1kD,EAAAN,EAAAO,KAAAvB,OAHQ05C,UACAp4C,EAAAyY,SArBIzY,EAAAq4C,KAAuB,OACtBr4C,EAAAs4C,WAAa,IAAI3vC,EAAAsV,aAClBje,EAAAyhB,QAAUzhB,EAAKyY,OAAOgJ,QACtBzhB,EAAAuR,WAAa,SAACyQ,GAAC,OAAKhiB,EAAKyY,OAAOlH,WAAWyQ,EAAE,EAC7ChiB,EAAA+1C,WAAa,SAAChgB,EAAGnS,GAAC,OAAK5jB,EAAKyY,OAAOs9B,WAAWhgB,EAAGnS,EAAE,EAYnD5jB,EAAAu4C,WAAa,kBACzBv4C,EAAKo4C,QAAQ3kC,KAAKgxC,EAAAE,uBAAuB,EAAC3kD,CAO9C,CAACxB,SAAAkmD,EAAA,EAAAvkD,IAAA,QAAAkE,IAlBD,WACI,OAAO3F,KAAK+Z,OAAOrJ,KAAKhP,MAAMsQ,IAClC,GAAC,CAAAvQ,IAAA,MAAAkE,IAED,WACI,IAAAo0C,EAAoC/5C,KAAK+Z,OAAOrJ,KAAKhP,MAA7CsQ,EAAI+nC,EAAJ/nC,KAAMsC,EAAQylC,EAARzlC,SACd,OAD+BylC,EAAPlpB,SACpBA,EAAgBE,EAAA4C,UAAS3hB,GACtBA,EAAkB,GAAXsC,EAAgB,GAClC,KAAC0xC,CAAA,CAfsC,CAAQxlD,EAAAiI,cAAtCu9C,SAA8B,mBAAA/lD,iBAA9B+lD,GAA6B9lD,EAAAwI,4BAAAC,EAAA2M,gBAAApV,EAAAwI,4BAAAG,EAAAkI,oBAAA,EAA7Bi1C,EAA8B,UAAA9lD,EAAA,kCAA9B8lD,EAA6B78C,UAAA,6BAAAuW,OAAA,CAAAi6B,KAAA,QAAAh6B,QAAA,CAAAi6B,WAAA,cAAAxwC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,sLAlE7B0iB,UAAAC,MAAAC,EAAA,gNAYIF,UAAAG,MAAAD,EAAA,mLAWAF,UAAAI,MAAAF,EAAA,4ZA6BUF,UAAAM,MAAAJ,EAAA,yNA/DnBhwB,EAAAqN,yBAAA,cAAArN,CAGC,cAMOA,EAAA8Q,qBAAA,0BAAStH,EAAAmwC,YAAY,GALzB35C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAA+B,cAOvBA,EAAA8Q,qBAAA,mBAAAtH,SAAAiwC,KAAgB,MAAOjwC,EAAAkwC,WAAAn6B,KAAA/V,EAAAiwC,KAAqB,GANhDz5C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAAtH,SAAAiwC,KAAgB,OAAQjwC,EAAAkwC,WAAAn6B,KAAA/V,EAAAiwC,KAAqB,GANjDz5C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,cAAArN,CAAyD,WAE/BA,EAAAuN,iBAAA,kCAAgCvN,EAAAsN,yBACtDtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAEJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAi0C,EAAA,6CAgBAhmD,EAAA+R,qBAAA,GAAAk0C,EAAA,6CAYJjmD,EAAAsN,gCAtDYtN,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,kBAAAlW,EAAAiwC,MAWAz5C,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,mBAAAlW,EAAAiwC,MAUcz5C,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAjU,EAAAmU,sBAAA,KAAA3K,EAAAq8B,MAAA,eAElB7lC,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAA3f,EAAAmU,sBAAA,MAAA3K,EAAAq8B,MAAA,wBAAA7lC,EAAAmU,sBAAA,MAAA3K,EAAAub,IAAA,kBAMiB/kB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAyX,EAAAxoB,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAA2F,EAAAtf,WAAAlJ,EAAA0R,0BAAA,GAAAinC,IAaH34C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAipC,EAAAh6C,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAm3B,EAAAV,ijBAejBwM,CAA8B,wLC9G3CloD,EAAA,OACAA,EAAA,OADA,IAEAizB,EAAAjzB,EAAA,UAEAA,EAAA,OACAA,EAAA,iPAmBgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqd,GAAA,IAAA7X,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAA5O,QAAO,GAEhB9H,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,yBAAmBvN,EAAAsN,wBAAAtN,EAAW,2BA8BhCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAuE,GAEAtV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA6H,EAAAC,cAAAD,EAAA/B,KAAA,2GArBhBvT,EAAAqN,yBAAA,WAAArN,CAGC,WACGA,EAAAyuB,iBAAA,MAAoBzuB,EAAAsN,yBACpBtN,EAAAqN,yBAAA,sBAAArN,CAAoD,mBAI5CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAsE,GAAA,IAAAC,GAAAzV,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAmE,GAAAK,SAAA7E,EAAA,EAAAjR,CAAsB,yBAAAiR,GAAAjR,EAAAkR,wBAAAsE,GAAA,IAAAU,GAAAlW,EAAAqR,0BAAA,OAG9BrR,EAAAsR,sBAAA4E,GAAAvD,WAAA,CAAAm3B,QAAA,MAAA74B,EAAA,KAAAA,EAAAoC,KAGlB,GAE0BrT,EAAA+R,qBAAA,EAAAm0C,EAAA,mDAMJlmD,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAC,SAAA9V,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAyoC,IASFn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAC,EAAAG,WAAA,2BA0BpBhW,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAo1C,EAAA9yC,IAEArT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA04C,EAAA5wC,cAAA4wC,EAAA5yC,KAAA,mEArBhBvT,EAAAqN,yBAAA,WAAArN,CAGC,WACUA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACZtN,EAAAqN,yBAAA,sBAAArN,CAAqC,mBAK7BA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqF,GAAA,IAAAC,GAAAxW,EAAAqR,0BAAA,OAERrR,EAAAsR,sBAAAkF,GAAA7D,WAAA,CAAAm3B,QAAA74B,GAAAuF,GAAAV,SAAAzC,KAGlB,GAE0BrT,EAAA+R,qBAAA,EAAAq0C,EAAA,mDAMJpmD,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAqE,SAAA9V,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAyoC,IASFn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAnE,EAAAkR,QAAA,0FAmEhC3iB,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,qBAIIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,IAAAo1C,GAAArmD,EAAAkR,wBAAAmP,GAAAxC,UAAAzG,EAAApX,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAA8F,EAAA+/B,WAAAkP,GAAAp1C,IAAwB,iCAE5CjR,EAAAsN,wBAAAtN,EAAe,4DAPqBA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAoyC,GAEjCrmD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAwN,EAAAve,EAAA4V,sBAAA,IAAAqB,EAAA4L,UAAA,KAAAtE,EAAArV,WAAAlJ,EAAA0R,0BAAA,EAAA40C,IAAAvgD,SAAAsgD,GAAArmD,CAEC,iBAAAA,EAAA0R,0BAAA,EAAAyoC,GAAA,2BAdbn6C,EAAAqN,yBAAA,eAAArN,CAIC,UACGA,EAAAyuB,iBAAA,MAAyCzuB,EAAAsN,yBACzCtN,EAAA+R,qBAAA,EAAAw0C,EAAA,4CAaJvmD,EAAAsN,iEAZyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAwS,EAAAlf,UAAA,+DAc7BlJ,EAAAqN,yBAAA,WAAArN,CAGC,eAMOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA0uC,GAAA,IAAAloC,EAAA1X,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoG,EAAA5P,QAAO,GALpB9H,EAAAyuB,iBAAA,MASAzuB,EAAAsN,wBAAAtN,EAAS,EAIRN,yBAAsB,eAAtBqmD,EAAsB,WAuC/B,SAAAA,EAEYnL,EACA/gC,EACA5Y,EACAD,GAA0B,IAAAI,GAAAtB,KAAAD,EAAAC,KAAAimD,GAH1BjmD,KAAA86C,cACA96C,KAAA+Z,SACA/Z,KAAAmB,OACAnB,KAAAkB,YA3CLlB,KAAA+6C,WAAY,EACH/6C,KAAA+iB,QAAU/iB,KAAK+Z,OAAOgJ,QACtB/iB,KAAAoJ,SAAWpJ,KAAK+Z,OAAO3Q,SACvBpJ,KAAAkW,UAAYlW,KAAKmB,KAAK65C,iBACtBh7C,KAAA6iB,OAAS7iB,KAAKmB,KAAK85C,cACnBj7C,KAAA0Q,KAAO1Q,KAAK+Z,OAAOrJ,KASnB1Q,KAAAgI,MAAQ,kBAAM1G,GAAKw5C,YAAY/7B,SAAS,EACxC/e,KAAA6S,WAAa,SAACyQ,IAAC,OAAKhiB,GAAKyY,OAAOlH,WAAWyQ,GAAE,EAC7CtjB,KAAAq3C,WAAa,SAAChgB,GAAGnS,IAAC,OAAK5jB,GAAKyY,OAAOs9B,WAAWhgB,GAAGnS,GAAE,EACnDllB,KAAAk7C,SAAW,SAAC5lB,IAAO,EA4B/Bt1B,KAAK+6C,YAAc/6C,KAAK86C,WAC5B,CAACh7C,SAAAmmD,EAAA,EAAAxkD,IAAA,WAAAkE,IAvCD,WACI,OAAO3F,KAAKmB,KAAK6U,QACrB,EAAC0F,IACD,SAAoB1C,GAChBhZ,KAAKmB,KAAK6U,SAAWgD,CACzB,GAAC,CAAAvX,IAAA,qBAAAkE,IAOD,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,iCAChC,GAAC,CAAAlE,IAAA,gBAAAkE,IACD,WACI,OACI3F,KAAKm7C,sBACHn7C,KAAKkB,UAAUyE,IAAI,4BAE7B,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,SAAOorB,EAAA4C,aACH5C,EAAAqqB,SACI7gC,KAAKgX,MACLvxB,KAAKkB,UAAUyE,IAAI,iCAAmC,IAGlE,KAACsgD,CAAA,CArC8B,GAAtBA,SAAsB,mBAAAhmD,iBAAtBgmD,GAAsB/lD,EAAAwI,4BAAAC,EAAAsW,kBAAA,GAAA/e,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAL,iBAAA,EAAtBq9C,EAAsB,UAAA/lD,EAAA,kCAAtB+lD,EAAsB98C,UAAA,qBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,+RA1JyB0iB,UAAAC,MAAAC,EAAA,4SAQPF,UAAAG,MAAAD,EAAA,6KA0DrBF,UAAAI,MAAAF,EAAA,gMAYIF,UAAAM,MAAAJ,EAAA,8JASAF,UAAAO,MAAAL,EAAA,qLAaiBF,UAAA+mB,MAAA7mB,EAAA,oGACjC,4EAGyCF,UAAAqrB,MAAAnrB,EAAA,oGACrC,yTA3FQF,UAAAsrB,MAAAprB,EAAA,wZA2GqBF,UAAAurB,MAAArrB,EAAA,maA2BxCF,UAAAwrB,MAAAtrB,EAAA,gJAnKLhwB,EAAAqN,yBAAA,UAAArN,CAEC,WAEOA,EAAA+R,qBAAA,EAAAy0C,EAAA,gBAUJxmD,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA8DzuB,EAAAsN,yBAC9DtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAGC,cAHDA,CAGC,UAEOA,EAAAyuB,iBAAA,KAA4CzuB,EAAAsN,yBAE5CtN,EAAA+R,qBAAA,GAAA00C,EAAA,6CA2BAzmD,EAAA+R,qBAAA,GAAA20C,EAAA,6CA4BA1mD,EAAAqN,yBAAA,YAAArN,CAAkC,YAC9BA,EAAAyuB,iBAAA,OAAgBzuB,EAAAsN,yBAChBtN,EAAAqN,yBAAA,sBAKIrN,EAAAuN,iBAAA,uCACJvN,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,YAEjCA,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,yBACtBtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAgH,KAAAe,WAAA,CAAAO,KAAAb,GAAiC,GAErDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAA0B,YACtBA,EAAAyuB,iBAAA,OAAoBzuB,EAAAsN,yBACpBtN,EAAAyJ,oBAAA,0BAQJzJ,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAAArN,CAAqC,WACjCA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA+B,aAC3BA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAmJ,WAAA,CAAA2mC,SAAAroC,GAAgC,kCAGrDjR,EAAAsN,wBAAAtN,KAGRA,EAAA+R,qBAAA,GAAA40C,EAAA,iDAoBJ3mD,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA60C,EAAA,qBA/Ia5mD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAqxC,WAWT76C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,MAMSxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAgF,EAAA/V,EAAA4V,sBAAA,MAAApM,EAAAwM,YAAA,KAAAD,EAAA5Q,QA2BAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAqB,EAAApS,EAAA4V,sBAAA,MAAApM,EAAAmZ,SAAA,KAAAvQ,EAAAjN,QAAA,GAgCGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,KAAAvH,EAAAsyC,UAEA97C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAA4V,sBAAA,8BASI5V,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgH,KAAAhP,MAAAsQ,KAAA9R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAyoC,IAS3Bn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAgrC,GAAAvyC,EAAAgH,KAAA/K,IAAA,cAAAs2C,GAAAv6C,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAY5CA,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA4V,sBAAA,4BAAA5V,EAAA6uB,sBAAA,IAII7uB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA4V,sBAAA,kCAAA5V,EAAA6uB,sBAAA,IAGI7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAA81C,GAAA7mD,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAgkC,GAAAvN,SAAAt5C,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAyoC,IAU9Cn6C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAA+1C,GAAA9mD,EAAA4V,sBAAA,MAAApM,EAAAN,WAAA,KAAA49C,GAAA3hD,QAoBJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAqxC,wfAeAkL,CAAsB,sMC9LnC,IAAAh8C,EAAAnM,EAAA,OACA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,OAGAgc,GADAhc,EAAA,OACAA,EAAA,QACAk/C,EAAAl/C,EAAA,OACAmpD,EAAAnpD,EAAA,6IAsCoBoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAisC,GAEAh9C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAuvC,EAAAznC,cAAAynC,EAAAzpC,KAAA,8CAuBX7T,qBAAmB,eAAnBsnD,EAAmB,SAAArmD,GAAAC,EAAAomD,EAAArmD,GAAA,IAAAG,EAAAC,EAAAimD,GA6E5B,SAAAA,EACYntC,EACA7Y,GAA0B,IAAAI,EAAAvB,SAAAC,KAAAknD,IAElC5lD,EAAAN,EAAAO,KAAAvB,OAHQ+Z,SACAzY,EAAAJ,YA9EII,EAAA87C,cAAwB,EACvB97C,EAAAi6B,SAAW,IAAItxB,EAAAsV,aAEhBje,EAAAkzB,QAAUlzB,EAAKyY,OAAO6vB,oBACtBtoC,EAAA+hB,QAAU/hB,EAAKyY,OAAOsJ,QAE/B/hB,EAAA0mB,KAAO,EACP1mB,EAAA+7C,OAAS,CAAE5J,EAAG,GAAKC,EAAG,IAGbpyC,EAAAuR,WAAa,SAACyQ,GAAC,OAAKhiB,EAAKyY,OAAOlH,WAAWyQ,EAAE,EAM7ChiB,EAAAuhB,OAASvhB,EAAKyY,OAAO6vB,oBAAoBzmC,QACrD7C,EAAAwb,KAAI,SAAC0Y,GAAO,SACRh0B,EAAAipC,QACIjV,EAAQ1Y,IAAI,SAACioC,GAAM,OAAKA,EAAOjwC,IAAI,GACnC,KACH,IAIOxS,EAAAi8C,QAAUj8C,EAAKyY,OAAO6vB,oBAAoBzmC,QACtD7C,EAAAwb,KAAI,SAAC0Y,GAAO,OACRA,EAAQ1Y,IAAI,SAACioC,GAAM,MAAM,CACrBxwC,GAAIwwC,EAAOrwC,QAAUqwC,EAAOxwC,GAC5B4T,OAAQ,CAAC,WAAY,WACrBC,SAAU,kBAAM9lB,EAAK6lD,aAAapD,EAAc,EACnD,EAAE,IAIKziD,EAAA8H,SAAW9H,EAAKyY,OAAOhD,UAAU5T,QAC7C7C,EAAAwb,KAAI,SAAC0Y,GACD,OAAOlzB,EAAKJ,UAAUyE,IAAI,yBACpB,GACA6uB,EAAQ1Y,IAAI,SAACioC,GAAM,MAAM,CACrBh+C,SAAUg+C,EAAOxwC,GACjBsU,QAASo/B,EAAAG,+BACT3J,WAAW,EACXC,UAAU,EACV56C,KAAM,CACFyQ,GAAIwwC,EAAOrwC,QAAUqwC,EAAOxwC,GAC5BG,OAAQqwC,EAAOtwC,KACfA,KAAMswC,EAAOtwC,MAAQswC,EAAOrwC,OAC5B+Z,KAAMnsB,EAAKyY,OAAO4jC,iBAAiBoG,EAAOxwC,KAE9CwU,QAAS,GACZ,EACX,IAGYzmB,EAAA2mB,UAASnO,EAAAgJ,eAAc,CACnCxhB,EAAKyY,OAAOhD,UACZzV,EAAKyY,OAAO6vB,sBACbzmC,QACC7C,EAAAwb,KAAI,SAAAxV,GAAA,IAAA8B,EAAA4a,EAAA1c,EAAA,GAAW+gD,EAAYj/C,EAAA,UAAdA,EAAA,GACD+zB,OAAO,SAAClU,EAAQ87B,GACpB,IAAMlG,EAAUv8C,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtD8+B,EAAS4iB,EAAaz3B,KAAK,SAACvsB,GAAC,OAAKA,EAAEkQ,KAAOwwC,EAAOxwC,EAAE,GACpD,OACA,OACN0U,SAAM,IAAA7jB,OAAK2/C,EAAOrwC,QAAUqwC,EAAOxwC,KAAQ,CACvCuqC,KACID,EAAO,UAAAz5C,OAAWqgC,KAClBoZ,EAAO,GAAAz5C,OAAIqgC,KACXuY,EAAAe,gBAAe,GAAA35C,OAAIqgC,KAEpBxc,CACX,EAAG,GAAG,IAEZ3mB,CAOF,CAACxB,SAAAonD,EAAA,EAAAzlD,IAAA,UAAAkE,IArED,WAAkB,IAAAq4C,EACd,OAAiB,QAAVA,EAAAh+C,KAAKgX,aAAK,IAAAgnC,OAAA,EAAVA,EAAYtqC,SAAU,EACjC,GAAC,CAAAjS,IAAA,WAAAC,MAqED,WAAQ,IAAAyD,EAAAnF,KACJA,KAAK+S,aACD,gBACA/S,KAAK6iB,OAAO5P,UAAU,SAAC4P,GACdA,EAAO+M,KAAK,SAACvsB,GAAC,IAAA46C,EAAA,OAAK56C,EAAEkQ,MAAiB,QAAf0qC,EAAK94C,EAAK6R,aAAK,IAAAinC,OAAA,EAAVA,EAAY1qC,GAAE,KAC3CpO,EAAK6R,MAAQ6L,EAAO,GAE5B,GAER,GAAC,CAAAphB,IAAA,eAAAC,MAEM,SAAaqiD,GAChB/jD,KAAKu7B,SAAS9b,KAAKskC,EACvB,GAAC,CAAAtiD,IAAA,UAAAC,MAEM,SAAQw8C,GACXl+C,KAAKgoB,KAAOoe,KAAK+X,IAAI,GAAK/X,KAAKgY,IAAI,GAAIF,GAC3C,GAAC,CAAAz8C,IAAA,WAAAC,MAEM,WACH1B,KAAKgoB,KAAO,EACZhoB,KAAKq9C,OAAS,CAAE5J,EAAG,GAAKC,EAAG,GAC/B,KAACwT,CAAA,CA1G2B,CAAQ1mD,EAAAiI,cAA3By+C,SAAmB,mBAAAjnD,iBAAnBinD,GAAkBhnD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA,EAAlBs+C,EAAmB,UAAAhnD,EAAA,kCAAnBgnD,EAAkB/9C,UAAA,iBAAAuW,OAAA,CAAA09B,aAAA,gBAAAz9B,QAAA,CAAA4b,SAAA,YAAAnyB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ooBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CvBvJ,EAAAqN,yBAAA,aAEIrN,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAse,KAAA7W,CAAA,EAAAjR,CAAe,wBAAAiR,GAAA,OAAAzH,EAAA2zC,OAAAlsC,CAAA,6FAKlBjR,EAAAsN,yBACDtN,EAAAqN,yBAAA,UAAArN,CAEC,qBAFDA,CAEC,kBAOWA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAsN,MAAA7F,CAAA,GAGAjR,EAAA+R,qBAAA,EAAAq1C,EAAA,kDAMJpnD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAGC,eACkCA,EAAA8Q,qBAAA,0BAAStH,EAAA40C,QAAe,IAAf50C,EAAAse,KAAmB,GACvD9nB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,GAErBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAAgCrN,EAAA8Q,qBAAA,0BAAStH,EAAA40C,QAAA50C,EAAAse,MAAgB,EAAI,KAAK,GAC9D9nB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,wBAAAtN,GAEtBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAA6BrN,EAAA8Q,qBAAA,0BAAStH,EAAA60C,UAAU,GAC5Cr+C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,YAzCrBA,EAAA+Q,qBAAA,MAAAvH,EAAAkmC,QAAA1vC,CAAe,OAAAwJ,EAAAse,KAAf9nB,CAAe,SAAAwJ,EAAA2zC,OAAfn9C,CAAe,WAAAA,EAAA4V,sBAAA,IAAApM,EAAAN,UAAflJ,CAAe,SAAAA,EAAA4V,sBAAA,KAAApM,EAAAue,QAAf/nB,CAAe,UAAAA,EAAA4V,sBAAA,KAAApM,EAAA6zC,UAgBPr9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAsN,MAAA9W,CAAmB,iBAAAA,EAAA0R,0BAAA,GAAAC,IAIC3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,KAAApM,EAAAmZ,2XA0B3BqkC,CAAmB,wNCvEhC,IAAAl5C,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,sMA0DwBoC,EAAAqN,yBAAA,yBAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAAjR,EAAAkR,wBAAA8b,GAAA,IAAA7M,EAAAngB,EAAAqR,wBAAA,UAAarR,EAAAsR,sBAAA6O,EAAAgY,gBAAAlnB,GAAuB,EAApCjR,CAAqC,oBAAAiR,GAAAjR,EAAAkR,wBAAA8b,GAAA,IAAAhN,EAAAhgB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA0O,EAAA4jC,KAAA3yC,EAAA,GAGxCjR,EAAAsN,wBAAA,4CANGtN,EAAA+Q,qBAAA,eAAA4Q,EAAAoa,UAAA,KAAApa,EAAAoa,UAAA1oB,GAAArT,CAAwB,WAAA2hB,EAAAua,aAAxBl8B,CAAwB,YAAA2hB,EAAA0W,UAAA,2BAHhCr4B,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAs1C,EAAA,2BASJrnD,EAAA0hB,wGARS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAoB,EAAAsnC,KAAAz5C,CAAuB,WAAAqtB,EAAA,+DAcpCrtB,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAC,EAAAlW,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA4E,EAAA6lB,UAAqB,KAAI,GAN7B/7B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,+DAgCItN,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAk2B,GAAA,IAAAhxB,EAAApW,EAAAqR,0BAAA+E,SAAAwtC,KAAgB,KAAI5jD,EAAAsR,sBAAA8E,EAAA2lB,UAAc,KAAI,GAEtC/7B,EAAAuN,iBAAA,cACJvN,EAAAsN,wBAAA,+DA4BRtN,EAAAqN,yBAAA,mBAGIrN,EAAA8Q,qBAAA,oBAAAG,GAAAjR,EAAAkR,wBAAAm2B,GAAA,IAAAhpB,EAAAre,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA+M,EAAA0d,UAAA9qB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAHItN,EAAA+Q,qBAAA,iBAAAK,EAAA2qB,UAAA,+DAMJ/7B,EAAAqN,yBAAA,oBAIIrN,EAAA8Q,qBAAA,mBAAAG,GAAAjR,EAAAkR,wBAAAo2C,GAAA,IAAA9M,EAAAx6C,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAkpC,EAAAze,UAAA9qB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAJItN,EAAA+Q,qBAAA,OAAAc,EAAA+xC,KAAA5jD,CAAa,iBAAA6R,EAAAkqB,UAAA,KAAAlqB,EAAAkqB,UAAA1oB,GAAA,EA3JhB3T,iBAAiB,oBAmKjBA,6BAA0B,eAA1B+kD,EAA0B,WAcnC,SAAAA,EACYlG,EACAv9C,EACAguB,EAEA4nB,GAGP/2C,EAAAC,KAAA2kD,GAPO3kD,KAAAy+C,cACAz+C,KAAAkB,YACAlB,KAAAkvB,cAEAlvB,KAAA82C,QAjBL92C,KAAAqf,SAA2B,GAC3Brf,KAAA25C,KAAO,OACP35C,KAAA8jD,KAAoB,KAoBvB9jD,KAAKqf,SAAQ8D,EAAQ2zB,EAAMpe,OAAS,IACpC14B,KAAKkvB,YAAYrc,WAAWikC,EAAM/zB,QACtC,CAACjjB,SAAA6kD,EAAA,EAAAljD,IAAA,eAAAkE,IApBD,WACI,OAAO3F,KAAKqf,SAASvD,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAApT,IAAA,YAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc/F,EAAA8kD,iBAAmB,EAC3D,GAAC,CAAAjjD,IAAA,aAAAC,MAgBM,SAAW6R,GACd,OAAOA,GAAMvT,KAAKo8B,aAAan2B,SAASsN,EAC5C,GAAC,CAAA9R,IAAA,cAAAC,MAEM,SAAYua,EAAoBogB,GACnC,IAAMnpB,EAAOlT,KAAKqf,SAASrD,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAO0I,EAAK1I,EAAE,GACrD8oB,GAAOnpB,EAAKijB,KAAKla,GACrBjc,KAAKqf,SAAWnM,GACXlT,KAAK82C,MAAM/zB,QAAQ2U,OAAS2E,GAAOr8B,KAAKy+C,YAAYz2C,MAAM,CAACiU,GACpE,GAAC,CAAAxa,IAAA,kBAAAC,MAEM,SAAgBua,GACnB,IAAMud,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAASgW,EAAK1I,IAEtCvT,KAAKkB,UAAUw4B,gBAAgB95B,EAAA8kD,eAD/BjrB,EAC6C,GAAAr1B,OAAA+e,EACtCqW,GAAQ,CACXvd,EAAK1I,KAKLimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM4Y,EAAK1I,EAAE,GAGhD,KAACoxC,CAAA,CArDkC,GAA1BA,SAA0B,mBAAA1kD,iBAA1B0kD,GAA0BzkD,EAAAwI,4BAAAC,EAAA+1C,cAAAx+C,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAkBvBsF,EAAAsuB,iBAAe,EAlBlBqoB,EAA0B,UAAAzkD,EAAA,kCAA1BykD,EAA0Bx7C,UAAA,0BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wOAtJd0iB,UAAAC,MAAAC,EAAA,8nCAwERF,UAAAG,MAAAD,EAAA,wXAgBwCF,UAAAI,MAAAF,EAAA,qIAGMF,UAAAM,MAAAJ,EAAA,oHAC3C,+LA2B+BF,UAAAO,MAAAL,EAAA,oGACnB,8XA3DfF,UAAA+mB,MAAA7mB,EAAA,uVApEThwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAAoBzuB,EAAAsN,yBACpBtN,EAAAqN,yBAAA,UAAArN,CAA4D,cAOpDA,EAAA8Q,qBAAA,0BAAAtH,EAAAiwC,KAAgB,KAAK,GAErBz5C,EAAAuN,iBAAA,WACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,0BAAAtH,EAAAiwC,KAAgB,MAAM,GAEtBz5C,EAAAuN,iBAAA,aACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,uBAGAzJ,EAAAqN,yBAAA,WAAArN,CAEC,gCAGOA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAiwC,KAAAxoC,CAAA,GACHjR,EAAAsN,yBACDtN,EAAA+R,qBAAA,GAAAw1C,EAAA,uBAWJvnD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAGIrN,EAAA+R,qBAAA,GAAAy1C,EAAA,iBAWAxnD,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAA+R,qBAAA,GAAA01C,EAAA,iBAUAznD,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BACiCtH,EAAA6yB,YAAA7yB,EAAAuyB,WACvDvyB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IACA,GACsBrT,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAMAzuB,EAAAsN,wBAAAtN,WAMpBA,EAAA+R,qBAAA,GAAA21C,EAAA,0BAAA1nD,EAAAkmB,kCAQAlmB,EAAA+R,qBAAA,GAAA41C,EAAA,0BAAA3nD,EAAAkmB,0EApIgBlmB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,kBAAAlW,EAAAiwC,MAUAz5C,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,mBAAAlW,EAAAiwC,MAkBAz5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAiwC,MAEWz5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAo6C,KAAA5jD,CAAa,WAAAmR,GAqB3BnR,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,WAWD/7B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,OAAAlW,EAAAuyB,WADA/7B,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAeAnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAUJnf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA2V,SAAAha,QAAAnF,EAAA6uB,sBAAA,IAMS7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAo6C,MAWD5jD,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KADArT,EAAA+Q,qBAAA,YAAAvH,EAAAuyB,WAO8B/7B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,gBAS1BrT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,wCAAArT,EAAA6uB,sBAAA,yNAyBf41B,CAA0B,2PC5KvC,IAAAnkD,EAAA1C,EAAA,OACAyC,EAAAzC,EAAA,MAMAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,UAQAA,EAAA,4BAwBa8B,iBAAc,eAAd+lD,EAAc,WA8DvB,SAAAA,EAAoBxkD,GAAyBpB,EAAAC,KAAA2lD,GAAzB3lD,KAAAmB,OA7DZnB,KAAA8nD,OAAS,IAAIhuC,EAAAqB,gBAAgB,IAC7Bnb,KAAAs9C,QAAU,IAAIxjC,EAAAqB,gBAAgB,GACtBnb,KAAAwlD,kBAAiB1rC,EAAAgJ,eAAc,CAC3C9iB,KAAKmB,KAAKkX,gBACVrY,KAAKs9C,UACNn6C,QACC7C,EAAA0b,QAAO,SAAA1V,GAAK,QAAL0c,EAAA1c,EAAA,GAAK,EAAW,MACvBhG,EAAAwxB,WAAU,SAAA7O,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAK,SACX1iB,EAAA6uC,mBADWlsB,EAAA,GACW3P,GAAI,CAAEE,KAAM,YAAatQ,QAC3C7C,EAAAmyB,YAAW,oBAAM3Y,EAAAO,IAAG,IAAI9Z,EAAAwnD,cAAgB,GAC3C,MAELznD,EAAAwb,KAAI,SAACzY,GAAsB,SACvB7C,EAAAoyB,SACIvvB,EAAEyY,IAAI,SAACzY,GAAC,IAAA2kD,EAAAC,EAAA,OACc,QAAlBD,EAAA3kD,EAAEksC,SAAS/a,eAAO,IAAAwzB,OAAA,EAAlBA,EAAoB5wC,mBAAmBoyB,MACf,QADoBye,EACtC5kD,EAAEksC,SAAS/a,eAAO,IAAAyzB,OAAA,EAAlBA,EAAoB7wC,QAAQ0E,IAAI,SAACgoC,GAAI,OAAAvxB,IAAA,GAC9BuxB,GAAI,IACPhwC,KAAMzQ,EAAEyQ,MAAI,GAEhB,EAAE,GAEf,MAELxT,EAAAuyB,aAAY,IAGA7yB,KAAAkoD,SAAWloD,KAAKwlD,eAAeriD,QAC3C7C,EAAAwb,KAAI,SAACqsC,GACD,IAC4BrxB,EADtBtC,EAAU,GAAGuC,EAAAC,EACAmxB,GAAS,QAAAlxB,EAAA,WAAE,IAAnB6sB,EAAIhtB,EAAAp1B,MACX8yB,EAAQ2B,KAAInxB,MAAZwvB,EAAOrR,EACA2gC,EAAKtvB,QAAQ1Y,IACZ,SAACzY,GAAC,OAAAkvB,IAAA,GAESlvB,GAAC,IACJosC,QAASqU,EAAKvwC,GACd60C,SAAUtE,EAAKhwC,KAAKP,IAAE,MAP1C,IAAAwjB,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAAH,GAWC,OAAAtM,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,OAAO7C,CACX,IAGYx0B,KAAAqoD,qBAAoBvuC,EAAAgJ,eAAc,CAC9C9iB,KAAK8nD,OACL9nD,KAAKkoD,WACN/kD,QACC7C,EAAAwb,KAAI,SAAA2hB,GAAA,IAAA1K,EAAA/P,EAAAya,EAAA,GAAEzmB,EAAK+b,EAAA,GAAS,OAAAA,EAAA,GACR/W,OACJ,SAAC3Y,GAAC,QAAO2T,GAAS3T,EAAE+kD,WAAapxC,IAAU3T,EAAEonC,QAAQ,EACxD,GAQuC,CAAC3qC,SAAA6lD,EAAA,EAAAlkD,IAAA,WAAAC,MAJ1C,SAASsV,GACZhX,KAAK8nD,OAAOtlD,KAAKwU,EACrB,GAAC,CAAAvV,IAAA,cAAAC,OAAA4mD,EAAA3mD,EAAAC,IAAAC,KAIM,SAAAC,EAAkB0yB,GAAqB,OAAA5yB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,KACpCjC,EAAAgoD,gBAAevoD,KAAKmB,KAAK6U,SAASzC,GAAI,CACxCE,KAAM,UACNE,YAAa,GACbyD,QAASod,IACX,OACFx0B,KAAKs9C,QAAQ96C,KAAK+X,KAAKgX,OAAO,wBAAAjvB,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACjC,SAAAwoD,EAAArrC,GAAA,OAAAmrC,EAAAtjD,MAAAhF,KAAAiF,UAAA,MAAA0gD,EAXA,IAAA2C,CAWA,CAvEsB,GAAd3C,SAAc,mBAAA1lD,iBAAd0lD,GAAczlD,EAAAsd,mBAAA7U,EAAAG,qBAAA,EAAd68C,EAAc,WAAAzlD,EAAA,oCAAdylD,EAAcloC,QAAdkoC,EAAcjoC,UAAAC,WAFX,SAEHgoC,CAAc,wLCzC3B,IAAA17C,EAAAnM,EAAA,OAOAK,EAAAL,EAAA,UACAA,EAAA,uGAiBgBoC,EAAAyJ,oBAAA,+DACIzJ,EAAA+Q,qBAAA,SAAAqX,EAAA3L,MAAA6O,OAAA,wHAXZtrB,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,eASIrN,EAAA+R,qBAAA,EAAAw2C,EAAA,wBAKAvoD,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAF,EAAAtJ,MAAAyX,OAAY,GAGrBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAU,EAAA7R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAO,EAAAioB,UAAAva,OAAgB,GAGzBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,UAAArN,CAAsD,eAAtDA,CAAsD,WAG1CA,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,eAAArN,CAAmC,YAC/BA,EAAAyuB,iBAAA,OAA4CzuB,EAAAsN,yBAC5CtN,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAmCzuB,EAAAsN,wBAAAtN,GAEvCA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,mBAAYvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,KAGRA,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,gBAAArN,CAAsC,YAClCA,EAAAyuB,iBAAA,OAAoDzuB,EAAAsN,yBACpDtN,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,wBAAAtN,GAE1BA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAA0BzuB,EAAAsN,wBAAAtN,GAE9BA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAkBzuB,EAAAsN,wBAAAtN,KAG1BA,EAAAqN,yBAAA,iBAIIrN,EAAAyJ,oBAAA,yBAMJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA2D,gBAMnDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAwQ,EAAA3hB,EAAAqR,0BAAAsQ,SAAAoY,QAAApY,EAAAoY,OAA2B/5B,EAAAsR,sBAAAqQ,EAAAqY,aAAAza,KAAAoC,EAAAoY,QAAyB,GAEpD/5B,EAAAqN,yBAAA,YAAArN,CAA8C,kBACfA,EAAAuN,iBAAA,IAEzBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,OAIhBA,EAAA0hB,iCAAA,2CA9GQ1hB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAsK,MAAA6O,OAAA,KAAAnZ,EAAAsK,MAAA6O,OAAAnmB,OAAAnF,CAAsC,aAAAmS,EAAAsK,MAAA6O,OAAA,KAAAnZ,EAAAsK,MAAA6O,OAAAnmB,OAAtCnF,CAAsC,iBAAAmS,EAAAsK,MAAA6O,QAAAnZ,EAAAsK,MAAA6O,OAAAnmB,QAAtCnF,CAAsC,eAAAmS,EAAAsK,MAAA6O,QAAAnZ,EAAAsK,MAAA6O,OAAAnmB,QAAtCnF,CAAsC,0BAAAmS,EAAAsK,MAAA6O,QAAAnZ,EAAAsK,MAAA6O,OAAAnmB,SAQjCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAoB,EAAAsK,MAAA6O,OAAA,KAAAnZ,EAAAsK,MAAA6O,OAAAnmB,QAgBDnF,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAAvN,EAAA8nB,IAAAj6B,CAAyB,gBAAAmS,EAAA8nB,KAKfj6B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA8nB,IAAA,8BAQNj6B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAAsK,MAAAlH,cAAApD,EAAAsK,MAAAlJ,KAAA,KAQmCvT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAxc,EAAAsK,MAAAmD,UAAA5f,EAAA6uB,sBAAA,IAK/B7uB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA0E,EAAA2E,MAAA,KAAA3E,EAAA2E,MAAAvB,gBAAA,MAAApD,EAAA2E,MAAA,KAAA3E,EAAA2E,MAAAvD,MAAA,KAMAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA0E,EAAA2D,SAAA,KAAA3D,EAAA2D,SAAA6Z,WAAA,MAAAxd,EAAA2D,SAAA,KAAA3D,EAAA2D,SAAAP,gBAAA,MAAApD,EAAA2D,SAAA,KAAA3D,EAAA2D,SAAAvC,MAAA,KA8BJvT,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,MAAAoB,EAAAu9B,QAAA1vC,CAAe,WAAAmS,EAAAjJ,SAAflJ,CAAe,UAAAA,EAAA0R,0BAAA,GAAA82C,IAUnBxoD,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAvN,EAAA4nB,QAK+B/5B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA4nB,OAAA,gBAIvB/5B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4nB,OAAA,+DAOhB/5B,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,IAiBHN,+BAA4B,eAA5B+oD,EAA4B,WAwBrC,SAAAA,EAAoBxnD,GAAyBpB,EAAAC,KAAA2oD,GAAzB3oD,KAAAmB,OAtBJnB,KAAAm6B,KAAe,EACfn6B,KAAAi6B,QAAkB,EAEjBj6B,KAAAk6B,aAAe,IAAIjwB,EAAAsV,aACnBvf,KAAAgI,MAAQ,IAAIiC,EAAAsV,aACZvf,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAE1Bvf,KAAA4vC,QAAU,GACV5vC,KAAAoJ,SAA4B,EAca,CAACtJ,SAAA6oD,EAAA,EAAAlnD,IAAA,QAAAkE,IAZjD,WAAgB,IAAAijD,EAAAC,EACZ,OAAO7oD,KAAKmB,KAAKwuB,YAAY,CAAW,QAAXi5B,EAAC5oD,KAAK2c,aAAK,IAAAisC,OAAA,EAAVA,EAAY90C,KAAKP,OAAkB,QAAds1C,EAAI7oD,KAAK2c,aAAK,IAAAksC,OAAA,EAAVA,EAAY/0C,KACvE,GAAC,CAAArS,IAAA,WAAAkE,IAED,WAAmB,IAAArE,EAAAtB,KACf,OAAOA,KAAKmB,KAAK+U,UAAU0Z,KACvB,SAACvsB,GAAC,IAAAylD,EAAAC,EAAA,OACY,QAAVD,EAAAxnD,EAAKqb,aAAK,IAAAmsC,OAAA,EAAVA,EAAYh1C,KAAKP,MAAOlQ,EAAEkQ,KAChB,QAAVw1C,EAAAznD,EAAKqb,aAAK,IAAAosC,OAAA,EAAVA,EAAYj1C,KAAKC,aAAc1Q,EAAEkQ,EAAE,EAE/C,GAAC,CAAA9R,IAAA,cAAAC,MAIM,SAAY24B,GACXA,EAAQ1d,OAAS3c,KAAK2c,OACtB3c,KAAKgpD,gBAEb,GAAC,CAAAvnD,IAAA,iBAAAC,MAEO,WAAc,IAAAs8C,EAAAiL,EAClBjpD,KAAK4vC,QAAoB,QAAboO,EAAGh+C,KAAKgX,aAAK,IAAAgnC,OAAA,EAAVA,EAAYtqC,OAC3B1T,KAAKoJ,SAAW,CACZ,CACIrD,SAAoB,QAAZkjD,EAAEjpD,KAAK2c,aAAK,IAAAssC,OAAA,EAAVA,EAAYv1C,OACtBmU,QAAS1pB,EAAA2pB,iBAGrB,KAAC6gC,CAAA,CAxCoC,GAA5BA,SAA4B,mBAAA1oD,iBAA5B0oD,GAA4BzoD,EAAAwI,4BAAAC,EAAAG,qBAAA,EAA5B6/C,EAA4B,UAAAzoD,EAAA,kCAA5ByoD,EAA4Bx/C,UAAA,4BAAAuW,OAAA,CAAA/C,MAAA,QAAAwd,IAAA,MAAAF,OAAA,UAAAta,QAAA,CAAAua,aAAA,eAAAlyB,MAAA,QAAAgyB,UAAA,aAAA5wB,SAAA,CAAAlJ,EAAAo6B,gCAAAhxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,8hBA7FgB0iB,UAAAC,MAAAC,EAAA,8HAGzBF,UAAAG,MAAAD,EAAA,0JAqByBF,UAAAI,MAAAF,EAAA,gGAGzBF,UAAAM,MAAAJ,EAAA,+FAIAF,UAAAO,MAAAL,EAAA,mGAIAF,UAAA+mB,MAAA7mB,EAAA,ikBAuCuBF,UAAAqrB,MAAAnrB,EAAA,wJAxH/ChwB,EAAA+R,qBAAA,EAAAi3C,EAAA,wBAmHAhpD,EAAA+R,qBAAA,EAAAk3C,EAAA,yBAAAjpD,EAAAkmB,yEAnHelmB,EAAA+Q,qBAAA,OAAAvH,EAAAiT,MAAAzc,CAAa,WAAAiuB,EAAA,gTA2IvBw6B,CAA4B,wRC1JzC,IAAA1+C,EAAAnM,EAAA,OAEA0C,GADA1C,EAAA,OACAA,EAAA,QAGAwC,GAFAxC,EAAA,OACAA,EAAA,MACAA,EAAA,QACAsrD,EAAAtrD,EAAA,2GAuCYoC,EAAAqN,yBAAA,YAMIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAAtM,SAAA,mEAYJ7F,EAAAqN,yBAAA,WAAArN,CAAkE,OAC3DA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAAuoC,EAAAr5C,EAAAkR,wBAAA4Q,GAAAjE,UAAAuK,EAAApoB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8W,EAAA+gC,cAAA9P,GAAmB,GAE5Br5C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,2BAP3BA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAolC,EAAA,EAoCN35C,sCAAoC,eAApC0pD,EAAoC,SAAAzoD,GAAAC,EAAAwoD,EAAAzoD,GAAA,IAiC5C0oD,EAjC4CvoD,EAAAC,EAAAqoD,GAkB7C,SAAAA,EACY5P,EACAxqB,EACA/tB,GAAyB,IAAAG,EAAAvB,SAAAC,KAAAspD,IAEjChoD,EAAAN,EAAAO,KAAAvB,OAJQ05C,UACAp4C,EAAA4tB,cACA5tB,EAAAH,OApBIG,EAAAq4C,KAAuB,OACtBr4C,EAAAs4C,WAAa,IAAI3vC,EAAAsV,aAClBje,EAAAyhB,QAAUzhB,EAAK4tB,YAAYnM,QACpCzhB,EAAAyE,SAAmB,GAWVzE,EAAAkoD,YAAc,kBAC1BloD,EAAKo4C,QAAQ3kC,KAAKq0C,EAAAK,6BAA6B,EAACnoD,CAQpD,CAACxB,SAAAwpD,EAAA,EAAA7nD,IAAA,QAAAkE,IAlBD,WACI,OAAO3F,KAAKkvB,YAAYxe,KAAKhP,MAAMsQ,IACvC,GAAC,CAAAvQ,IAAA,MAAAkE,IAED,WACI,IAAA+jD,EAA2B1pD,KAAKkvB,YAAYxe,KAAKhP,MACjD,OADYgoD,EAAJ13C,KACiB,GADH03C,EAARp1C,SACgB,GAClC,GAAC,CAAA7S,IAAA,WAAAC,MAaM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAK+S,aACD,OACA/S,KAAK+iB,QAAQ9P,UAAU,SAAA3M,GAAW,OAC9BnB,EAAKwkD,gBADyBrjD,EAARsjD,SACQ,GAG1C,GAAC,CAAAnoD,IAAA,gBAAAC,OAAA6nD,EAAA5nD,EAAAC,IAAAC,KAEM,SAAAC,EAAoB+nD,GAAY,IAAAnoD,EAAA,OAAAE,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACfxC,KAAKkvB,YAAYnM,QAAQ5f,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OACtEtD,KAAKkvB,YAAYrc,WAAU0f,IAAA,GADrB7wB,EAAKY,EAAA4B,MAEC,IACRkF,UAAW1H,EAAM0H,UAAY,IAAI4S,OAAO,SAAC3Y,GAAC,OAAKA,IAAMwmD,CAAI,MAC1D,wBAAAvnD,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACN,SAAAqpD,EAAAlsC,GAAA,OAAAosC,EAAAvkD,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAEO,WAAuC,IAErCua,EADQjc,KAAKmB,KAAKwuB,YADJ1qB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,KAEnBjF,KAAKmB,KAAK6U,SAChChW,KAAK+F,SAAWkW,GAAMxG,cAAgBwG,GAAMxI,MAAQ,EACxD,KAAC61C,CAAA,CA/C4C,CAAQ9oD,EAAAiI,cAA5C6gD,SAAoC,mBAAArpD,iBAApCqpD,GAAmCppD,EAAAwI,4BAAAC,EAAA2M,gBAAApV,EAAAwI,4BAAAG,EAAAwM,kBAAAnV,EAAAwI,4BAAAK,EAAAD,qBAAA,EAAnCwgD,EAAoC,UAAAppD,EAAA,kCAApCopD,EAAmCngD,UAAA,oCAAAuW,OAAA,CAAAi6B,KAAA,QAAAh6B,QAAA,CAAAi6B,WAAA,cAAAxwC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,kJAlFnC0iB,UAAAC,MAAAC,EAAA,uLAWIF,UAAAG,MAAAD,EAAA,0JAUAF,UAAAI,MAAAF,EAAA,oYAqBuDF,UAAAM,MAAAJ,EAAA,gHACnD,oPAlDbhwB,EAAAqN,yBAAA,cAAArN,CAAmE,cAK3DA,EAAA8Q,qBAAA,0BAAStH,EAAA8/C,aAAa,GAJ1BtpD,EAAAyuB,iBAAA,KAQAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAA+B,cAMvBA,EAAA8Q,qBAAA,mBAAAtH,SAAAiwC,KAAgB,MAAOjwC,EAAAkwC,WAAAn6B,KAAA/V,EAAAiwC,KAAqB,GALhDz5C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,mBAAAtH,SAAAiwC,KAAgB,OAAQjwC,EAAAkwC,WAAAn6B,KAAA/V,EAAAiwC,KAAqB,GALjDz5C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,eACIrN,EAAA+R,qBAAA,EAAA63C,EAAA,aAQA5pD,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,kCACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAEJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,sCAEAzuB,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA83C,EAAA,6CAWJ7pD,EAAAsN,gCAhDYtN,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,kBAAAlW,EAAAiwC,MAUAz5C,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,mBAAAlW,EAAAiwC,MAaHz5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA3D,UAKD7F,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,MAAA3K,EAAAq8B,MAAA,mBAGA7lC,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAA3f,EAAAmU,sBAAA,MAAA3K,EAAAq8B,MAAA,wBAAA7lC,EAAAmU,sBAAA,MAAA3K,EAAAub,IAAA,kBAKJ/kB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAAqrB,EAAAh6C,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAm3B,EAAA8P,WAAA,GAAA9pD,EAAA6uB,sBAAA,IACkC7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAg5C,EAAA/pD,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAknC,EAAA7gD,kjBAqCjCkgD,CAAoC,yPCnGjDxrD,EAAA,OACAA,EAAA,OACAA,EAAA,MAFA,IAGAwC,EAAAxC,EAAA,UACAA,EAAA,qOAOgBoC,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAF,EAAAtJ,QAAO,GAEhB9H,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,yBAAmBvN,EAAAsN,wBAAAtN,EAAW,2BAuBhCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GAEJvN,EAAAsN,iDAJItN,EAAA+Q,qBAAA,QAAAi5C,EAAA32C,IAEArT,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAAqqC,EAAAlxC,IAAA,KAAAkxC,EAAAz0C,cAAAy0C,EAAAz2C,KAAA,2GA2DhBvT,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,qBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,IAAAg5C,GAAAjqD,EAAAkR,wBAAAsE,GAAAqI,UAAApI,GAAAzV,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAmE,GAAAy0C,cAAAD,GAAAh5C,IAA2B,iCAE/CjR,EAAAsN,wBAAAtN,EAAe,4DANqBA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAg2C,GAGjCjqD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAwN,EAAAve,EAAA4V,sBAAA,IAAA+L,EAAAkB,WAAA,MAAAtE,EAAArV,SAAA,KAAAqV,EAAArV,SAAAnD,SAAAkkD,GAAAjqD,CAAuD,iBAAAA,EAAA0R,0BAAA,EAAAy4C,GAAA,2BAbnEnqD,EAAAqN,yBAAA,eAAArN,CAIC,UACGA,EAAAyuB,iBAAA,MAA+CzuB,EAAAsN,yBAC/CtN,EAAA+R,qBAAA,EAAAq4C,EAAA,4CAYJpqD,EAAAsN,iEAVyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAnE,EAAAvI,UAAA,+DAY7BlJ,EAAAqN,yBAAA,WAAArN,CAGC,eAC8CA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAC,EAAAlW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4E,EAAApO,QAAO,GAA3D9H,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,EAAS,EAcRN,+BAA4B,eAA5B6pD,EAA4B,WAgCrC,SAAAA,EAEY3O,EACA55C,EACAqpD,EACAppD,GAAyB,IAAAG,EAAAtB,KAAAD,EAAAC,KAAAypD,GAHzBzpD,KAAA86C,cACA96C,KAAAkB,YACAlB,KAAAuqD,QACAvqD,KAAAmB,OApCLnB,KAAA+6C,WAAY,EACH/6C,KAAA+iB,QAAU/iB,KAAKuqD,MAAMxnC,QAErB/iB,KAAA6iB,OAAS7iB,KAAKmB,KAAKqpD,WAAWrnD,QAC1C7C,EAAAwb,KAAI,SAACwZ,IAAK,IACawB,GADbC,GAAAC,EACY1B,IAAC,QAAA2B,GAAA,WAAE,IAAVwzB,GAAG3zB,GAAAp1B,MACJsX,GAAM1X,EAAKH,KAAK+U,UAAU0Z,KAC5B,SAACvsB,IAAC,OAAKA,GAAEkQ,KAAOk3C,GAAI12C,SAAS,GAEhC02C,GAAYzxC,IAAMA,IAAKvD,cAAgBuD,IAAKvF,MAAQ,IAJzD,IAAAsjB,GAAApN,MAAAmN,GAAAC,GAAAI,KAAAC,MAAAH,IAKC,OAAAtM,GAAAoM,GAAA7R,EAAAyF,EAAA,SAAAoM,GAAAM,GAAA,CACD,OAAO/B,EACX,IAEYt1B,KAAAoJ,SAAWpJ,KAAKuqD,MAAMnhD,SAEtBpJ,KAAAgI,MAAQ,kBAAM1G,EAAKw5C,YAAY/7B,SAAS,EACxC/e,KAAA6S,WAAa,SAACyQ,IAAC,OAAKhiB,EAAKipD,MAAM13C,WAAWyQ,GAAE,EAqBxDtjB,KAAK+6C,YAAc/6C,KAAK86C,WAC5B,CAACh7C,SAAA2pD,EAAA,EAAAhoD,IAAA,MAAAkE,IApBD,WACI,OAAO3F,KAAKmB,KAAK6U,QACrB,GAAC,CAAAvU,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKuqD,MAAM75C,IACtB,GAAC,CAAAjP,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAlE,IAAA,gBAAAC,OAAAgpD,EAAA/oD,EAAAC,IAAAC,KAYM,SAAAC,EAAoB+nD,EAAcxtB,GAAc,IAAAsuB,GAAA,OAAA/oD,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACxBxC,KAAK+iB,QAAQ5f,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAC3DqnD,IAD2DroD,EAAA4B,KAAzDkF,UACsB,IAAI4S,OAAO,SAAC3Y,IAAC,OAAKwmD,IAASxmD,EAAC,GACtDg5B,GAAOsuB,GAASx0B,KAAK0zB,GACzB7pD,KAAK6S,WAAW,CAAEzJ,SAAUuhD,KAAY,wBAAAroD,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC3C,SAAAoqD,EAAAjtC,EAAAwmB,GAAA,OAAA+mB,EAAA1lD,MAAAhF,KAAAiF,UAAA,MAAAwkD,EAjBA,IAAAiB,CAiBA,CA/CoC,GAA5BjB,SAA4B,mBAAAxpD,iBAA5BwpD,GAA4BvpD,EAAAwI,4BAAAC,EAAAsW,kBAAA,GAAA/e,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAAAO,EAAAH,qBAAA,EAA5B2gD,EAA4B,UAAAvpD,EAAA,kCAA5BupD,EAA4BtgD,UAAA,4BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,kNArHmB0iB,UAAAC,MAAAC,EAAA,yRAQPF,UAAAG,MAAAD,EAAA,0JAENF,UAAAI,MAAAF,EAAA,kSAqBJF,UAAAM,MAAAJ,EAAA,2HAAI,kBAAO,6DACoBF,UAAAO,MAAAL,EAAA,qMAO7CF,UAAA+mB,MAAA7mB,EAAA,iIAAU,kBAAO,0GAWjBF,UAAAqrB,MAAAnrB,EAAA,+HAAQ,kBAAO,qHAaSF,UAAAsrB,MAAAprB,EAAA,sJAEQF,UAAAurB,MAAArrB,EAAA,8WAiBRF,UAAAwrB,MAAAtrB,EAAA,8VAmByBF,UAAAyrB,MAAAvrB,EAAA,yIAjHtEhwB,EAAAqN,yBAAA,UAAArN,CAAuE,WAE/DA,EAAA+R,qBAAA,EAAA24C,EAAA,gBASJ1qD,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA6DzuB,EAAAsN,yBAC7DtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAGC,cAHDA,CAGC,UAEOA,EAAAyuB,iBAAA,KAA4CzuB,EAAAsN,yBAC5CtN,EAAAqN,yBAAA,YAAArN,CAAgD,eAC5CA,EAAAyuB,iBAAA,OAAmCzuB,EAAAsN,yBACnCtN,EAAAqN,yBAAA,uBAAArN,CAAoD,oBAI5CA,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAmJ,WAAA,CAAA+2C,SAAAz4C,IAAgC,kCAKjDjR,EAAA+R,qBAAA,GAAA44C,EAAA,oDAOJ3qD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAAkC,eAC9BA,EAAAg4B,sBAAA,OAA2Bh4B,EAAAyJ,oBAAA,WAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBACzCtN,EAAAqN,yBAAA,sBAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,eAEjCA,EAAAg4B,sBAAA,OACeh4B,EAAAyJ,oBAAA,WAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBAE7BtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAgH,KAAAe,WAAA,CAAAO,KAAAb,IAAiC,GAErDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAA0B,eACtBA,EAAAg4B,sBAAA,OACah4B,EAAAyJ,oBAAA,WAAczJ,EAAAi4B,sBAAAj4B,EAAAsN,yBAE3BtN,EAAAyJ,oBAAA,0BAOJzJ,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAAArN,CAAqC,WACjCA,EAAAyuB,iBAAA,OAA+CzuB,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,YAAArN,CAA+B,aAC3BA,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAmJ,WAAA,CAAA2mC,SAAAroC,IAAgC,kCAGrDjR,EAAAsN,wBAAAtN,KAGRA,EAAA+R,qBAAA,GAAA64C,EAAA,iDAmBJ5qD,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA84C,EAAA,qBAvGa7qD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAqxC,WAWT76C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,MASgBxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAgF,EAAA/V,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAA9M,EAAA2zC,SAAA1pD,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAy4C,GAAvCnqD,CAAuC,qBAAAwJ,EAAAsP,IAAA,KAAAtP,EAAAsP,IAAAvD,gBAAA,MAAA/L,EAAAsP,IAAA,KAAAtP,EAAAsP,IAAAvF,MAAvCvT,CAAuC,eAOnBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,MAAApM,EAAAmZ,SAsBpB3iB,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgH,KAAAhP,MAAAsQ,KAAA9R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAy4C,IAY3BnqD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAgH,MAAA,MAAAhH,EAAAgH,KAAAhP,MAAA,KAAAgI,EAAAgH,KAAAhP,MAAAsQ,KAAA9R,CAA0B,MAAAwJ,EAAAqO,cAe9B7X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAA+5C,EAAA9qD,EAAA4V,sBAAA,MAAApM,EAAAqZ,UAAA,KAAAioC,EAAAxR,SAAAt5C,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAy4C,IAU9CnqD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAg6C,EAAA/qD,EAAA4V,sBAAA,MAAApM,EAAAN,WAAA,KAAA6hD,EAAA5lD,QAmBJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAqxC,yeAkBA0O,CAA4B,oMC3IzC,IAAAx/C,EAAAnM,EAAA,OAEAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,6FA6B4BoC,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,4BAElBA,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,MAAAi6C,EAAA1/B,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,yEA3BhBzJ,EAAAqN,yBAAA,UAAArN,CAKC,eAKOA,EAAA8Q,qBAAA,uBAAAk6C,EAAAhrD,EAAAkR,wBAAAk2B,GAAAvpB,UAAAzH,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAA60C,YAAAD,GAAkB,GAE3BhrD,EAAAqN,yBAAA,YAGIrN,EAAA+R,qBAAA,EAAAm5C,EAAA,cAMAlrD,EAAA+R,qBAAA,EAAAo5C,EAAA,cAKAnrD,EAAA+R,qBAAA,EAAAq5C,EAAA,0BAAAprD,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAuB,YAEfA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IAOJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAiD,kBAExCA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAKAzuB,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAAk6C,EAAAhrD,EAAAkR,wBAAAk2B,GAAAvpB,UAAAQ,EAAAre,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA+M,EAAAyb,UAAAva,KAAAyrC,GAAqB,GAE9BhrD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFAvEjBA,EAAA0f,sBAAA,mBAAA7N,EAAAkoB,SAAAixB,EAAA33C,IAcarT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAc,EAAAsN,SAAApZ,SAAAilD,EAAA33C,KAKArT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAi6C,EAAA1/B,OAAA,KAAA0/B,EAAA1/B,OAAAnmB,OAAAnF,CAA4B,WAAAwV,GAa7BxV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAu9C,EAAAz3C,MAAA,qBAKIvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAu9C,EAAAnlD,WAAA,MAAAmlD,EAAAl0C,MAAA,KAAAk0C,EAAAl0C,MAAAvB,gBAAA,MAAAy1C,EAAAl0C,MAAA,KAAAk0C,EAAAl0C,MAAAvD,QAAA,MAAAy3C,EAAAp3C,KAAA,KAAAo3C,EAAAp3C,KAAA2B,gBAAA,MAAAy1C,EAAAp3C,KAAA,KAAAo3C,EAAAp3C,KAAAL,MAAA,KAkBJvT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAq8B,EAAAprC,SAAA,IAAAorC,EAAAprC,UAAA5f,EAAA6uB,sBAAA,IASR7uB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAA7N,EAAAkpB,YAAAiwB,EAAA33C,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAApC,EAAAkpB,YAAAiwB,EAAA33C,IAAA,wDA1EtBrT,EAAAqN,yBAAA,UAIIrN,EAAA+R,qBAAA,EAAAs5C,EAAA,4CA6EJrrD,EAAAsN,kEA3E0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAc,EAAAiB,QAAA,2BAP9B3X,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAu5C,EAAA,0CAkFJtrD,EAAA0hB,yGAhFS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAAwF,SAAA,KAAA2J,EAAAnc,OAAAnF,CAAgC,WAAAiuB,EAAA,wBAkFrCjuB,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,0BAIJA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,MAAsDzuB,EAAAsN,wBAAAtN,UADzCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAgBhBrR,4BAAyB,eAAzB6rD,EAAyB,WAiBlC,SAAAA,EAAoBlB,GAAyB,IAAAjpD,EAAAtB,KAAAD,EAAAC,KAAAyrD,GAAzBzrD,KAAAuqD,QAhBJvqD,KAAAi6B,OAAiB,GACjBj6B,KAAAqf,SAAmB,GACnBrf,KAAAu4B,UAAsB,GACrBv4B,KAAAu7B,SAAW,IAAItxB,EAAAsV,aACfvf,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAEjBvf,KAAA6X,UAASiC,EAAAgJ,eAAc,CACnC9iB,KAAKuqD,MAAMxnC,QACX/iB,KAAKuqD,MAAM3gB,sBACZzmC,QACC7C,EAAAwb,KAAI,SAAAxV,GAAA,IAAA8B,EAAA4a,EAAA1c,EAAA,GAAIkzC,EAAQpxC,EAAA,GAARoxC,SAAa,OAAApxC,EAAA,GACf4T,OAAO,SAACsW,GAAC,OAAMknB,GAAYl4C,EAAK25B,YAAY3I,EAAE/e,GAAG,EAAC,IAG5CvT,KAAAqjB,QAAUrjB,KAAKuqD,MAAMlnC,OAEW,CAACvjB,SAAA2rD,EAAA,EAAAhqD,IAAA,cAAAC,MAE1C,SAAYgqD,GACf,OAAO1rD,KAAKu4B,UAAUtyB,SAASylD,EACnC,GAAC,CAAAjqD,IAAA,cAAAC,MAEM,SAAYib,GACf3c,KAAKu7B,SAAS9b,KAAK9C,EACvB,KAAC8uC,CAAA,CAzBiC,GAAzBA,SAAyB,mBAAAxrD,iBAAzBwrD,GAAyBvrD,EAAAwI,4BAAAC,EAAAoI,oBAAA,EAAzB06C,EAAyB,UAAAvrD,EAAA,kCAAzBurD,EAAyBtiD,UAAA,yBAAAuW,OAAA,CAAAua,OAAA,SAAA5a,SAAA,WAAAkZ,UAAA,aAAA5Y,QAAA,CAAA4b,SAAA,WAAAvB,UAAA,aAAA1wB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kCAvHH0iB,UAAAC,MAAAC,EAAA,qIACmBF,UAAAG,MAAAD,EAAA,oHAC1C,+hCA4D4BF,UAAAI,MAAAF,EAAA,2GACJ,gcA8BmBF,UAAAM,MAAAJ,EAAA,6PAWZF,UAAAO,MAAAL,EAAA,6IAxGnChwB,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAkCzuB,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,mCAEAzuB,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA05C,EAAA,oDAoFAzrD,EAAA+R,qBAAA,EAAA25C,EAAA,yBAAA1rD,EAAAkmB,kCAUAlmB,EAAA+R,qBAAA,EAAA45C,EAAA,yBAAA3rD,EAAAkmB,4EA/FAlmB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAArN,EAAAthB,EAAA4V,sBAAA,IAAApM,EAAAmO,SAAA,KAAA2J,EAAAnc,SAAA,GAAAnF,EAAA6uB,sBAAA,GACe7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,IAAApM,EAAA2Z,SAAAnjB,CAA0B,WAAAqtB,EAAA,+PAmHpCk+B,CAAyB,2JC/HtC,IAAAttD,EAAAL,EAAA,6DAiEgBoC,EAAAyJ,oBAAA,kCAIAzJ,EAAAqN,yBAAA,iBACIrN,EAAAuN,iBAAA,YACJvN,EAAAsN,0BAMH5N,mCAAgC,eAAhCksD,EAAgC,WAIzC,SAAAA,EAA8ChV,GAAU/2C,EAAAC,KAAA8rD,GAAV9rD,KAAA82C,OAAa,CAACh3C,SAAAgsD,EAAA,EAAArqD,IAAA,WAAAkE,IAH5D,WACI,OAA+B,IAAxB3F,KAAK82C,MAAMz3B,QACtB,KAACysC,CAAA,CAHwC,GAAhCA,SAAgC,mBAAA7rD,iBAAhC6rD,GAAgC5rD,EAAAwI,4BAIrBvK,EAAA4tD,kBAAgB,EAJ3BD,EAAgC,UAAA5rD,EAAA,kCAAhC4rD,EAAgC3iD,UAAA,iCAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,ohEAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAxErCvJ,EAAAqN,yBAAA,WACIrN,EAAA8rD,2BAAA9rD,EAAAqN,yBAAA,UAAArN,CAMC,SAEOA,EAAAyJ,oBAAA,YAMJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,SAAArN,CAAM,cAUEA,EAAAyJ,oBAAA,cAAAzJ,CAGE,oBAHFA,CAGE,eAHFA,CAGE,qBAHFA,CAGE,mBAHFA,CAGE,sBAHFA,CAGE,gBAHFA,CAGE,iBAyBNA,EAAAsN,wBAAAtN,KAGRA,EAAA+rD,4BAAA/rD,EAAAqN,yBAAA,aAGIrN,EAAA+R,qBAAA,GAAAi6C,EAAA,cAIAhsD,EAAA+R,qBAAA,GAAAk6C,EAAA,mBAGJjsD,EAAAsN,wBAAAtN,UALSA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2V,UAEgDnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA2V,oEAQxDysC,CAAgC,kNC9E7C,IAAA7hD,EAAAnM,EAAA,OACA0C,EAAA1C,EAAA,OAGAwC,GAFAxC,EAAA,OAEAA,EAAA,QAEAsuD,EAAAtuD,EAAA,sKAKQoC,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,sBAAAG,GAAAjR,EAAAkR,wBAAAmc,GAAA,IAAA5b,EAAAzR,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAG,EAAAqW,KAAA7W,EAAA,EAAAjR,CAAe,wBAAAiR,GAAAjR,EAAAkR,wBAAAmc,GAAA,IAAAjc,EAAApR,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAF,EAAA+rC,OAAAlsC,EAAA,+DAElBjR,EAAAsN,wBAAA,2CALGtN,EAAA+Q,qBAAA,MAAAoB,EAAAu9B,QAAA1vC,CAAe,WAAAA,EAAA4V,sBAAA,IAAAzD,EAAAjJ,UAAflJ,CAAe,UAAAA,EAAA4V,sBAAA,IAAAzD,EAAAkrC,SAAfr9C,CAAe,OAAAmS,EAAA2V,KAAf9nB,CAAe,SAAAmS,EAAAgrC,OAAA,2BAePn9C,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAo7C,GAEAnsD,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0+C,EAAA52C,cAAA42C,EAAA54C,KAAA,MAoCX7T,iCAA+B,eAA/B0sD,EAA+B,SAAAzrD,GAAAC,EAAAwrD,EAAAzrD,GAAA,IAAAG,EAAAC,EAAAqrD,GA2CxC,SAAAA,EAAoBp9B,GAA6B,IAAA5tB,EAAAvB,SAAAC,KAAAssD,IAC7ChrD,EAAAN,EAAAO,KAAAvB,OADgBkvB,cA1CJ5tB,EAAA+d,SAAqB,GACrB/d,EAAA87C,cAAwB,EACvB97C,EAAAi6B,SAAW,IAAItxB,EAAAsV,aAEzBje,EAAA0mB,KAAO,EACP1mB,EAAA+7C,OAAS,CAAE5J,EAAG,GAAKC,EAAG,IAErBpyC,EAAAirD,cAAgB,SAAC5iC,GAAC,OAAK,kBAAMroB,EAAKi6B,SAAS9b,KAAKkK,EAAE,GACnDroB,EAAA0V,MAAuB,KAMd1V,EAAAuhB,OAASvhB,EAAK4tB,YAAYjU,iBAAiB9X,QACvD7C,EAAAwb,KAAI,SAACzY,GAAC,SAAK7C,EAAAipC,QAAOpmC,EAAEyY,IAAI,SAAAxV,GAAQ,OAAAA,EAAL0Q,KAAiB,GAAE,IAGlC1V,EAAA8H,SAAW9H,EAAK4tB,YAAYjU,iBAAiB9X,QACzD7C,EAAAmxB,cAAa,MAAI,EACjBnxB,EAAAwb,KAAI,SAACwZ,GAAC,OACFA,EAAExZ,IAAI,SAACa,GAAK,MAAM,CACd5W,SAAU4W,EAAMjJ,OAChBmU,QAASukC,EAAAN,iCACThpD,KAAIyvB,IAAA,GACG5V,GAAK,IACR0C,SAAU/d,EAAK+d,SAASpZ,SAAS0W,EAAMpJ,MAE9C,EAAE,IAIKjS,EAAAi8C,QAAUj8C,EAAK4tB,YAAYjU,iBAAiB9X,QACxD7C,EAAAwb,KAAI,SAACwZ,GAAC,OACFA,EAAExZ,IAAI,SAACa,GAAK,MAAM,CACdpJ,GAAIoJ,EAAMjJ,OACVyT,OAAQ,CAAC,WAAY,WACrBC,SAAU9lB,EAAKirD,cAAc5vC,GAChC,EAAE,IAETrb,CAIF,CAACxB,SAAAwsD,EAAA,EAAA7qD,IAAA,UAAAkE,IAlCD,WAAkB,IAAAq4C,EACd,OAAiB,QAAVA,EAAAh+C,KAAKgX,aAAK,IAAAgnC,OAAA,EAAVA,EAAYtqC,SAAU,EACjC,GAAC,CAAAjS,IAAA,WAAAC,MAkCM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAK+S,aACD,SACA/S,KAAKkvB,YAAYjU,iBAAiBhI,UAAU,SAAC5P,IACpC8B,EAAK6R,OAAS3T,EAAEgC,SAAQF,EAAK6R,MAAQ3T,EAAE,GAAG2T,MACnD,GAER,GAAC,CAAAvV,IAAA,UAAAC,MAEM,SAAQw8C,GACXl+C,KAAKgoB,KAAOoe,KAAK+X,IAAI,GAAK/X,KAAKgY,IAAI,GAAIF,GAC3C,GAAC,CAAAz8C,IAAA,WAAAC,MAEM,WACH1B,KAAKgoB,KAAO,EACZhoB,KAAKq9C,OAAS,CAAE5J,EAAG,GAAKC,EAAG,GAC/B,KAAC4Y,CAAA,CA/DuC,CAAQ9rD,EAAAiI,cAAvC6jD,SAA+B,mBAAArsD,iBAA/BqsD,GAA8BpsD,EAAAwI,4BAAAC,EAAA0M,kBAAA,EAA9Bi3C,EAA+B,UAAApsD,EAAA,kCAA/BosD,EAA8BnjD,UAAA,wBAAAuW,OAAA,CAAAL,SAAA,WAAA+9B,aAAA,gBAAAz9B,QAAA,CAAA4b,SAAA,YAAAnyB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,8rBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAzDnCvJ,EAAA+R,qBAAA,EAAAu6C,EAAA,eAQAtsD,EAAAqN,yBAAA,UAAArN,CAEC,qBAFDA,CAEC,kBAMmBA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAsN,MAAA7F,CAAA,GACRjR,EAAA+R,qBAAA,EAAAw6C,EAAA,kDAMJvsD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAGC,cACkCA,EAAA8Q,qBAAA,0BAAStH,EAAA40C,QAAe,IAAf50C,EAAAse,KAAmB,GACvD9nB,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,wBAAAtN,GAErBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAAgCrN,EAAA8Q,qBAAA,0BAAStH,EAAA40C,QAAA50C,EAAAse,MAAgB,EAAI,KAAK,GAC9D9nB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,wBAAAtN,GAEtBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAA6BrN,EAAA8Q,qBAAA,0BAAStH,EAAA60C,UAAU,GAC5Cr+C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,YAtCpBA,EAAA+Q,qBAAA,QAAAvH,EAAA0zC,cAeel9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAsN,OAEY9W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAApM,EAAAmZ,mYAuC3BypC,CAA+B,6NCnE5C,IAAAt+C,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,sMAiCoBoC,EAAAqN,yBAAA,2BAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAF,EAAA+mB,gBAAAlnB,GAAuB,EAApCjR,CAAqC,oBAAAiR,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAU,EAAA7R,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAO,EAAAkqB,UAAA9qB,EAAA,GAGxCjR,EAAAsN,wBAAA,2CANGtN,EAAA+Q,qBAAA,eAAAoB,EAAA4pB,UAAA,KAAA5pB,EAAA4pB,UAAA1oB,GAAArT,CAAwB,WAAAmS,EAAA+pB,aAAxBl8B,CAAwB,YAAAmS,EAAAkmB,UAAA,+DAuBhCr4B,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAotC,GAAA,IAAA38B,EAAA3hB,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAqQ,EAAAoa,UAAqB,KAAI,GAN7B/7B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,+DAqDJtN,EAAAqN,yBAAA,0BAIIrN,EAAA8Q,qBAAA,oBAAAG,GAAAjR,EAAAkR,wBAAAsE,GAAA,IAAAC,EAAAzV,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAmE,EAAAsmB,UAAA9qB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAJItN,EAAA+Q,qBAAA,WAAAqX,EAAA8T,aAAAl8B,CAAyB,iBAAAooB,EAAA2T,UAAA,EArH5Br8B,kBAAkB,2BA8HlBA,mCAAgC,eAAhC8sD,EAAgC,WAazC,SAAAA,EACYjO,EACAv9C,EACAguB,EAEA4nB,GAGP/2C,EAAAC,KAAA0sD,GAPO1sD,KAAAy+C,cACAz+C,KAAAkB,YACAlB,KAAAkvB,cAEAlvB,KAAA82C,QAhBL92C,KAAAqf,SAA2B,GAC3Brf,KAAA25C,KAAO,OAoBV35C,KAAKqf,SAAQ8D,EAAQ2zB,EAAMp6B,QAAU,IACrC1c,KAAKkvB,YAAYrc,WAAWikC,EAAM/zB,QACtC,CAACjjB,SAAA4sD,EAAA,EAAAjrD,IAAA,eAAAkE,IApBD,WACI,OAAO3F,KAAKqf,SAASvD,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAApT,IAAA,YAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc/F,EAAA+sD,kBAAoB,EAC5D,GAAC,CAAAlrD,IAAA,aAAAC,MAgBM,SAAW6R,GACd,OAAOA,GAAMvT,KAAKo8B,aAAan2B,SAASsN,EAC5C,GAAC,CAAA9R,IAAA,cAAAC,MAEM,SAAYua,EAAoBogB,GACnC,IAAMnpB,EAAOlT,KAAKqf,SAASrD,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAO0I,EAAK1I,EAAE,GACrD8oB,GAAOnpB,EAAKijB,KAAKla,GACrBjc,KAAKqf,SAAWnM,GACXlT,KAAK82C,MAAM/zB,QAAQ2U,OAAS2E,GAAOr8B,KAAKy+C,YAAYz2C,MAAM,CAACiU,GACpE,GAAC,CAAAxa,IAAA,kBAAAC,MAEM,SAAgBua,GACnB,IAAMud,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAASgW,EAAK1I,IAEtCvT,KAAKkB,UAAUw4B,gBAAgB95B,EAAA+sD,gBAD/BlzB,EAC8C,GAAAr1B,OAAA+e,EACvCqW,GAAQ,CACXvd,EAAK1I,KAKLimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM4Y,EAAK1I,EAAE,GAGhD,KAACm5C,CAAA,CApDwC,GAAhCA,SAAgC,mBAAAzsD,iBAAhCysD,GAAgCxsD,EAAAwI,4BAAAC,EAAA+1C,cAAAx+C,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAiB7BsF,EAAAsuB,iBAAe,EAjBlBowB,EAAgC,UAAAxsD,EAAA,kCAAhCwsD,EAAgCvjD,UAAA,iCAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,uPAlHpB0iB,UAAAC,MAAAC,EAAA,opCA2DRF,UAAAG,MAAAD,EAAA,iWAewCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,iHAC/B,0RA9BHF,UAAAO,MAAAL,EAAA,6LAvDThwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAA2BzuB,EAAAsN,wBAAAtN,GAE/BA,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,6BAGAzJ,EAAAqN,yBAAA,UAAArN,CAEC,sCAGOA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAiwC,KAAAxoC,CAAA,GACHjR,EAAAsN,yBACDtN,EAAA+R,qBAAA,GAAA26C,EAAA,4BASJ1sD,EAAAsN,yBACAtN,EAAAqN,yBAAA,8BAMIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA6yB,YAAA7yB,EAAAuyB,UAAA9qB,EAA8B,EAA9CjR,CAA+C,8BAElCwJ,EAAA2uB,gBAAA3uB,EAAAuyB,UAA0B,EAFvC/7B,CAA+C,0BAAAwJ,EAAAuyB,UAG1B,IAAI,GAC5B/7B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,gBAGIrN,EAAA+R,qBAAA,GAAA46C,EAAA,iBAWA3sD,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAQqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA6yB,YAAA7yB,EAAAuyB,WAAwBvyB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAA0B,GAE3DrT,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,SAKhBA,EAAA+R,qBAAA,GAAA66C,EAAA,0BAAA5sD,EAAAkmB,0EAzFgBlmB,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAiwC,MAGCz5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAvH,EAAAiwC,KAAAz5C,CAAuB,WAAAqmB,GAY5BrmB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAAuyB,UAAA/7B,CAA2B,UAAAwJ,EAAAuyB,WAF3B/7B,EAAA+Q,qBAAA,QAAAvH,EAAAuyB,UAAA/7B,CAAmB,SAAAwJ,EAAA0yB,aAAAn2B,SAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAnBrT,CAAmB,MAAAwJ,EAAAuyB,WAAAvyB,EAAA6uB,UAAAtyB,SAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KAmBlBrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,WAWD/7B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,OAAAlW,EAAAuyB,WADA/7B,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAcAnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAUJnf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA2V,SAAAha,QAAAnF,EAAA6uB,sBAAA,IAKI7uB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KADArT,EAAA+Q,qBAAA,YAAAvH,EAAAuyB,WAK8B/7B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,gBAItBrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,IAAA,oRAsBfm5C,CAAgC,yMCvI7C,IAAAziD,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKAivD,GAJAjvD,EAAA,OAEAA,EAAA,OAEAA,EAAA,iGAmBoBoC,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,MAAA+7C,EAAAxhC,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,yEAdZzJ,EAAAqN,yBAAA,UAAArN,CAIC,WAIOA,EAAA+R,qBAAA,EAAAg7C,EAAA,aAKA/sD,EAAA+R,qBAAA,EAAAi7C,EAAA,0BAAAhtD,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA4B,YAEpBA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAiD,iBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAoBvN,EAAAsN,wBAAAtN,GAE3BA,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBACtCtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAIAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAg8C,EAAA9sD,EAAAkR,wBAAAU,GAAAiM,UAAAhM,EAAA7R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAO,EAAA8lC,gBAAAmV,GAAsB,GAE/B9sD,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAg8C,EAAA9sD,EAAAkR,wBAAAU,GAAAiM,UAAAsC,EAAAngB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6O,EAAAy3B,eAAAkV,GAAqB,GAE9B9sD,EAAAqN,yBAAA,aAAArN,EAAAg4B,sBAAA,OACIh4B,EAAAyJ,oBAAA,eAEJzJ,EAAAi4B,sBAAAj4B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAU,GAAA,IAAA6D,EAAAzV,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAmE,EAAA0iB,gBAAA1iB,EAAAwjB,OAAsB,GAE/Bj5B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFApERA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA+7C,EAAAxhC,OAAA,KAAAwhC,EAAAxhC,OAAAnmB,OAAAnF,CAA4B,WAAAqtB,GAa7BrtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAq/C,EAAAv5C,MAAA,wBAIGvT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA64C,EAAAjnD,UAQH7F,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAm+B,EAAAltC,SAAA,IAAAktC,EAAAltC,SAAA5f,CAAI8sD,EAAAltC,UAAJ5f,EAAA6uB,sBAAA,IAoCJ7uB,EAAAwN,oBAAA,IAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAkmB,UAAAtyB,SAAA,MAAAoM,EAAA8mB,MAAA,KAAA9mB,EAAA8mB,MAAA5lB,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAkmB,UAAAtyB,SAAA,MAAAoM,EAAA8mB,MAAA,KAAA9mB,EAAA8mB,MAAA5lB,IAAA,+BA/E9B,IAAMilB,EAAuB,GAgHhB54B,iCAA8B,eAA9ButD,EAA8B,WAYvC,SAAAA,EACYjsD,EACAkX,GAAkB,IAAA9W,EAAAtB,KAAAD,EAAAC,KAAAmtD,GADlBntD,KAAAkB,YACAlB,KAAAoY,UAbLpY,KAAAg4C,UAAY,EACZh4C,KAAA0c,OAAyB,GACzB1c,KAAA24B,UAAW,EAoDF34B,KAAA44B,iBAAmB,SAACC,GAA+B,OAC9Dv3B,EAAKw3B,UAAYD,CAAE,EAER74B,KAAA+4B,kBAAoB,SAACF,GAA+B,OAC/Dv3B,EAAK03B,SAAWH,CAAE,EACP74B,KAAAi5B,iBAAmB,SAACtP,GAAU,OAAMroB,EAAKq3B,SAAWhP,CAAC,CA7ClE,CAEH7pB,SAAAqtD,EAAA,EAAA1rD,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc,qBAAuB6yB,CAC/D,GAAC,CAAA/2B,IAAA,kBAAAC,MAQM,WAAe,IAAAyD,EAAAnF,KACNA,KAAKoY,QAAQrD,KAAKg4C,EAAAL,iCAAkC,CAC5D5pD,KAAM,CACF4Z,OAAQ1c,KAAK0c,OACbqG,QAAS,CAAEjD,SAAU9f,KAAKg4C,cAG9Bp/B,cAAc3F,UAAU,SAACyJ,GACpBA,GACLvX,EAAKk0B,SAAS3c,EAClB,EACJ,GAEA,CAAAjb,IAAA,iBAAAC,MACO,SAAeib,GAClB3c,KAAKq5B,SAASr5B,KAAK0c,OAAOV,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAOoJ,EAAMpJ,EAAE,GAC7D,GAEA,CAAA9R,IAAA,WAAAC,MAIO,SAASw3B,GACZl5B,KAAK0c,OAASwc,EACVl5B,KAAK84B,WAAW94B,KAAK84B,UAAU94B,KAAK0c,OAC5C,GAGA,CAAAjb,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK0c,OAAShb,GAAS,EAC3B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBib,GACnB,IAAM6c,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAAS0W,EAAMpJ,IAEvCvT,KAAKkB,UAAUw4B,gBAAgBqzB,EAAAJ,gBAD/BlzB,EAC8C,GAAAr1B,OAAA+e,EACvCqW,GAAQ,CACX7c,EAAMpJ,KAKNimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAMsZ,EAAMpJ,EAAE,GAGjD,KAAC45C,CAAA,CA5EsC,GAA9BA,SAA8B,mBAAAltD,iBAA9BktD,GAA8BjtD,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAqQ,WAAA,EAA9Bi0C,EAA8B,UAAAjtD,EAAA,kCAA9BitD,EAA8BhkD,UAAA,+BAAAC,SAAA,CAAAlJ,EAAA4vB,6BAR5B,CACP,CACIpjB,QAAS9C,EAAA+vB,kBACTC,eAAa3vB,EAAA4vB,YAAW,kBAAMszB,CAA8B,GAC5DrzB,OAAO,MAEdxwB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,eAAAyiB,aAdsBC,UAAAC,MAAAC,EAAA,uGA3D+CF,UAAAG,MAAAD,EAAA,0/BAD1CF,UAAAI,MAAAF,EAAA,4GACJ,gBAA8CG,yLAgB1CL,UAAAM,MAAAJ,EAAA,2JAAc,oFAYdF,UAAAO,MAAAL,EAAA,6JAAe,0NA5DvChwB,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAAm7C,EAAA,cAgFJltD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAAmuC,iBAAiB,GAE1B33C,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA+BzuB,EAAAsN,wBAAAtN,KAGvCA,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,gCA5F0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgT,wEAuGrBywC,CAA8B,mIC3H3C,IAAAp8B,EAAAjzB,EAAA,OAEAuvD,EAAAvvD,EAAA,OAIA8B,WAAqBE,EAkBjB,SAAAwtD,IAAwC,IAA5BxqD,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,GAAElF,EAAAC,KAAAstD,GACpCttD,KAAKuT,GAAKzQ,EAAKyQ,IAAM,GACrBvT,KAAKyT,KAAO3Q,EAAK2Q,MAAQ,GACzBzT,KAAKutD,UAAYzqD,EAAKyqD,QACtBvtD,KAAKwtD,QAAU1qD,EAAK0qD,SAAW,GAC/BxtD,KAAKytD,WAAa3qD,EAAK2qD,SACvBztD,KAAKwyB,SAAW,IAAI66B,EAAAK,MAAM5qD,EAAK0vB,UAAa1vB,EAAauW,QACzDrZ,KAAK2tD,cAAgB7qD,EAAK6qD,cAAgB,IAAI7xC,IAC1C,SAAAxV,GAAwD,IAArDsnD,EAAStnD,EAATsnD,UAAWC,EAAOvnD,EAAPunD,QAAev5C,EAAQhO,EAARgO,SAAUmwB,EAAMn+B,EAANm+B,OACnC,MAAO,CACHzyB,KAAM,IAAIuI,KAFSjU,EAAJ0L,KAEM47C,GAAW94B,UAChCxgB,SACIA,MAAYyc,EAAAugB,qBAAoBuc,EAASD,GAC7CnpB,OAAQA,EAEhB,GAEJzkC,KAAK8tD,SAAWhrD,EAAKgrD,MACzB,2NC1CJ,IAAAvtD,EAAAzC,EAAA,MAEAwC,EAAAxC,EAAA,OAEA0C,EAAA1C,EAAA,OAGAuvD,EAAAvvD,EAAA,OACAiwD,EAAAjwD,EAAA,OAGMkwD,EAAoB,0BAU1B,SAAgBC,EACZ3tB,GAEA,IAAMhN,KAAQ9yB,EAAA+/B,eAAcD,GAC5B,SAAO//B,EAAAoF,KAAG,GAAAvB,OACH4pD,EAAiB,iBAAA5pD,OAAgBkvB,EAAQ,IAAMA,EAAQ,KAC5DnwB,QAAK7C,EAAAwb,KAAI,SAACwW,GAAC,OAAKA,EAAExW,IAAI,SAACoyC,GAAC,OAAK,IAAIH,EAAAT,SAASY,EAAE,EAAC,GACnD,CAdAtuD,iBAAA,SAAgBuuD,IACZ,SAAO5tD,EAAAoF,KAAIqoD,GAAmB7qD,QAC1B7C,EAAAwb,KAAI,SAACwW,GAAC,OAAKA,EAAExW,IAAI,SAACoyC,GAAC,OAAK,IAAIH,EAAAT,SAASY,EAAE,EAAC,GAEhD,EAGAtuD,4BAAAquD,EASA,IAAMG,EAAoB,SAACC,GAAI,SAC3B/tD,EAAAwb,KAAI,SAAC5I,GAAgB,OACjBA,EACK8I,OAAO,SAACsyC,GAAG,QAAOA,EAAI97B,QAAQ,GAC9B1W,IACG,SAACwyC,GAAG,OACA,IAAIjB,EAAAK,MAAKn7B,IAAA,GACF+7B,EAAI97B,UAAQ,IACfxb,MAAOq3C,GAAK1+B,YAAY2+B,EAAI97B,SAAS3e,OACrC85C,aAAcW,EAAIX,eACpB,GAET3xC,OAAO,SAACW,GAAK,OAAKA,EAAM8tB,QAAQ,EAAC,EACzC,EAGL7qC,iCAAA,SAAgB2uD,EACZjuB,EACA+tB,GAEA,OAAOJ,EAA0B3tB,GAAGn9B,KAAKirD,EAAkBC,GAC/D,EAEAzuD,oBAAA,SAAgB4uD,EAAkBluB,GAC9B,IAAMhN,KAAQ9yB,EAAA+/B,eAAcD,GAC5B,SAAO//B,EAAAoF,KAAG,GAAAvB,OACH4pD,EAAiB,cAAA5pD,OAAakvB,EAAQ,IAAMA,EAAQ,KACzDnwB,QAAK7C,EAAAwb,KAAI,SAACwW,GAAC,OAAKA,CAAe,GACrC,EAGA1yB,qBAAA,SAAgB6uD,EACZnuB,EACA+tB,GAEA,IAAM/6B,KAAQ9yB,EAAA+/B,eAAcD,GAC5B,SAAO//B,EAAAoF,KAAG,GAAAvB,OACH4pD,EAAiB,cAAA5pD,OAAakvB,EAAQ,IAAMA,EAAQ,KACzDnwB,QACE7C,EAAAwb,KAAI,SAACwW,GAAC,OAAKA,EAAExW,IAAI,SAACoyC,GAAC,OAAK,IAAIH,EAAAT,SAASY,EAAE,EAAC,GACxCE,EAAkBC,GAE1B,mFCxEAh4B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,+MCFA,IAAAqK,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OACA0C,EAAA1C,EAAA,OAIA4wD,EAAA5wD,EAAA,yIAgBYoC,EAAAqN,yBAAA,aAAArN,CAA+C,cACjCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,6BAgFCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA09C,EAAAp7C,IAEArT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAghD,EAAAl7C,KAAA,mEAdhBvT,EAAAqN,yBAAA,WAAArN,CAGC,sBAHDA,CAGC,mBAIWA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA2M,EAAA5d,EAAAkR,wBAAAsE,GAAA,OAAAxV,EAAAsR,sBAAAsM,EAAAC,UAAkB,GAAC5M,EAAA,GAGnBjR,EAAA+R,qBAAA,EAAA28C,EAAA,qBAMJ1uD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,sBAAArN,CAAoD,cAK5CA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA2M,EAAA5d,EAAAkR,wBAAAsE,GAAA,OAAAxV,EAAAsR,sBAAAsM,EAAAC,UAAkB,GAAC5M,EAAA,GAJvBjR,EAAAsN,yBAOAtN,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,4BAAsBvN,EAAAsN,wBAAAtN,GAErCA,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAA69C,EAAA3uD,EAAAkR,wBAAAsE,GAAAo5C,MAAAC,EAAA7uD,EAAAqR,0BAAAwM,UAAA,OAAS7d,EAAAsR,sBAAAu9C,EAAAC,MAAAxjB,OAAAqjB,EAAoB,GAAE,GAE/B3uD,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,wBAAAtN,IAAW,0DA3BvBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAg+C,EAAA,IAIqB/uD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAA49C,YAYrBhvD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAg+C,EAAA,kEA3EpB/uD,EAAAqN,yBAAA,UAAArN,CAAiE,UAAjEA,CAAiE,sBAAjEA,CAAiE,cAOjDA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA2M,EAAA5d,EAAAkR,wBAAAqF,GAAA,OAAavW,EAAAsR,sBAAbsM,EAAAC,UAAatK,KAAAtC,EACnC,GALkBjR,EAAAsN,yBAOAtN,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,8BAAwBvN,EAAAsN,wBAAAtN,GAEvCA,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAA+9C,EAAA7uD,EAAAkR,wBAAAqF,GAAAsH,UAAA5G,EAAAjX,EAAAqR,0BAASw9C,SAAAC,MAAA74B,KAAA,CAAgB,GAAI,KAAIj2B,EAAAsR,sBAAA2F,EAAAg4C,WAAAJ,EAAAx7C,GAAA,GAEjCrT,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,SAAGvN,EAAAsN,wBAAAtN,GAEjBA,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,uBAAA+9C,EAAA7uD,EAAAkR,wBAAAqF,GAAAsH,UAAA28B,EAAAx6C,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAkpC,EAAAyU,WAAAzU,EAAAyU,aAAAJ,EAAAx7C,GAAAw7C,EAAAx7C,GAGxB,GAAE,GACsBrT,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,GAENA,EAAAqN,yBAAA,gBAIIrN,EAAA8Q,qBAAA,uBAAAo+C,EAAAlvD,EAAAkR,wBAAAqF,GAAAq4C,MAAAx3C,EAAApX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8F,EAAA+3C,SAAA7jB,OAAA4jB,EAAmB,GAAE,GAE9BlvD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,wBAAAtN,KAGxBA,EAAAqN,yBAAA,aAQIrN,EAAA+R,qBAAA,GAAAq9C,EAAA,eAqCJpvD,EAAAsN,wBAAAtN,EAAM,yDAlFMA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA89C,EAAAt7C,MAiBJvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAA89C,EAAAC,MAAA3pD,QAKUnF,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA4B,EAAAo5C,aAAAJ,EAAAx7C,GAAA,6BAkBdrT,EAAAwN,oBAAA,GAAAxN,EAAAsjD,sBAAA,UAAAztC,EAAAo5C,aAAAJ,EAAAx7C,GAAA,EAAAw7C,EAAAC,MAAA3pD,OAAA,SAOqBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA89C,EAAAC,MAAA,EAsD5BpvD,+BAA6B,eAA7B2vD,EAA6B,SAAA1uD,GAAAC,EAAAyuD,EAAA1uD,GAAA,IAAAG,EAAAC,EAAAsuD,GAiBtC,SAAAA,EACqCzY,GAA8B,IAAAx1C,EAAAvB,SAAAC,KAAAuvD,IAE/DjuD,EAAAN,EAAAO,KAAAvB,OAFiC82C,QAhBpBx1C,EAAAwtB,MAAQ,IAAI7kB,EAAAsV,aAEtBje,EAAA+hB,SAAU,EAGV/hB,EAAAkuD,cAAgBluD,EAAKw1C,MAAM0Y,cAIlBluD,EAAA4tD,WAAkCR,EAAAe,WAU9CnuD,EAAK+tD,UAAYvY,EAAM4Y,QAAU,IAAI5zC,IAAI,SAACJ,GACtCA,SAAIszC,MAAQtzC,EAAIszC,MAAMlzC,IAAI,SAACwW,GAAC,MAAK,CAC7BA,EAAE,GACF7tB,KAAKC,UAAU4tB,EAAE,IACpB,GACM5W,CACX,GAAGpa,CACP,CAACxB,SAAAyvD,EAAA,EAAA9tD,IAAA,SAAAkE,IAfD,WACI,MAAO,WAAaygC,KAAKC,MAAsB,SAAhBD,KAAKupB,SACxC,GAAC,CAAAluD,IAAA,mBAAAC,MAeM,SAAiBA,GAAc,IAAAyD,EAAAnF,KAClCA,KAAK6D,QACD,aACA,kBAAOsB,EAAK2xC,MAAM8Y,UAAYzqD,EAAK2xC,MAAM8Y,UAAUluD,GAAS,EAAE,EAC9D,IAER,GAAC,CAAAD,IAAA,cAAAC,MAEM,WACH1B,KAAKqjB,SAAU,EACf,IAAMgsC,EAAWrvD,KAAKqvD,SAASvzC,IAAI,SAACJ,GAChC,OAAA6W,IAAA,GACO7W,GAAG,IACNszC,MAAOtzC,EAAIszC,MAAMlzC,IAAI,SAACwW,GAClB,IAAI5wB,EAAQ4wB,EAAE,GACd,IACI5wB,EAAQ+C,KAAKmxB,MAAMtD,EAAE,UACb,CACZ,MAAO,CAACA,EAAE,GAAI5wB,EAClB,IAER,GACA1B,KAAK8uB,MAAMrP,KAAK,CAAE6P,OAAQ,OAAQigB,SAAU8f,GAChD,KAACE,CAAA,CArDqC,CAAQ/uD,EAAAiI,cAArC8mD,SAA6B,mBAAAtvD,iBAA7BsvD,GAA4BrvD,EAAAwI,4BAkBzBsF,EAAAsuB,iBAAe,EAlBlBizB,EAA6B,UAAArvD,EAAA,kCAA7BqvD,EAA4BpmD,UAAA,4BAAAwW,QAAA,CAAAmP,MAAA,SAAA1lB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,0jCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjIjCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,iCAA2BvN,EAAAsN,yBAC/BtN,EAAA+R,qBAAA,EAAA49C,EAAA,gBAGJ3vD,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAgE,oBAIxDA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAomD,iBAAA3+C,EAAwB,GAEzCjR,EAAAuN,iBAAA,gCACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,QACAzJ,EAAAqN,yBAAA,cAEIrN,EAAA8Q,qBAAA,0BAAStH,EAAA2lD,SAAAl5B,KAAA,CAAA5iB,GAAA7J,EAAAqmD,OAAAf,MAAA,IAAwC,GAEjD9uD,EAAAuN,iBAAA,mBACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA+9C,EAAA,cA2FJ9vD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAAArN,CAEC,eAC8CA,EAAA8Q,qBAAA,0BAAStH,EAAAumD,aAAa,GAC7D/vD,EAAAuN,iBAAA,qBACJvN,EAAAsN,wBAAAtN,UApH+BA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAO3BnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAA8lD,eAYiBtvD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAA2lD,qYA4GpBE,CAA6B,8KCrJ1C,IAAAtlD,EAAAnM,EAAA,OACA0C,EAAA1C,EAAA,OACAoyD,EAAApyD,EAAA,6FAOYoC,EAAAqN,yBAAA,aAAArN,CAA+C,cACjCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,iEAGvBA,EAAAqN,yBAAA,SAAArN,CAAwC,UAAxCA,CAAwC,gBAILA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBACjCtN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,iDAA2CvN,EAAAsN,yBAC9CtN,EAAAqN,yBAAA,aAGIrN,EAAA8Q,qBAAA,kBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAUrR,EAAAsR,sBAAAF,EAAA6+C,gBAAAh/C,GAAuB,GAHrCjR,EAAAsN,wBAAAtN,GAMJA,EAAAqN,yBAAA,UAAArN,CAAwD,cAIhDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAU,EAAA7R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAO,EAAAwW,mBAAkB,GAE3BroB,EAAAuN,iBAAA,yBACJvN,EAAAsN,wBAAAtN,IAAS,2BAIbA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAavN,EAAAsN,wBAAAtN,2CAAbA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAmU,EAAAjF,QAAA,EAMNzjB,mCAAgC,eAAhCwwD,EAAgC,WA1C7C,SAAAA,IAAArwD,EAAAC,KAAAowD,GA2CqBpwD,KAAA8uB,MAAQ,IAAI7kB,EAAAsV,aAG7Bzf,SAAAswD,EAAA,EAAA3uD,IAAA,kBAAAC,MACO,SAAgBotB,GAAgB,IAAAxtB,EAAAtB,KACnCA,KAAKqjB,QAAU,0BACf,IAAM+vB,EAA4BtkB,EAAMuhC,OACxC,GAAY,MAAPjd,MAASkd,MAAO,OAAQtwD,KAAKqjB,QAAU,GAC5C,IAAMitC,EAAkBld,EAAQkd,MAChC,IAAKA,EAAMjrD,OAAQ,OAAQrF,KAAKqjB,QAAU,GAC1C,IAAMktC,EAAOD,EAAM,GACbE,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAACxrC,GACpC,IACMpiB,KAAOtC,EAAAmwD,WADIzrC,EAAEmrC,OAAO3oD,QAE1BpG,EAAK+hB,QAAU,GACf/hB,EAAKwtB,MAAMrP,KAAK,CACZ6P,OAAQ,OACRigB,SAAUzsC,EACLkZ,OAAO,SAAC3Y,GAAC,MAAsC,UAAhCA,EAAEyP,MAAQ,IAAIogB,aAAwB,GACrDpX,IACG,SAACwW,GAAC,OACE,IAAI49B,EAAAU,aAAYr+B,IAAA,GACTD,GAAC,IACJvP,QAASjgB,EACJkZ,OACG,SAAC3Y,GAAC,MAEM,YADHA,EAAEyP,MAAQ,IAAIogB,eACC7vB,EAAEwtD,OAASv+B,EAAE/e,EAAE,GAEtCuI,IAAI,SAACzY,GAAC,MAAM,CACTkQ,GAAIlQ,EAAEkQ,GACNE,KAAMpQ,EAAEoQ,KACRikB,MAAOr0B,EAAE23B,SACTylB,SAAUp9C,EAAEo9C,SACZqQ,WAAYztD,EAAEytD,WACjB,KACP,IAGtB,GACAN,EAAWO,WAAWR,EAC1B,GAAC,CAAA9uD,IAAA,mBAAAC,MAEM,YAIH,EAAAlB,EAAAwwD,cAAa,2BAHC,sJAIlB,KAACZ,CAAA,CAlDwC,GAAhCA,SAAgC,mBAAAnwD,iBAAhCmwD,EAAgC,EAAhCA,EAAgC,UAAAlwD,EAAA,kCAAhCkwD,EAAgCjnD,UAAA,iCAAAwW,QAAA,CAAAmP,MAAA,SAAAxlB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,8rBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAvCrCvJ,EAAAqN,yBAAA,aAAArN,CAAuE,QAC/DA,EAAAuN,iBAAA,0BAAoBvN,EAAAsN,yBACxBtN,EAAA+R,qBAAA,EAAAg/C,EAAA,gBAGJ/wD,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAi/C,EAAA,eAsBAhxD,EAAA+R,qBAAA,EAAAk/C,EAAA,yBAAAjxD,EAAAkmB,yEA1BmClmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAI5BnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAAnjB,CAAgB,WAAAqmB,EAAA,6FAiClB6pC,CAAgC,gMC9C7C,IAAAgB,EAAAtzD,EAAA,OACAmM,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAEAkQ,EAAAlQ,EAAA,OACA0C,EAAA1C,EAAA,OACAoyD,EAAApyD,EAAA,oLAYYoC,EAAAqN,yBAAA,aAAArN,CAAyD,cAC3CA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,6BASfA,EAAAqN,yBAAA,WAAArN,CAAsD,cAQ9CA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QACtBvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAMAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,8CAd3BA,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,QAAAiC,EAAAnR,KAAAqU,SAAAtR,KAAA49C,SAAAxvC,EAAAnR,KAAAqU,SAAAtR,KAAA69C,QAAA,2BAiBRpxD,EAAAqN,yBAAA,WAAArN,CAA0D,cAQlDA,EAAAuN,iBAAA,eAAQvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QAC1BvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,0BAAoBvN,EAAAsN,wBAAAtN,2EAf/BA,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,QAAAS,EAAA3P,KAAAqU,SAAAiW,SAAAq2B,SAAAhxC,EAAA3P,KAAAqU,SAAAiW,SAAAs2B,SAaIpxD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAI,EAAA,+DAkBJnR,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAugD,EAAArxD,EAAAkR,wBAAA8F,GAAA6G,UAAA5G,EAAAjX,EAAAqR,wBAAA,UAAWrR,EAAAsR,sBAAA2F,EAAAq6C,UAAAD,GAAe,GAE1BrxD,EAAAuN,iBAAA,GACAvN,EAAAqN,yBAAA,cAAArN,CAGC,cACaA,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,IAAW,2BAL/BA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4jD,EAAA,KAGIrxD,EAAAwN,oBAAA,GAAAxN,EAAAuxD,sBAAA,uBAAAF,EAAA,+DAnBpBrxD,EAAAqN,yBAAA,WAAArN,CAAsD,cAClDA,EAAAyuB,iBAAA,MAQAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAAArN,CAAqC,yBAE7BA,EAAA+R,qBAAA,EAAAy/C,EAAA,uBAYJxxD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAOIrN,EAAA8Q,qBAAA,gCAAAG,GAAAjR,EAAAkR,wBAAAmP,GAAA,IAAAjJ,EAAApX,EAAAqR,wBAAA,UAAwBrR,EAAAsR,sBAAA8F,EAAAq6C,OAAAxgD,GAAc,GAP1CjR,EAAAsN,wBAAAtN,IAQE,yEA9BFA,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,QAAAjK,EAAAjF,KAAAqU,SAAA8rC,KAAAQ,SAAA17C,EAAAjF,KAAAqU,SAAA8rC,KAAAS,SAUyBpxD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA0E,EAAAi8C,UAgBrB1xD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAgN,EAAA/d,CAA4B,gCAAAyV,EAAAk8C,WAA5B3xD,CAA4B,mDAOxCA,EAAAqN,yBAAA,WAAArN,CAA6D,cAChCA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,iBAMJzJ,EAAAsN,wBAAAtN,6BAEJA,EAAAqN,yBAAA,WAAArN,CAA4D,cAQpDA,EAAAuN,iBAAA,iBAAUvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QAC5BvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,4BAAsBvN,EAAAsN,wBAAAtN,8CAfjCA,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,QAAAxJ,EAAA1F,KAAAqU,SAAA+rC,WAAAO,SAAAj7C,EAAA1F,KAAAqU,SAAA+rC,WAAAQ,QAAA,wBA0FRpxD,EAAAqN,yBAAA,WAAArN,CAAwD,cACpDA,EAAAyuB,iBAAA,MAAgDzuB,EAAAsN,yBAChDtN,EAAAyJ,oBAAA,yBAIJzJ,EAAAsN,+HAlMJtN,EAAAqN,yBAAA,WAAArN,CAIC,WAEOA,EAAA+R,qBAAA,EAAA6/C,EAAA,cAoBA5xD,EAAA+R,qBAAA,EAAA8/C,EAAA,cAqBJ7xD,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA+/C,EAAA,aAoCA9xD,EAAA+R,qBAAA,EAAAggD,EAAA,aAWA/xD,EAAA+R,qBAAA,EAAAigD,EAAA,cAqBAhyD,EAAAqN,yBAAA,WAAArN,CAA+B,cACWA,EAAAuN,iBAAA,oBAAcvN,EAAAsN,yBACpDtN,EAAAqN,yBAAA,sBAA8CrN,EAAAuN,iBAAA,IAE5CvN,EAAAsN,wBAAAtN,GAENA,EAAAqN,yBAAA,YAAArN,CAAuD,sBAG/CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA0uC,GAAA,IAAAloC,EAAA1X,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqCyG,EAAA+5C,OAAA,CAAAjwD,MAC/C,gBACRkW,EAAA45C,UAAU,eACR,GAEkBtxD,EAAAuN,iBAAA,yBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA0uC,GAAA,IAAA3+B,EAAAjhB,EAAAqR,0BAAA,OAC6BrR,EAAAsR,sBAAAL,EAASgQ,EAAAwwC,OAAA,CAAAjwD,MAAgB,UACpEyf,EAAAqwC,UAAU,SACd,GAEkBtxD,EAAAuN,iBAAA,mBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA0uC,GAAA,IAAAj/B,EAAA3gB,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqC0P,EAAA8wC,OAAA,CAAAjwD,MAC9C,eACRmf,EAAA2wC,UAAU,cACT,GAEkBtxD,EAAAuN,iBAAA,uBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA0uC,GAAA,IAAAqS,EAAAjyD,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqCghD,EAAAR,OAAA,CAAAjwD,MAClD,mBAAkDywD,EAAAX,UAChD,kBACL,GAEkBtxD,EAAAuN,iBAAA,2BACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA0uC,GAAA,IAAA59B,EAAAhiB,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqC+Q,EAAAyvC,OAAA,CAAAjwD,MACjD,kBAAiDwgB,EAAAsvC,UAC/C,iBACN,GAEkBtxD,EAAAuN,iBAAA,0BACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA+B,eACQA,EAAAuN,iBAAA,mBAAYvN,EAAAsN,yBAC/CtN,EAAAyJ,oBAAA,mBAQJzJ,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAmgD,EAAA,aAOJlyD,EAAAsN,wBAAA,6CAhMItN,EAAA+Q,qBAAA,YAAA8E,EAAArF,MAGgCxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAAtR,MAoBAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAAiW,UAsBJ96B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAA8rC,MAoCA3wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAApR,aAWAzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAA+rC,YAuBsB5wD,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA,OAAA81C,EAAAl0C,EAAArF,KAAA/K,IAAA,mBAAAskD,EAAAvoD,MAAA,YAM1CxB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAs8C,OAAA,eAAAnyD,CAAiC,iBAAAA,EAAA0R,0BAAA,GAAA0lC,IAWjCp3C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAs8C,OAAA,SAAAnyD,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAA0lC,IAS3Bp3C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAs8C,OAAA,cAAAnyD,CAAgC,iBAAAA,EAAA0R,0BAAA,GAAA0lC,IAWhCp3C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAs8C,OAAA,kBAAAnyD,CAAoC,iBAAAA,EAAA0R,0BAAA,GAAA0lC,IAWpCp3C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAs8C,OAAA,iBAAAnyD,CAAmC,iBAAAA,EAAA0R,0BAAA,GAAA0lC,IAgBnCp3C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,CAAS,UAATA,CAAS,SAATA,CAAS,YAAA6V,EAAAu8C,eAMWpyD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAAyG,OAAA,+DAQhCtrB,EAAAqN,yBAAA,cAAArN,CAGC,eAKOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAmhD,GAAA,IAAAC,EAAAtyD,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAghD,EAAAvC,cAAa,GAEtB/vD,EAAAuN,iBAAA,YACJvN,EAAAsN,wBAAAtN,EAAS,2CAJLA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAjB,KAAA+hD,MAAA,wBAOJvyD,EAAAqN,yBAAA,YACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,6BAAuBvN,EAAAsN,wBAAAtN,6BAI9BA,EAAAqN,yBAAA,mBACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAF8CtN,EAAA+Q,qBAAA,QAAAyhD,GAC1CxyD,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+kD,EAAA,MAYH9yD,6BAA0B,eAA1B+yD,EAA0B,WA6CnC,SAAAA,EACqC7b,GAA4B/2C,EAAAC,KAAA2yD,GAA5B3yD,KAAA82C,QA5CpB92C,KAAA8uB,MAAQ,IAAI7kB,EAAAsV,aAEtBvf,KAAA0Q,KAAO,IAAI9G,EAAA60B,UAAU,CACxBhrB,KAAM,IAAI7J,EAAA80B,YAAY1+B,KAAKic,KAAKxI,MAAQ,GAAI,CAAC7J,EAAA+0B,WAAWC,WACxDjrB,YAAa,IAAI/J,EAAA80B,YAAY1+B,KAAKic,KAAKtI,aAAe,IACtDqnB,SAAU,IAAIpxB,EAAA80B,YAAY1+B,KAAKic,KAAK+e,UAAY,GAAI,CAChDpxB,EAAA+0B,WAAWC,WAEfkyB,WAAY,IAAIlnD,EAAA80B,YAAY1+B,KAAKic,KAAK60C,WAAY,CAC9ClnD,EAAA+0B,WAAWC,WAEfiyB,KAAM,IAAIjnD,EAAA80B,YAAY1+B,KAAKic,KAAK40C,MAAQ,IACxC+B,cAAe,IAAIhpD,EAAA80B,YAAY1+B,KAAKic,KAAK22C,gBAAiB,GAC1DC,aAAc,IAAIjpD,EAAA80B,YAAY1+B,KAAKic,KAAK42C,cAAgB,GACxDrnC,OAAQ,IAAI5hB,EAAA80B,YAAY1+B,KAAKic,KAAKuP,QAAU,MAGzCxrB,KAAAqjB,SAAU,EAEDrjB,KAAA6xD,WAAuB,CAACT,EAAA0B,MAAO1B,EAAA2B,MAAO3B,EAAA4B,MA0BnD,CAEHlzD,SAAA6yD,EAAA,EAAAlxD,IAAA,OAAAkE,eAxBI,OAAO3F,KAAK82C,MAAM76B,MAAQ,IAAIi0C,EAAAU,YAClC,GAEA,CAAAnvD,IAAA,aAAAkE,IACA,WACI,OAAO3F,KAAK82C,MAAMmc,YAAc,EACpC,GAAC,CAAAxxD,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAK0Q,KAAKqU,SAAS8rC,KAAKnvD,KACnC,GAAC,CAAAD,IAAA,gBAAAC,MAEM,WACH,SAAA0C,OADiBa,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EAClB,IACnB,GAAC,CAAAxD,IAAA,SAAAC,MAEM,SAAOwxD,GACV,OAAOlzD,KAAK4xD,SAAS3rD,SAASitD,EAClC,GAAC,CAAAzxD,IAAA,SAAAC,MAUM,SAAOotB,GACV,GAAK9uB,KAAK0Q,MAAS1Q,KAAK0Q,KAAKqU,SAAS8rC,KACtC,CAAA7wD,KAAK0Q,KAAKqU,SAAS8rC,KAAKsC,cACxB,IAAMC,EAAQtkC,EAAMskC,MACd1xD,EAAQotB,EAAMptB,MACdkwD,EAAW5xD,KAAK4xD,UACjBlwD,GAAS,IAAImwC,SACd+f,EAASz7B,KAAKz0B,GACd1B,KAAK0Q,KAAKqU,SAAS8rC,KAAKx3B,SAASu4B,IAIjCwB,IAAOA,EAAM1xD,MAAQ,IAC7B,GAEA,CAAAD,IAAA,YAAAC,MAIO,SAAU2xD,GACb,GAAKrzD,KAAK0Q,MAAS1Q,KAAK0Q,KAAKqU,SAAS8rC,KACtC,KAAMe,EAAW5xD,KAAK4xD,SACtB5xD,KAAK0Q,KAAKqU,SAAS8rC,KAAKsC,cACxB,IAAMrE,EAAQ8C,EAAS0B,QAAQD,GAE3BvE,GAAS,IACT8C,EAASpmB,OAAOsjB,EAAO,GACvB9uD,KAAK0Q,KAAKqU,SAAS8rC,KAAKx3B,SAASu4B,GAAQ,CAEjD,GAAC,CAAAnwD,IAAA,cAAAC,MAEM,WACH1B,KAAKqjB,SAAU,EACfrjB,KAAK8uB,MAAMrP,KAAK,CACZ6P,OAAQ,OACRigB,SAAU,CACNtzB,KAAM,IAAIi0C,EAAAU,aAAYr+B,IAAA,GACfvyB,KAAKic,MAAI,IACZ1I,GAAIvT,KAAKic,KAAK1I,IAAE,QAAAnP,UAAY5D,EAAA+yD,WAAU,YACnCvzD,KAAK0Q,KAAKhP,UAI7B,KAACixD,CAAA,CAhGkC,GAA1BA,SAA0B,mBAAA1yD,iBAA1B0yD,GAA0BzyD,EAAAwI,4BA8CvBsF,EAAAsuB,iBAAe,EA9ClBq2B,EAA0B,UAAAzyD,EAAA,kCAA1ByyD,EAA0BxpD,UAAA,0BAAAwW,QAAA,CAAAmP,MAAA,SAAAxlB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,umCA9KtB0iB,UAAAC,MAAAC,EAAA,6MAoBoBF,UAAAG,MAAAD,EAAA,8gBAkHoBF,UAAAI,MAAAF,EAAA,4ZAnMjDhwB,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,GAAmCvN,EAAAsN,yBACvCtN,EAAA+R,qBAAA,EAAAuhD,EAAA,gBAGJtzD,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAwhD,EAAA,gBAoMAvzD,EAAA+R,qBAAA,EAAAyhD,EAAA,gBAaAxzD,EAAA+R,qBAAA,EAAA0hD,EAAA,yBAAAzzD,EAAAkmB,kCAMAlmB,EAAAqN,yBAAA,6BACIrN,EAAA+R,qBAAA,GAAA2hD,EAAA,oBAGJ1zD,EAAAsN,gEAhOQtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAjE,EAAAuS,KAAA1I,GAAA,sBACqCrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAMxCnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,OAAAhH,EAAA2Z,QAAAnjB,CAAwB,WAAAqtB,GAmMxBrtB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAmB8BnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAupD,WAAA,6nBAa9BN,CAA0B,sICzPvC/yD,eAAyB,WAyCrB,SAAAgxD,IAA4C,IAAAiD,EAAAC,EAAhChxD,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA8B,GAAElF,EAAAC,KAAA4wD,GACxC5wD,KAAKuT,GAAKzQ,EAAKyQ,IAAM,GACrBvT,KAAKyT,KAAO3Q,EAAK2Q,MAAQ3Q,EAAKyQ,IAAM,GACpCvT,KAAKg7B,SAAWl4B,EAAKk4B,UAAY,GACjCh7B,KAAK8wD,WAAahuD,EAAKguD,YAAc,EACrC9wD,KAAK2T,YAAc7Q,EAAK6Q,aAAe,GACvC3T,KAAK+zD,SAAWjxD,EAAKixD,UAAY,EACjC/zD,KAAK6yD,aAAe/vD,EAAK+vD,cAAgB,EACzC7yD,KAAK4yD,gBAAkB9vD,EAAK8vD,cAC5B5yD,KAAK6wD,KAAO/tD,EAAK+tD,MAAQ,GACzB7wD,KAAKwrB,OAAS1oB,EAAK0oB,QAAU,GAC7BxrB,KAAK+iB,QAAUjgB,EAAKigB,SAAW,GAC/B,IAAMixC,EAAch0D,KAAK+iB,QAAQwnB,KAAK,SAAClnC,GAAC,OAAkB,IAAbA,EAAE42B,MAAe,GAC9Dj6B,KAAKi0D,aACAD,EACKh0D,KAAK+iB,QAAQ/G,OAAO,SAAC3Y,GAAC,OAAkB,IAAbA,EAAE42B,MAAe,GAC5Cn3B,EAAKmxD,cAAgB,GAC/Bj0D,KAAKk0D,eAAiBpxD,EAAKoxD,gBAAkB,GAC7Cl0D,KAAKm0D,wBACDn0D,KAAK8wD,WACL9wD,KAAKi0D,YACAn4C,IAAI,SAACwW,GAAC,OAAKA,EAAEw+B,YAAc,CAAC,GAC5B30B,OAAO,SAAC+xB,EAAG/6B,GAAC,OAAK+6B,EAAI/6B,CAAC,EAAE,GACjCnzB,KAAKo0D,WAAap0D,KAAKm0D,wBAA0Bn0D,KAAK+zD,SACtD/zD,KAAKq0D,gBACW,QAAZR,EAAA7zD,KAAK+iB,eAAO,IAAA8wC,OAAA,EAAZA,EACM/3C,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,IAAM,EAAE,GACtByJ,KAAK,SAACmW,EAAGrU,GAAC,OAAKqU,EAAEqK,cAAc1e,EAAE,GACjCjK,KAAK,OAAQ,GACtB7U,KAAKs0D,SAAwB,QAAhBR,EAAGhxD,EAAKwxD,gBAAQ,IAAAR,IACjC,CAACh0D,SAAA8wD,EAAA,EAAAnvD,IAAA,YAAAkE,IAnCD,WACI,IAAMod,EAAU/iB,KAAKi0D,YAAYn4C,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,EAAE,GAAEsB,KAAK,KACvD,SAAAzQ,OAAUpE,KAAKuT,GAAE,KAAAnP,OAAI2e,EAAO,KAAA3e,OAAKpE,KAAKs0D,SAAoB,GAAT,OACrD,KAAC1D,CAAA,CAvCoB,uKCFzB,IAAA3mD,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKAy2D,GAJAz2D,EAAA,OACAA,EAAA,OAGAA,EAAA,4GAeoBoC,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,MAAAwmC,EAAAjsB,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,qCASAzJ,EAAAqN,yBAAA,aAKIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yGAHItN,EAAA+Q,qBAAA,aAAA2F,EAAA49C,WAAA/c,IAEAv3C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA8pC,EAAAwc,YAAA,KAAAxc,EAAAwc,YAAA5uD,SAAA,iFA5BhBnF,EAAAqN,yBAAA,UAAArN,CAIC,WAIOA,EAAA+R,qBAAA,EAAAwiD,EAAA,aAKAv0D,EAAA+R,qBAAA,EAAAyiD,EAAA,yBAAAx0D,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAkB,WAEVA,EAAAuN,iBAAA,GACAvN,EAAA+R,qBAAA,EAAA0iD,EAAA,eAOJz0D,EAAAsN,yBACAtN,EAAAqN,yBAAA,SAAKrN,EAAAuN,iBAAA,IAA6BvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA8b,GAAAnP,UAAAsC,EAAAngB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6O,EAAAu0C,SAAAnd,GAAc,GAEvBv3C,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAuN,iBAAA,eACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA8b,GAAAnP,UAAAmC,EAAAhgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0O,EAAAyrB,WAAA8L,GAAgB,GAEzBv3C,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAuN,iBAAA,eACJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAAymC,EAAAv3C,EAAAkR,wBAAA8b,GAAAnP,UAAA3H,EAAAlW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4E,EAAAiiB,gBAAAof,GAAqB,GAE9Bv3C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFAhERA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAwmC,EAAAjsB,OAAA,KAAAisB,EAAAjsB,OAAAnmB,OAAAnF,CAA2B,WAAAqtB,GAa5BrtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA8pC,EAAAhkC,MAAA,YAGKvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAwmC,EAAAwc,YAAA,KAAAxc,EAAAwc,YAAA5uD,QAMJnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAA8pC,EAAAsc,SAAA,cAmCL7zD,EAAAwN,oBAAA,IAAAxN,EAAA0f,sBAAA,gBAAAvN,EAAAkmB,UAAAtyB,SAAAwxC,EAAAlkC,KAGUrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAkmB,UAAAtyB,SAAAwxC,EAAAlkC,IAAA,+BA1E9B,IAAMilB,EAAa,GAyGN54B,6BAA0B,eAA1Bi1D,EAA0B,WAmBnC,SAAAA,EACY3zD,EACAkX,GAAkB,IAAA9W,EAAAtB,KAAAD,EAAAC,KAAA60D,GADlB70D,KAAAkB,YACAlB,KAAAoY,UApBIpY,KAAA+iB,QAIZ,GACG/iB,KAAA04B,MAAwB,GACxB14B,KAAA24B,UAAW,EAIX34B,KAAAqf,SAA2B,GA8BlBrf,KAAA44B,iBAAmB,SAACC,GAA+B,OAC9Dv3B,EAAKw3B,UAAYD,CAAE,EACR74B,KAAA+4B,kBAAoB,SAACF,GAA+B,OAC/Dv3B,EAAK03B,SAAWH,CAAE,EACP74B,KAAAi5B,iBAAmB,SAACtP,GAAU,OAAMroB,EAAKq3B,SAAWhP,CAAC,CAvBlE,CAEH7pB,SAAA+0D,EAAA,EAAApzD,IAAA,YAAAkE,IAXA,WACI,OACI3F,KAAKkB,UAAUyE,IAAc,yBAA2B6yB,CAEhE,GAAC,CAAA/2B,IAAA,WAAAC,MAWM,SAASw3B,GACZl5B,KAAK04B,MAAQQ,EACTl5B,KAAK84B,WAAW94B,KAAK84B,UAAU94B,KAAK04B,MAC5C,GAEA,CAAAj3B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK04B,MAAQh3B,GAAS,EAC1B,GAAC,CAAAD,IAAA,aAAAC,MAQM,SAAWua,GACd,IAAMmd,EAAep5B,KAAK04B,MAAM1c,OAAO,SAAC3Y,GAAC,OAAKA,EAAEkQ,KAAO0I,EAAK1I,EAAE,GAC9DvT,KAAKq5B,SAASD,EAClB,GAAC,CAAA33B,IAAA,WAAAC,MAEM,SAASua,GAAmB,IAAA9W,EAAAnF,KACnBA,KAAKoY,QAAQrD,KAAKw/C,EAAAO,+BAAgC,CAC1DhyD,KAAM,CAAC9C,KAAK04B,MAAO14B,KAAK+iB,WAExBnK,cAAc3F,UAAU,SAACylB,GACpBA,GACLvzB,EAAKk0B,SAASX,EAClB,EACJ,GAAC,CAAAj3B,IAAA,aAAAC,MAEM,SAAWua,GAAkB,IAAA84C,EAChC,OAAuB,QAAvBA,EAAO94C,EAAKg4C,mBAAW,IAAAc,OAAA,EAAhBA,EAAkBj5C,IAAI,SAACzY,GAAC,OAAKA,EAAEoQ,IAAI,GAAEoB,KAAK,KACrD,GAAC,CAAApT,IAAA,kBAAAC,MAEM,SAAgBszD,GACnB,IAAMx7B,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAAS+uD,EAAazhD,IAE9CvT,KAAKkB,UAAUw4B,gBAAgB,uBAD/BD,EACqD,GAAAr1B,OAAA+e,EAC9CqW,GAAQ,CACXw7B,EAAazhD,KAKbimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM2xD,EAAazhD,EAAE,GAGxD,KAACshD,CAAA,CAhFkC,GAA1BA,SAA0B,mBAAA50D,iBAA1B40D,GAA0B30D,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAqQ,WAAA,EAA1B27C,EAA0B,UAAA30D,EAAA,kCAA1B20D,EAA0B1rD,UAAA,0BAAAuW,OAAA,CAAAqD,QAAA,WAAA3Z,SAAA,CAAAlJ,EAAA4vB,6BATxB,CACP,CACIpjB,QAAS9C,EAAA+vB,kBAETC,eAAa3vB,EAAA4vB,YAAW,kBAAMg7B,CAA0B,GACxD/6B,OAAO,MAEdxwB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kxCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAnGWvJ,EAAAqN,yBAAA,WACJrN,EAAA+R,qBAAA,EAAAgjD,EAAA,cA4EJ/0D,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAAkrD,UAAU,GAEnB10D,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,cAAQvN,EAAAsN,wBAAAtN,YApFGA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgvB,OA+ErBx4B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAAvH,EAAAivB,uFAkBCk8B,CAA0B,0LChHvC,IAAAr0D,EAAA1C,EAAA,OAEAoyD,EAAApyD,EAAA,SACAA,EAAA,4JA4BgBoC,EAAAqN,yBAAA,cAAArN,CAKC,cACaA,EAAAuN,iBAAA,eAASvN,EAAAsN,wBAAAtN,uEAHnBA,EAAA+Q,qBAAA,oBAAAsV,EAAA,+DAtBRrmB,EAAAqN,yBAAA,UAAArN,CAAsD,oBAI9CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAF,EAAA4jD,WAAA/jD,EAAA,GACHjR,EAAAsN,yBACDtN,EAAAqN,yBAAA,UAAArN,CAA0C,UAA1CA,CAA0C,SAE7BA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,oEACJvN,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,GAAAkjD,EAAA,iBAQAj1D,EAAAqN,yBAAA,gBAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAU,EAAA7R,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAO,EAAAqjD,cAAArjD,EAAAqjD,aAAA,GAEAl1D,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,wBAAAtN,IAAW,2CA7BhCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA6iD,YAISh1D,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA4J,KAAAxI,MAEDvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4J,KAAA+e,SAAA,KAMJ96B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,KAAAhC,EAAA4J,KAAA60C,WAAA,IAAA5wD,EAAA4V,sBAAA,KAAAzD,EAAAgjD,SAAA,KAOHn1D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAo7C,UAODvtD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAoB,EAAA4J,KAAA8G,QAAA1d,OAAA,+DA2BAnF,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6M,GAAA,IAAAq3C,EAAAp1D,EAAAqR,0BAAAwM,UAAA3H,EAAAlW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA4E,EAAAm/C,WAAAD,GAAkB,GAG3Bp1D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,EAAW,+DAE7BA,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAm2B,GAAA,IAAA+tB,EAAAp1D,EAAAqR,0BAAAwM,UAAArH,EAAAxW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAkF,EAAA8+C,aAAAF,GAAoB,GAG7Bp1D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,EAAW,2BA/BnCA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,YAGAzJ,EAAAqN,yBAAA,WAAArN,CAA8B,YACRA,EAAAuN,iBAAA,GAAiBvN,EAAAsN,yBACnCtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,GAEJA,EAAA+R,qBAAA,EAAAwjD,EAAA,iBAUAv1D,EAAA+R,qBAAA,EAAAyjD,EAAA,iBAUJx1D,EAAAsN,gFAzB0BtN,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAmhD,EAAA7hD,MAEdvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA2nD,EAAA59B,MAAA,KASHx3B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA4Q,EAAA4rC,UAUAvtD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA4Q,EAAA4rC,SAAA,2BArCbvtD,EAAAqN,yBAAA,YAQIrN,EAAA+R,qBAAA,EAAA0jD,EAAA,cAkCJz1D,EAAAsN,iEAtCItN,EAAAsjD,sBAAA,SAAAztC,EAAAq/C,aAAA,IAAAr/C,EAAAkG,KAAA8G,QAAA1d,OAAA,WAMuBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAAkG,KAAA8G,QAAA,EAgF1BnjB,4BAAyB,eAAzBg2D,EAAyB,WAwClC,SAAAA,EAAoBC,GAA+B,IAAAv0D,EAAAtB,KAAAD,EAAAC,KAAA41D,GAA/B51D,KAAA61D,YApCb71D,KAAAo1D,cAAe,EAENp1D,KAAA81D,UAAY,kBAAMx0D,EAAKu0D,UAAUC,UAAUx0D,EAAK2a,KAAK,EAErDjc,KAAAu1D,WAAa,SAACQ,GAAsB,OAChDz0D,EAAKu0D,UAAUC,UAAUx0D,EAAK2a,KAAM85C,EAAO,EAE/B/1D,KAAAw1D,aAAe,SAACO,GAAsB,OAClDz0D,EAAKu0D,UAAUG,aAAa10D,EAAK2a,KAAM85C,EAAO,EAElC/1D,KAAAi2D,SAAW,kBAAM30D,EAAKu0D,UAAUK,QAAQ50D,EAAK2a,KAAK,EAElDjc,KAAA2rC,WAAa,kBAAMrqC,EAAKu0D,UAAUM,WAAW70D,EAAK2a,KAAK,CAwBjB,CAACnc,SAAA81D,EAAA,EAAAn0D,IAAA,WAAAkE,IAtBvD,WACI,OAAO3F,KAAK61D,UAAUO,WAC1B,GAAC,CAAA30D,IAAA,aAAAkE,IAED,WACI,OAAQ3F,KAAKic,KAAKi4C,eAAejuD,SAASjG,KAAK61D,UAAU/hD,KAC7D,EAAC4H,IAED,SAAsB2gB,GAAc,IAAAl3B,EAAAnF,KAC5BkT,EAAOlT,KAAKic,KAAKi4C,eAEhBhhD,EADAmpB,EACOnpB,EAAK8I,OAAO,SAAC3Y,GAAC,OAAKA,IAAM8B,EAAK0wD,UAAU/hD,IAAI,IAD5CZ,EAAO1S,EAAAipC,QAAM,GAAArlC,OAAA+e,EAAKjQ,GAAI,CAAElT,KAAK61D,UAAU/hD,QAEnD9T,KAAK61D,UAAUQ,WACX,IAAInG,EAAAU,aAAYr+B,IAAA,GAAMvyB,KAAKic,MAAI,IAAEi4C,eAAgBhhD,KAEzD,GAEA,CAAAzR,IAAA,SAAAkE,IACA,WACI,OAAO3F,KAAK61D,UAAUS,QAC1B,KAACV,CAAA,CAtCiC,GAAzBA,SAAyB,mBAAA31D,iBAAzB21D,GAAyB11D,EAAAwI,4BAAAC,EAAA4tD,sBAAA,EAAzBX,EAAyB,UAAA11D,EAAA,kCAAzB01D,EAAyBzsD,UAAA,+BAAAuW,OAAA,CAAAzD,KAAA,QAAAiD,MAAArN,EAAAvI,MAAA,GAAAC,KAAA,EAAA+D,OAAA,w8CAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjI9BvJ,EAAAqN,yBAAA,WAGIrN,EAAA+R,qBAAA,EAAAukD,EAAA,eAoCAt2D,EAAA+R,qBAAA,EAAAwkD,EAAA,aA2CAv2D,EAAAqN,yBAAA,oBAAArN,CAA0B,cAIlBA,EAAA8Q,qBAAA,0BAAStH,EAAAosD,WAAW,GAEpB51D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,SAAGvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAEhCA,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,0BAAStH,EAAAusD,UAAU,GAEnB/1D,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,gBAASvN,EAAAsN,wBAAAtN,GAE/BA,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,0BAAStH,EAAAiiC,YAAY,GAErBzrC,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,wBAAAtN,cAtGKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuS,MAsCrC/b,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuS,qeAwFJ25C,CAAyB,mKC1ItC,IAAA97C,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,UAEAA,EAAA,iGAaoBoC,EAAAuhB,kCAAA,GACIvhB,EAAAyJ,oBAAA,WACJzJ,EAAA0hB,0DAD4B1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAylD,EAAA,2BAFhCx2D,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAA0kD,EAAA,oDAGJz2D,EAAA0hB,0EAHmC1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAzD,EAAAukD,MAAA,2BAUnC12D,EAAAuhB,kCAAA,GACIvhB,EAAAyJ,oBAAA,WACJzJ,EAAA0hB,0DAD4B1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA4lD,EAAA,2BANhC32D,EAAAqN,yBAAA,eAKIrN,EAAA+R,qBAAA,EAAA6kD,EAAA,oDAGJ52D,EAAAsN,+EALItN,EAAA+Q,qBAAA,QAAA8lD,GADA72D,EAAAuxD,sBAAA,QAAAsF,GAG+B72D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAC,EAAAihD,UAAAD,GAAA,wBAMnC72D,EAAAqN,yBAAA,UAAArN,CAAsD,cACxCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,IAetBN,wBAAqB,eAArBq3D,EAAqB,WAsB9B,SAAAA,EAAoBpB,GAA+B,IAAAv0D,EAAAtB,KAAAD,EAAAC,KAAAi3D,GAA/Bj3D,KAAA61D,YApBJ71D,KAAA42D,KAAO52D,KAAK61D,UAAUe,KAEtB52D,KAAAk3D,UAAY,IAAIp9C,EAAAqB,gBAAwB,IAExCnb,KAAAg3D,SAAWh3D,KAAK42D,KAAKzzD,QACjC7C,EAAAwb,KAAI,SAAC86C,GACD,IACmC9/B,EAD7BqgC,EAAW,GAAGpgC,EAAAC,EACA11B,EAAK2xD,YAAU,QAAAh8B,EAAA,WAAE,IAA1BS,EAAKZ,EAAAp1B,MACZy1D,EAASz/B,GAASk/B,EAAK56C,OACnB,SAACC,GAAI,OAAKA,EAAK+e,WAAatD,CAAK,IAFzC,IAAAX,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAAH,GAIC,OAAAtM,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,OAAO8/B,CACX,GAOkD,CAACr3D,SAAAm3D,EAAA,EAAAx1D,IAAA,aAAAkE,IAJvD,WACI,OAAO3F,KAAK61D,UAAU5C,UAC1B,KAACgE,CAAA,CApB6B,GAArBA,SAAqB,mBAAAh3D,iBAArBg3D,GAAqB/2D,EAAAwI,4BAAAC,EAAA4tD,sBAAA,EAArBU,EAAqB,UAAA/2D,EAAA,kCAArB+2D,EAAqB9tD,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kQAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAzC1BvJ,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,+BAAAG,GAAA,OACqBzH,EAAAwtD,UAAA10D,KAA0B,IAA1B2O,EAA8B,GAAEzH,EAAAupD,WAAA9hD,EACpD,GACX,GACUjR,EAAAqN,yBAAA,eACIrN,EAAA+R,qBAAA,EAAAmlD,EAAA,oDAKJl3D,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAolD,EAAA,iBASJn3D,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAqlD,EAAA,yBAAAp3D,EAAAkmB,2EAhBuBlmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAApM,EAAAktD,OAAA,KAAAp1C,EAAAnc,OAAAnF,CAA8B,WAAAqmB,GAO3BrmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAupD,WAAA,wRA2BrBgE,CAAqB,8KClDlC,IAAAhtD,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OACAkQ,EAAAlQ,EAAA,OAGA4hD,EAAA5hD,EAAA,OAEAoyD,EAAApyD,EAAA,mJAcYoC,EAAAqN,yBAAA,aAAArN,CAA+C,cACjCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,6BAQnBA,EAAAqN,yBAAA,UAAArN,CAAsD,cAO9CA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QACtBvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAMAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,8CAb3BA,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,QAAAiC,EAAAnR,KAAAqU,SAAAtR,KAAA49C,SAAAxvC,EAAAnR,KAAAqU,SAAAtR,KAAA69C,QAAA,2BAgBRpxD,EAAAqN,yBAAA,UAAArN,CAAuD,cAQ/CA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QACtBvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,2EAf3BA,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,QAAAS,EAAA3P,KAAAqU,SAAA2S,MAAA25B,SAAAhxC,EAAA3P,KAAAqU,SAAA2S,MAAA45B,SAaIpxD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAI,EAAA,wBAKZnR,EAAAqN,yBAAA,UAAArN,CAA4D,cACrCA,EAAAuN,iBAAA,iBAAWvN,EAAAsN,yBAC9BtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOJzJ,EAAAsN,wBAAAtN,0BAEJA,EAAAqN,yBAAA,UAAArN,CAA0D,qBAElDA,EAAAuN,iBAAA,mCACJvN,EAAAsN,wBAAAtN,6BA5DRA,EAAAqN,yBAAA,YAKIrN,EAAA+R,qBAAA,EAAAslD,EAAA,cAmBAr3D,EAAA+R,qBAAA,EAAAulD,EAAA,cAqBAt3D,EAAA+R,qBAAA,EAAAwlD,EAAA,aAYAv3D,EAAA+R,qBAAA,EAAAylD,EAAA,aAKJx3D,EAAAsN,iEA3DItN,EAAA+Q,qBAAA,YAAA8E,EAAArF,MAE4BxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAAtR,MAmBAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAA2S,OAqBAx3B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAA+rC,YAYA5wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8E,EAAArF,KAAAqU,SAAA07B,SAAA,+DAMhCvgD,EAAAqN,yBAAA,cAAArN,CAGC,eAKOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+E,GAAA,IAAAC,EAAAlW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4E,EAAA65C,cAAa,GAEtB/vD,EAAAuN,iBAAA,YACJvN,EAAAsN,wBAAAtN,EAAS,2CAJLA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAjB,KAAA+hD,MAAA,wBAOJvyD,EAAAqN,yBAAA,YACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,oCAA8BvN,EAAAsN,wBAAAtN,6BAIrCA,EAAAqN,yBAAA,mBACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAFyCtN,EAAA+Q,qBAAA,QAAA0mD,GACrCz3D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAgqD,EAAA,MAMH/3D,mCAAgC,eAAhCg4D,EAAgC,WAuBzC,SAAAA,EACqC9gB,GAAkC/2C,EAAAC,KAAA43D,GAAlC53D,KAAA82C,QAtBpB92C,KAAA8uB,MAAQ,IAAI7kB,EAAAsV,aAEtBvf,KAAA0Q,KAAO,IAAI9G,EAAA60B,UAAU,CACxBhrB,KAAM,IAAI7J,EAAA80B,YAAY1+B,KAAK+1D,OAAOtiD,MAAQ,GAAI,CAAC7J,EAAA+0B,WAAWC,WAC1DlH,MAAO,IAAI9tB,EAAA80B,YAAY1+B,KAAK+1D,OAAOr+B,OAAS,GAAI,CAAC9tB,EAAA+0B,WAAWC,WAC5DkyB,WAAY,IAAIlnD,EAAA80B,YAAY1+B,KAAK+1D,OAAOjF,YACxCrQ,SAAU,IAAI72C,EAAA80B,cAAc1+B,KAAK+1D,OAAOtV,SAAU,MAG/CzgD,KAAAqjB,SAAU,CAcd,CAACvjB,SAAA83D,EAAA,EAAAn2D,IAAA,SAAAkE,eAVA,OAAO3F,KAAK82C,MAAMif,MACtB,GAEA,CAAAt0D,IAAA,QAAAkE,IACA,WACI,OAAO3F,KAAK82C,MAAM+gB,OAAS,EAC/B,GAAC,CAAAp2D,IAAA,cAAAC,MAMM,WACH1B,KAAKqjB,SAAU,EACf,IAAMy0C,EAAUvlC,IAAA,GACTvyB,KAAK+1D,QAAM,IACdxiD,GAAIvT,KAAK+1D,OAAOxiD,IAAE,UAAAnP,UAAcs7C,EAAA6T,WAAU,YACvCvzD,KAAK0Q,KAAKhP,OAEjB1B,KAAK8uB,MAAMrP,KAAK,CACZ6P,OAAQ,OACRigB,SAAU,CACNtzB,KAAM,IAAIi0C,EAAAU,aAAYr+B,IAAA,GACfvyB,KAAK82C,MAAMihB,QAAM,IACpBh1C,QAAS/iB,KAAK82C,MAAMihB,OAAOh1C,QACtB/G,OAAO,SAACsW,GAAC,OAAKA,EAAE/e,KAAOukD,EAAWvkD,EAAE,GACpCnP,OAAO,CAAC0zD,SAI7B,KAACF,CAAA,CA7CwC,GAAhCA,SAAgC,mBAAA33D,iBAAhC23D,GAAgC13D,EAAAwI,4BAwB7BsF,EAAAsuB,iBAAe,EAxBlBs7B,EAAgC,UAAA13D,EAAA,kCAAhC03D,EAAgCzuD,UAAA,4BAAAwW,QAAA,CAAAmP,MAAA,SAAAxlB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,ylCAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhGrCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,GAA4CvN,EAAAsN,yBAChDtN,EAAA+R,qBAAA,EAAA+lD,EAAA,gBAGJ93D,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAgmD,EAAA,cA+DA/3D,EAAA+R,qBAAA,EAAAimD,EAAA,gBAaAh4D,EAAA+R,qBAAA,EAAAkmD,EAAA,yBAAAj4D,EAAAkmB,kCAMAlmB,EAAAqN,yBAAA,6BACIrN,EAAA+R,qBAAA,GAAAmmD,EAAA,oBAGJl4D,EAAAsN,gEA3FQtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAjE,EAAAqsD,OAAAxiD,GAAA,6BAC2BrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAM9BnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,OAAAhH,EAAA2Z,QAAAnjB,CAAwB,WAAAqtB,GA8DxBrtB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,SAmB8BnjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAmuD,MAAA,mWAO9BD,CAAgC,qJCjH7C95D,EAAA,2GAsCwBoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,2EADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0qD,EAAA5kD,KAAA,+BALRvT,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAqmD,EAAA,cAMJp4D,EAAA0hB,0DAJS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAonD,EAAA,+DAnCrBn4D,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WAGJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAuB,cASfA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqd,GAAA,IAAA7X,EAAA1W,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAoF,EAAAqjB,QAAArjB,EAAAqjB,OAAA,GAEA/5B,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAAqCvN,EAAAsN,wBAAAtN,KAGvDA,EAAAqN,yBAAA,UAAArN,CAEC,WACiBA,EAAAuN,iBAAA,GAAgBvN,EAAAsN,yBAC9BtN,EAAAqN,yBAAA,WAAArN,CAAoB,YAIZA,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,GAAAsmD,EAAA,uBAQJr4D,EAAAsN,wBAAAtN,GAERA,EAAA0hB,iCAAA,2CA9BY1hB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,aAAAvN,EAAA4nB,OAAA/5B,CAA2B,aAAAmS,EAAA4nB,OAA3B/5B,CAA2B,eAAAmS,EAAA4nB,QAKjB/5B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA4nB,OAAA,sBAMA/5B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA,MAAA9B,EAAA4J,KAAA,KAAA5J,EAAA4J,KAAAxI,MAKNvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,iBAAA0E,EAAA4J,KAAA,KAAA5J,EAAA4J,KAAAqc,UAAA,MAAAjmB,EAAA4J,KAAA,KAAA5J,EAAA4J,KAAA83C,WAAA,OAI0B7zD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA4J,KAAAg4C,YAAA,EAoBrCr0D,6BAA0B,eAA1B44D,EAA0B14D,EAvDvC,SAAA04D,IAAAz4D,EAAAC,KAAAw4D,GA0DWx4D,KAAAi6B,QAAS,IAHPu+B,SAA0B,mBAAAv4D,iBAA1Bu4D,EAA0B,EAA1BA,EAA0B,UAAAt4D,EAAA,kCAA1Bs4D,EAA0BrvD,UAAA,gCAAAuW,OAAA,CAAAzD,KAAA,QAAAiD,MAAArN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,+xBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GApD/BvJ,EAAA+R,qBAAA,EAAAwmD,EAAA,6BAAev4D,EAAA+Q,qBAAA,OAAAvH,EAAAuS,gPAoDVu8C,CAA0B,qJCxDvC16D,EAAA,gFAmBYoC,EAAAqN,yBAAA,WAIIrN,EAAAyJ,oBAAA,uBACJzJ,EAAAsN,iDADoBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAynD,EAAA,wBAEpBx4D,EAAAqN,yBAAA,WAAArN,CAIC,OACMA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,wBAAAtN,yBAG7BA,EAAAyJ,oBAAA,yBAiBK/J,6BAA0B,eAA1B+4D,EAA0B,WAMnC,SAAAA,EAAoBC,GAA8B74D,EAAAC,KAAA24D,GAA9B34D,KAAA44D,UAJJ54D,KAAA64D,WAAa74D,KAAK44D,QAAQ52B,SAE1BhiC,KAAAqjB,QAAUrjB,KAAK44D,QAAQv1C,OAEc,CAACvjB,SAAA64D,EAAA,EAAAl3D,IAAA,WAAAC,MAE/C,WACH1B,KAAK44D,QAAQ/qC,cACjB,GAAC,CAAApsB,IAAA,cAAAC,MAEM,WACH1B,KAAK44D,QAAQ5iC,aACjB,GAEA,CAAAv0B,IAAA,YAAAC,MACO,SAAUotD,EAAehwB,GAC5B,OAAOA,EAAQA,EAAMvrB,QAAKjO,CAC9B,KAACqzD,CAAA,CAnBkC,GAA1BA,SAA0B,mBAAA14D,iBAA1B04D,GAA0Bz4D,EAAAwI,4BAAAC,EAAAmwD,uBAAA,EAA1BH,EAA0B,UAAAz4D,EAAA,kCAA1By4D,EAA0BxvD,UAAA,0BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ksBAAA9D,SAAA,SAAAC,EAAAC,SAAA,EAAAD,IA7C/BvJ,EAAAqN,yBAAA,WAGIrN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,WAAoBrN,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC5BtN,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,iBAAWvN,EAAAsN,yBAC7BtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACvBtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,yBAC7BtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBACxBtN,EAAAyJ,oBAAA,YACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,GAAA8mD,EAAA,2CAMA74D,EAAA+R,qBAAA,GAAA+mD,EAAA,6CAOJ94D,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAgnD,EAAA,iEAZ0B/4D,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,KAAApM,EAAAmvD,YAAA34D,CAAuB,eAAAwJ,EAAA2jB,WAOxCntB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAgF,EAAA/V,EAAA4V,sBAAA,KAAApM,EAAAmvD,cAAA5iD,EAAA5Q,SAMJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAA4V,sBAAA,KAAApM,EAAA2Z,8PAgBAs1C,CAA0B,0RCrDvC,IAAA1uD,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OAGA0C,EAAA1C,EAAA,OAEAoyD,EAAApyD,EAAA,MACAo7D,EAAAp7D,EAAA,OAGAq7D,GADAr7D,EAAA,MACAA,EAAA,qJAkCwCoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,yBACJvN,EAAAsN,uFAUJtN,EAAAqN,yBAAA,kBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA8F,GAAA,IAAAkiD,EAAAl5D,EAAAqR,0BAAAwM,UAAAQ,GAAAre,EAAAqR,wBAAA,UAE5BrR,EAAAsR,sBAAA+M,GAAA86C,mBAAAD,EAAAjoD,GACV,GACmCjR,EAAAsN,wBAAA,qDALGtN,EAAA+Q,qBAAA,UAAAmoD,EAAArF,SAAA,+DAMJ7zD,EAAAqN,yBAAA,WAAArN,CAGC,WAHDA,CAGC,cAHDA,CAGC,cAaqBA,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,KAGxBA,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA0uC,GAAA,IAAAsZ,EAAAl5D,EAAAqR,0BAAAwM,UAAArG,EAAAxX,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAkG,EAAAw+C,QAAAkD,GAAa,GAEtBl5D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,SAAGvN,EAAAsN,wBAAAtN,IAAW,qDAxBxBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAmoD,EAAArF,SAAA,sEASI7zD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAQJ/Q,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAyrD,EAAArF,SAAA,+BAtDZ7zD,EAAAqN,yBAAA,WAAArN,CAIC,WAJDA,CAIC,YAGWA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAqnD,EAAA,cAMJp5D,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAsnD,EAAA,oBAQAr5D,EAAA+R,qBAAA,EAAAunD,EAAA,eAgCJt5D,EAAAsN,gFAzDYtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAyrD,EAAA3lD,KAAA,KAICvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAmoD,EAAAr2C,QAAA1d,QAQLnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,IAAA+kD,EAAAtI,WAAA,IAAA5wC,EAAAu5C,MAAA,KAWCv5D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAmoD,EAAAr2C,QAAA1d,QAIAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAmoD,EAAAr2C,QAAA1d,OAAA,sDAvCjBnF,EAAAqN,yBAAA,cAAArN,CAGC,WAEOA,EAAA+R,qBAAA,EAAAynD,EAAA,eAiEJx5D,EAAAsN,wBAAAtN,oFApEAA,EAAA+Q,qBAAA,QAAA0oD,GAMyBz5D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAA0E,EAAAikD,YAAA15D,EAAA0R,0BAAA,EAAAC,IAAA8nD,GAAA,2BATjCz5D,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAA4nD,EAAA,iBAwEJ35D,EAAA0hB,yFAvES1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA4Q,EAAA+3C,YAAA15D,EAAA0R,0BAAA,EAAAC,IAAA8nD,GAAAt0D,OAAA,2BAJjBnF,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,mBACIrN,EAAA+R,qBAAA,EAAA6nD,EAAA,sBA0EJ55D,EAAAsN,yBACJtN,EAAA0hB,2EA3EsC1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAc,EAAAkhD,WAAA,2BAH1C/yD,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAA8nD,EAAA,sBA8EJ75D,EAAAsN,8FA9EmBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAoB,EAAA2nD,mBAAA95D,CAA2B,WAAA8hB,EAAA,+DAmF1C9hB,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,eACIrN,EAAAuN,iBAAA,cACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAQIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA6oD,GAAA,IAAA7Z,EAAAlgD,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA4uC,EAAA4Z,oBAA8B,EAAI,GAElC95D,EAAAuN,iBAAA,eACJvN,EAAAsN,yBACJtN,EAAA0hB,iCAAA,4CARQ1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAkhD,EAAArzB,MAAAo7B,WAAAh6D,CAA8B,WAAAiyD,EAAArzB,MAAAo7B,WAA9Bh6D,CAA8B,kBAAAiyD,EAAArzB,MAAAo7B,WAAA,+DAUlCh6D,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+oD,GAAA,IAAAC,EAAAl6D,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA4oD,EAAAJ,oBAA8B,EAAK,GAEnC95D,EAAAuN,iBAAA,YACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAA2BrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+oD,GAAA,IAAAE,EAAAn6D,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA6oD,EAAAC,YAAW,GAC3Cp6D,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAA,2BA/BRtN,EAAAqN,yBAAA,eAIIrN,EAAA+R,qBAAA,EAAAsoD,EAAA,sBAiBAr6D,EAAA+R,qBAAA,EAAAuoD,EAAA,0BAAAt6D,EAAAkmB,kCAYJlmB,EAAAsN,8FA7BmBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA8E,EAAAikD,mBAAA95D,CAA2B,WAAAu6D,EAAA,2BA+B1Cv6D,EAAAqN,yBAAA,YACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAavN,EAAAsN,wBAAAtN,2CAAbA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAmU,EAAAjF,QAAA,2BAeKnjB,EAAAqN,yBAAA,YAKIrN,EAAAuN,iBAAA,GAIJvN,EAAAsN,0GANItN,EAAA+Q,qBAAA,aAAAqwC,EAAAoZ,WAAAC,IAEAz6D,EAAAwN,oBAAA,GAAAxN,EAAA2f,6BAAA,IAAA86C,EAAA53C,QAAA1d,OAAA,cAAAs1D,EAAA53C,QAAA1d,OAAA,mFAZZnF,EAAAqN,yBAAA,WAAArN,CAIC,WAJDA,CAIC,YAEiCA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACzCtN,EAAA+R,qBAAA,EAAA2oD,EAAA,cAUJ16D,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,kBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAwpD,GAAAz6D,EAAAkR,wBAAAypD,GAAA98C,UAAAyjC,GAAAthD,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAgwC,GAAA6X,mBAAAsB,GAAAxpD,GAAgC,GACpDjR,EAAAsN,wBAAAtN,EAAY,0DApBiBA,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAwmD,EAAAlnD,MAGrBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA0pD,EAAA53C,QAAA1d,QAYLnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,IAAAsmD,EAAAvG,WAAA,IAAA0G,EAAArB,MAAA,KAGAv5D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA0pD,EAAA5G,SAAA,2BA5BZ7zD,EAAAqN,yBAAA,cAAArN,CAA4B,QACpBA,EAAAuN,iBAAA,mBAAavN,EAAAsN,wBAAAtN,GAErBA,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAA8oD,EAAA,cA4BJ76D,EAAAsN,iEAzByBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA2F,EAAAkoB,MAAApG,MAAA,EAiExB94B,8BACT,eADSo7D,EACT,SAAAn6D,GAAAC,EAAAk6D,EAAAn6D,GAAA,IAsBCE,EAtBDC,EAAAC,EAAA+5D,GAwBA,SAAAA,EACY75D,EACyB21C,GAA6B,IAAAx1C,EAAAvB,SAAAC,KAAAg7D,IAE9D15D,EAAAN,EAAAO,KAAAvB,OAHQmB,OACyBG,EAAAw1C,QAtBpBx1C,EAAAwtB,MAAQ,IAAI7kB,EAAAsV,aAEtBje,EAAA+hB,QAAU,GAUV/hB,EAAAs4D,WAAsC,GAEtCt4D,EAAA2xD,WAAuB,GAW1B3xD,EAAK+hB,QAAU,kBAAkB/hB,CACrC,CAACxB,SAAAk7D,EAAA,EAAAv5D,IAAA,OAAAkE,IAVD,WACI,OAAO3F,KAAKmB,KAAK85D,aACrB,GAAC,CAAAx5D,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAUM,SAAAC,IAAA,IAAAo5D,GAAAC,GAAAC,GAAAj2D,GAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAxC,KAAKqjB,QAAU,kBACfrjB,KAAK8+B,MAAQ,IAAIo6B,EAAAmC,cAAcr7D,KAAK82C,MAAMhY,OAAOx8B,GAAAE,KAAA,EAC9BxC,KAAK82C,MAAMwkB,kBACV,QAD2BJ,GAC3Cl7D,KAAK8+B,MAAMhQ,aAAK,IAAAosC,IAAO,QAAPC,GAAhBD,GAAkBv+C,aAAK,IAAAw+C,IAAO,QAAPC,GAAvBD,GAAyBnkD,aAAK,IAAAokD,QAAd,EAAhBA,GAAgCrnD,WACnC,OAFD/T,KAAKgvD,MAAK1sD,GAAA4B,KAGVlE,KAAK82C,MAAM8f,KAAK3jD,UAAU,SAACC,IACvB/N,GAAKke,QAAU,kBACf,IAE4ByT,GAFtBm8B,MAAazyD,EAAAipC,QAAOv2B,GAAK4I,IAAI,SAACG,IAAI,OAAKA,GAAK+e,QAAQ,IACpDlf,GAAM,GAAGib,GAAAC,EACGi8B,IAAU,QAAAh8B,GAAA,WAAE,IAAnBskC,GAAGzkC,GAAAp1B,MACVoa,GAAIy/C,IAAOroD,GAAK8I,OAAO,SAACC,IACpB,OACIA,GAAK+e,WAAaugC,OAClBpC,EAAAqC,uBACIv/C,GACA9W,GAAK6pD,MACL7pD,GAAK25B,MAAMhQ,MAGvB,IAVJ,IAAAiI,GAAApN,MAAAmN,GAAAC,GAAAI,KAAAC,MAAAH,IAWC,OAAAtM,IAAAoM,GAAA7R,EAAAyF,GAAA,SAAAoM,GAAAM,GAAA,CACDlyB,GAAK8tD,WAAaA,GAClB9tD,GAAKy0D,WAAa99C,GAClB3W,GAAKs2D,uBACLt2D,GAAKtB,QAAQ,gBAAiB,kBAAOsB,GAAKke,QAAU,EAAE,EAAG,IAC7D,GAAG,wBAAA/gB,GAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACN,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAEM,SAAQua,GAAkD,IAAAy/C,EAAAl1D,GAAAxG,KAA9B27D,KAAA12D,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACzB22D,GAAW57D,KAAK8+B,MAAMpG,MAAM9I,KAC9B,SAACisC,IAAG,OACAA,GAAItoD,KAAO0I,EAAK1I,IAChBsoD,GAAI94C,QAAQ1d,SACRw2D,GAAI94C,QAAQoZ,OACR,SAAC+xB,EAAG5qC,IAAC,OACD4qC,GACCjyC,EAAK8G,QAAQ6M,KAAK,SAACksC,IAAG,OAAKx4C,GAAE/P,KAAOuoD,GAAIvoD,EAAE,GACrC,EACA,EAAE,EACZ,EACH,GAETooD,IAA8B,QAAhBD,EAAIz/C,EAAK8G,eAAO,IAAA24C,GAAZA,EAAcr2D,OAChCrF,KAAK82C,MAAMilB,cAAc9/C,EAAK8G,SAASi5C,KAAK,SAACj5C,IACzC,IAAMk5C,EAAW,IAAI/L,EAAAU,aAAYr+B,IAAA,GAAMtW,GAAI,IAAE8G,cAC7Cvc,GAAK0vD,QAAQ+F,GAAU,EAC3B,GAEAj8D,KAAK8+B,MAAQ,IAAIo6B,EAAAmC,cAAa9oC,IAAA,GACvBvyB,KAAK8+B,OAAK,GAFV88B,GAEU,CACbljC,MAAO14B,KAAK8+B,MAAMpG,MACb1c,OACG,SAACsW,IAAC,QAEMA,GAAE/e,KAAO0I,EAAK1I,IACd+e,GAAE+hC,iBAAmBp4C,EAAKo4C,eAC7B,GAERjwD,OAAO,CACJ,IAAI8rD,EAAAU,aAAYr+B,IAAA,GACTtW,GAAI,IACP83C,SAAU6H,GAAS7H,SAAW,QAM7B,CACbr7B,MAAO14B,KAAK8+B,MAAMpG,MAAMt0B,OAAO,CAC3B,IAAI8rD,EAAAU,aAAYr+B,IAAA,GAAMtW,GAAI,IAAE83C,SAAU,UAIlD/zD,KAAKy7D,sBACT,GAAC,CAAAh6D,IAAA,aAAAC,MAEM,SAAWua,GACdjc,KAAK8+B,MAAQ,IAAIo6B,EAAAmC,cAAa9oC,IAAA,GACvBvyB,KAAK8+B,OAAK,IACbpG,MAAO14B,KAAK8+B,MAAMpG,MAAM1c,OACpB,SAAC3Y,GAAC,OACEA,EAAEkQ,KAAO0I,EAAK1I,IAAMlQ,EAAEgxD,iBAAmBp4C,EAAKo4C,cAAc,MAGxEr0D,KAAKy7D,sBACT,GAAC,CAAAh6D,IAAA,qBAAAC,MAEM,SAAmBua,EAAoBqc,GAC1C,IAAMsjC,GAAW57D,KAAK8+B,MAAMpG,MAAM9I,KAC9B,SAACisC,IAAG,OACAA,GAAItoD,KAAO0I,EAAK1I,IAAMsoD,GAAIxH,iBAAmBp4C,EAAKo4C,cAAc,GAEpE37B,GAAKvV,EAAOnjB,KAAK8+B,MAAMpG,QAEvBA,GADAkjC,GACQ57D,KAAK8+B,MAAMpG,MACd1c,OACG,SAACsW,IAAC,QAEMA,GAAE/e,KAAO0I,EAAK1I,IACd+e,GAAE+hC,iBAAmBp4C,EAAKo4C,eAC7B,GAERjwD,OAAO,CAAC,IAAI8rD,EAAAU,aAAYr+B,IAAA,GAAMtW,GAAI,IAAE83C,SAAUz7B,OAE3Ct4B,KAAK8+B,MAAMpG,MAAMt0B,OAAO,CAC5B,IAAI8rD,EAAAU,aAAYr+B,IAAA,GAAMtW,GAAI,IAAE83C,SAAUz7B,QAGxCtb,KAAK,SAACmW,GAAGrU,IAAC,OAAKqU,GAAE1f,KAAK+pB,cAAc1e,GAAErL,KAAK,GACjDzT,KAAK8+B,MAAQ,IAAIo6B,EAAAmC,cAAa9oC,IAAA,GACvBvyB,KAAK8+B,OAAK,IACbpG,YAEJ14B,KAAKy7D,sBACT,GAAC,CAAAh6D,IAAA,uBAAAC,MAEM,WAAoB,IAAA0F,EAAApH,KACvB,QAAWu7D,KAAOv7D,KAAK45D,WAAY,KACQj+B,GADRC,GAAA5E,EACZh3B,KAAK45D,WAAW2B,IAAI,QAAA93B,GAAA,WAAE,IAA9BxnB,EAAI0f,GAAAj6B,MACVua,EAAa83C,SAAW3sD,EAAK03B,MAAMpG,MAAMyD,OACtC,SAAC+xB,GAAG57B,IAAC,OAAMA,GAAE/e,KAAO0I,EAAK1I,GAAK26C,GAAI57B,GAAEyhC,SAAW7F,EAAC,EAChD,IAHR,IAAAtyB,GAAAjS,MAAAgS,GAAAC,GAAAzE,KAAAC,MAAAqM,IAKC,OAAA9Y,IAAAiR,GAAA1W,EAAAyF,GAAA,SAAAiR,GAAAvE,GAAA,EAET,GAAC,CAAA51B,IAAA,aAAAC,MAEM,SAAWua,GACd,OAAOA,EAAK8G,QAAQjH,IAAI,SAACwW,GAAC,OAAKA,EAAE7e,IAAI,GAAEoB,KAAK,KAChD,GAAC,CAAApT,IAAA,YAAAC,MAEM,WACH1B,KAAK8uB,MAAMrP,KAAK,CACZ6P,OAAQ,OACRigB,SAAU,CAAEzQ,MAAO9+B,KAAK8+B,QAEhC,GAAC,CAAAr9B,IAAA,eAAAC,MAEM,WACH1B,KAAKg6D,oBAAqB,CAC9B,KAACgB,CAAA,CA7KD,CAAQx6D,EAAAiI,cADCuyD,SACT,mBAAA/6D,iBADS+6D,GAA2B96D,EAAAwI,4BAAAC,EAAAG,qBAAA5I,EAAAwI,4BA2BxBsF,EAAAsuB,iBAAe,EA3BlB0+B,EACT,UAAA96D,EAAA,kCADS86D,EAA2B7xD,UAAA,+BAAAwW,QAAA,CAAAmP,MAAA,SAAA1lB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,0rDAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjMhCvJ,EAAA+R,qBAAA,EAAAiqD,EAAA,aAgFAh8D,EAAA+R,qBAAA,EAAAkqD,EAAA,gBAkCAj8D,EAAA+R,qBAAA,EAAAmqD,EAAA,yBAAAl8D,EAAAkmB,kCAMAlmB,EAAA+R,qBAAA,EAAAoqD,EAAA,yBAAAn8D,EAAAkmB,yEAxHiClmB,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAAnjB,CAAgB,WAAAqmB,GAiF5CrmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAA,+1BAgHA23C,CACT,iMC5NJ,IAAA/wD,EAAAnM,EAAA,OAOA0C,EAAA1C,EAAA,UACAA,EAAA,6HA+CwBoC,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,kEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,IAAAiU,EAAArM,KAAA60C,WAAA,IAAAxoC,EAAAmxC,MAAA,+BAaRv5D,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA2uD,EAAA,+BA6CwBp8D,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,0GAJItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAmU,sBAAA,IAAAkoD,EAAAzL,WAAA,IAAAx6C,EAAAmjD,MAAA,+BAjBZv5D,EAAAqN,yBAAA,wBAAArN,CAIC,WAJDA,CAIC,YAOWA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAuqD,EAAA,cASJt8D,EAAAsN,wBAAAtN,2BAnBAA,EAAA+Q,qBAAA,QAAAsrD,EAAAhpD,IAQQrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4uD,EAAA9oD,KAAA,KAICvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsrD,EAAAzL,WAAA,+DAhCrB5wD,EAAAuhB,kCAAA,GAGIvhB,EAAAqN,yBAAA,wBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAm2B,GAAA,IAAAk1B,EAAAv8D,EAAAqR,0BAAAwM,UAAAQ,EAAAre,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA+M,EAAAm+C,YAAAD,EAAAhpD,MAAAtC,EAAA,EAAAjR,CAAqC,yBAAAiR,GAAAjR,EAAAkR,wBAAAm2B,GAAA,IAAAk1B,EAAAv8D,EAAAqR,0BAAAwM,UAAAzG,EAAApX,EAAAqR,wBAAA,UAGjErR,EAAAsR,sBAAA8F,EAAAqlD,kBAAAF,EAAAtrD,GACV,GAEsCjR,EAAAqN,yBAAA,wBAAArN,CAAuC,aACnCA,EAAAyuB,iBAAA,MACSzuB,EAAAsN,wBAAAtN,GAGbA,EAAA+R,qBAAA,EAAA2qD,EAAA,2BAwBJ18D,EAAAsN,yBACJtN,EAAA0hB,iCAAA,oFApCQ1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoP,EAAAq8C,YAAAD,EAAAhpD,MAAAvT,CAAqC,iBAAAmgB,EAAApE,KAAA,KAAAoE,EAAApE,KAAAq4C,UAajBp0D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAwrD,EAAA,KAAAA,EAAA15C,QAAA,2BAyChB7iB,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,0GAJItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAmU,sBAAA,IAAAwoD,EAAA/L,WAAA,IAAAjwC,EAAA44C,MAAA,mEApBZv5D,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA0rD,EAAA38D,EAAAkR,wBAAA6Q,GAAAlE,UAAAmE,EAAAhiB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA0Q,EAAA46C,aAAAD,EAAAtpD,IAAApC,EAAA,EAAAjR,CAAkC,yBAAAiR,GAAA,IAAA0rD,EAAA38D,EAAAkR,wBAAA6Q,GAAAlE,UAAAqiC,EAAAlgD,EAAAqR,wBAAA,UAGhErR,EAAAsR,sBAAA4uC,EAAA2c,mBAAAF,EAAAtpD,GAAApC,GACR,GAEsCjR,EAAAqN,yBAAA,WAAArN,CAEC,YAIOA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA+qD,EAAA,cASJ98D,EAAAsN,wBAAAtN,EAAM,0DAvBNA,EAAA+Q,qBAAA,UAAAiQ,EAAA47C,aAAAD,EAAAtpD,IAAArT,CAAkC,iBAAAghB,EAAAjF,KAAA,KAAAiF,EAAAjF,KAAAq4C,UAY1Bp0D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAkvD,EAAAppD,KAAA,KAICvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA4rD,EAAA/L,WAAA,0BAlBb5wD,EAAA+R,qBAAA,EAAAgrD,EAAA,wEACoB/8D,EAAA+Q,qBAAA,gBAAAwrD,EAAA,KAAAA,EAAA15C,QAAA,2BAtDhC7iB,EAAAqN,yBAAA,WAAArN,CAIC,YAEOA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,EAAAirD,EAAA,sBA2CAh9D,EAAA+R,qBAAA,EAAAkrD,EAAA,0BAAAj9D,EAAAkmB,kCA6BJlmB,EAAAsN,wBAAAtN,wDA9EAA,EAAAuxD,sBAAA,QAAAgL,EAAAhpD,MAGIvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA8uD,EAAAhpD,KAAA,KAIKvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAwrD,EAAAhc,SAAAvgD,CAAuB,WAAAgtB,EAAA,+DArEpDhtB,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,eACIrN,EAAAyJ,oBAAA,sBAIAzJ,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+oD,GAAA,IAAAC,EAAAl6D,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4oD,EAAApyD,MAAAyX,OAAY,GAGrBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+oD,GAAA,IAAAE,EAAAn6D,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6oD,EAAArgC,UAAAva,OAAgB,GAGzBvf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,UAAArN,CAAsD,eAAtDA,CAAsD,SAAtDA,CAAsD,WAItCA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAAmrD,EAAA,WAGJl9D,EAAAsN,yBACAtN,EAAAqN,yBAAA,mBACIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA+oD,GAAA,IAAAW,EAAA56D,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAspD,EAAA7+C,KAAA83C,SAAA5iD,EAC/B,EADkBjR,CAA2B,2BAAAA,EAAAkR,wBAAA+oD,GAAA,IAAAkD,EAAAn9D,EAAAqR,0BAAA,OAEMrR,EAAAsR,sBAAA6rD,EAAApjC,OAASojC,EAAAnjC,aAAAza,KAAA49C,EAAApjC,QAElE,GAAE,GAEmB/5B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,iBACIrN,EAAA+R,qBAAA,GAAAqrD,EAAA,cAMJp9D,EAAAsN,yBACAtN,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,gBAAArN,CAAmC,aAE3BA,EAAA+R,qBAAA,GAAAsrD,EAAA,cAmFJr9D,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAEC,gBAOOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+oD,GAAA,IAAA7Y,EAAAphD,EAAAqR,0BAAA+vC,SAAArnB,QAAAqnB,EAAArnB,OAA2B/5B,EAAAsR,sBAAA8vC,EAAApnB,aAAAza,KAAA6hC,EAAArnB,QAAyB,GAEpD/5B,EAAAqN,yBAAA,YAAArN,CAA8C,kBACfA,EAAAuN,iBAAA,IAEzBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,OAIhBA,EAAA0hB,iCAAA,2CAnKY1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,SAAAoB,EAAA4J,KAAAuP,QAgBAtrB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAAvN,EAAA8nB,IAAAj6B,CAAyB,gBAAAmS,EAAA8nB,KAKfj6B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA8nB,IAAA,8BASFj6B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4J,KAAAxI,KAAA,KAEAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAA4J,KAAA60C,YAKJ5wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA4J,KAAA83C,SAAA7zD,CAA2B,QAA3BA,CAA2B,MAAAmS,EAAA4J,KAAAygB,OAAA,IAWXx8B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAA4J,KAAA40C,MAUM3wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAAwtB,QA2F1B3/B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAvN,EAAA4nB,QAK+B/5B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAA4nB,OAAA,gBAIvB/5B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4nB,OAAA,+DAOhB/5B,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,IAiBHN,+BAA4B,eAA5B49D,EAA4B,WAlMzC,SAAAA,IAAAz9D,EAAAC,KAAAw9D,GAoMoBx9D,KAAAi6B,QAAkB,EAClBj6B,KAAAm6B,KAAe,EACfn6B,KAAAy5D,KAAe,MAEdz5D,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAChBvf,KAAAk6B,aAAe,IAAIjwB,EAAAsV,aACnBvf,KAAAgI,MAAQ,IAAIiC,EAAAsV,aAEtBvf,KAAA88D,aAAwC,GACxC98D,KAAA08D,YAAsC,GAsDhD58D,SAAA09D,EAAA,EAAA/7D,IAAA,cAAAC,MAnDU,SAAY24B,GACXA,EAAQpe,MAAQjc,KAAKic,MACrBjc,KAAKwxB,SAEb,GAAC,CAAA/vB,IAAA,oBAAAC,MAEM,SAAkBg2B,EAA4BnkB,GACjD,GAAKmkB,EACL,CAAA13B,KAAK08D,YAAYhlC,EAAMjkB,MAAQF,EAAG,IACAujB,EADAC,EAAAC,EACbU,EAAM3U,SAAO,IAAlC,IAAAgU,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAoC,KAAzB2+B,EAAMj/B,EAAAp1B,MACbq0D,EAAO97B,OAAS87B,EAAOxiD,KAAOA,EACjC,OAAAoX,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,EACL,GAAC,CAAA51B,IAAA,qBAAAC,MAEM,SAAmB6R,EAAY8oB,GAAc,IAAAohC,EAC1C1H,EAAkB,QAAZ0H,EAAGz9D,KAAKic,YAAI,IAAAwhD,OAAA,EAATA,EAAW16C,QAAQ6M,KAAK,SAACvsB,GAAC,OAAKA,EAAEkQ,KAAOA,CAAE,GACrDwiD,IAAQA,EAAO97B,OAASoC,EAChC,GAAC,CAAA56B,IAAA,UAAAC,MAEO,WAAO,IAAAJ,EAAAtB,KACX,GAAKA,KAAKic,KACV,CAAKjc,KAAKic,KAAK83C,WACV/zD,KAAKic,KAAa83C,SAAW,GAElC/zD,KAAK88D,aAAe,GACpB98D,KAAK08D,YAAc,GACnB,IAE0B/gC,EAFpBkE,KAASr/B,EAAAipC,QAAOzpC,KAAKic,KAAK8G,QAAQjH,IAAI,SAACwW,GAAC,OAAKA,EAAEoF,OAAS,OAAO,IAC/DgmC,EAAa,GAAG9hC,EAAA5E,EACF6I,GAAM,QAAA4D,EAAA,WAAE,IAAjB/L,EAAKiE,EAAAj6B,MACNqhB,EAAUzhB,EAAK2a,KAAK8G,QAAQ/G,OAAO,SAACsW,GAAC,OAAKA,EAAEoF,QAAUA,CAAK,GACjEgmC,EAAWvnC,KAAK,CACZ1iB,KAAMikB,EACN+oB,WAAY19B,EAAQ6M,KAAK,SAAC0C,GAAC,OAAKA,EAAEmuB,QAAQ,GAC1C19B,aALR,IAAA6Y,EAAAjS,MAAAgS,EAAAC,EAAAzE,KAAAC,MAAAqM,GAOC,OAAA9Y,GAAAiR,EAAA1W,EAAAyF,EAAA,SAAAiR,EAAAvE,GAAA,CAED,GADAr3B,KAAK6/B,OAAS69B,EACV19D,KAAKic,KAAKg4C,YAAa,KACgB0J,EADhBC,EAAA5mC,EACLh3B,KAAKic,KAAKg4C,aAAW,QAAAh9B,EAAA,WAAE,IAA9B6kC,EAAG6B,EAAAj8D,MACJq0D,EAASz0D,EAAK2a,KAAK8G,QAAQ6M,KAAK,SAACvsB,GAAC,OAAKA,EAAEkQ,KAAOuoD,EAAIvoD,EAAE,GACxDwiD,IACAA,EAAO97B,QAAS,EAChB34B,EAAKw7D,aAAahB,EAAIvoD,KAAM,EAC5BjS,EAAKq7D,kBACDr7D,EAAKu+B,OAAOjQ,KAAK,SAACiuC,GAAC,OAAKA,EAAEpqD,OAASsiD,EAAOr+B,KAAK,GAC/Cq+B,EAAOxiD,MAPnB,IAAAqqD,EAAAj0C,MAAAg0C,EAAAC,EAAAzmC,KAAAC,MAAAH,GAUC,OAAAtM,GAAAizC,EAAA14C,EAAAyF,EAAA,SAAAizC,EAAAvmC,GAAA,GAET,KAACmmC,CAAA,CAhEoC,GAA5BA,SAA4B,mBAAAv9D,iBAA5Bu9D,EAA4B,EAA5BA,EAA4B,UAAAt9D,EAAA,kCAA5Bs9D,EAA4Br0D,UAAA,4BAAAuW,OAAA,CAAAzD,KAAA,OAAAge,OAAA,SAAAE,IAAA,MAAAs/B,KAAA,QAAA95C,QAAA,CAAAqa,UAAA,YAAAE,aAAA,eAAAlyB,MAAA,SAAAoB,SAAA,CAAAlJ,EAAAo6B,gCAAAhxB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,s8CA7GQ0iB,UAAAC,MAAAC,EAAA,knBA0FMF,UAAAG,MAAAD,EAAA,wJA5K/ChwB,EAAA+R,qBAAA,EAAA6rD,EAAA,wBAuKA59D,EAAA+R,qBAAA,EAAA8rD,EAAA,yBAAA79D,EAAAkmB,yEAvKelmB,EAAA+Q,qBAAA,OAAAvH,EAAAuS,KAAA/b,CAAY,WAAAiuB,EAAA,mZA+LtBqvC,CAA4B,qOClNzC,IAAAl9D,EAAAxC,EAAA,UACAA,EAAA,mHAkEQoC,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAEAzuB,EAAAsN,uFAMItN,EAAAqN,yBAAA,oBAIIrN,EAAA8Q,qBAAA,+BAAAgtD,EAAA99D,EAAAkR,wBAAA4Q,GAAAjE,UAAAuK,EAAApoB,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAA8W,EAAA21C,eAAAD,GAAoB,iCAErC99D,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAA,2DAJItN,EAAA+Q,qBAAA,iBAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAC,EAAA0f,WAAA,MAAAjU,EAAAyxC,WAAA,KAAAzxC,EAAAyxC,WAAAhtD,SAAA+3D,IADA99D,EAAAuxD,sBAAA,OAAAuM,GAIA99D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqwD,EAAA,MA9EhB,IAAME,EAAQ,CACVC,OAAM,knNAgBNC,OAAM,glEAaNC,OAAM,krLAMNC,MAAK,ioMAoDI1+D,+BAA4B,eAA5B2+D,EAA4B,WAWrC,SAAAA,EAAoBxkD,GAAiC,IAAAzY,EAAAtB,KAAAD,EAAAC,KAAAu+D,GAAjCv+D,KAAA+Z,SAVJ/Z,KAAA+8B,QAAS,EAET/8B,KAAAw+D,MAAQN,EAERl+D,KAAAy1B,QAAUz1B,KAAK+Z,OAAO0b,QAEtBz1B,KAAAy+D,WAAa,SAACpnC,GAAC,OAAK/1B,EAAKyY,OAAO0kD,WAAWpnC,EAAE,EAE7Cr3B,KAAAizD,WAAajzD,KAAK+Z,OAAOk5C,UAEe,CAACnzD,SAAAy+D,EAAA,EAAA98D,IAAA,iBAAAC,OAAAg9D,EAAA/8D,EAAAC,IAAAC,KAElD,SAAAC,EAAqB2R,GAAY,IAAAw/C,EAAA,OAAArxD,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACPxC,KAAKy1B,QAAQtyB,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,QAA3D2vD,EAA2D3wD,EAAA4B,KAA3D+uD,YACOhtD,SAASwN,GACpBzT,KAAKy+D,WAAW,CACZxL,WAAYA,EAAWj3C,OAAO,SAAC3Y,GAAC,OAAKA,IAAMoQ,CAAI,KAElDzT,KAAKy+D,WAAW,CAAExL,WAAU,GAAA7uD,OAAA+e,EAAM8vC,GAAU,CAAEx/C,MAAS,wBAAAnR,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC/D,SAAAi+D,EAAA9gD,GAAA,OAAAuhD,EAAA15D,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,YAAAC,MAAA,eAAAi9D,EAAAh9D,EAAAC,IAAAC,KAEM,SAAA0D,EAAgB2tD,GAAW,IAAArC,EAAA,OAAAjvD,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACPxC,KAAKy1B,QAAQtyB,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,QAArDutD,EAAqDprD,EAAAvB,KAArD2sD,MACC5qD,SAASitD,GACdlzD,KAAKy+D,WAAW,CAAE5N,KAAMA,EAAK70C,OAAO,SAAC3Y,GAAC,OAAKA,IAAM6vD,CAAG,KACnDlzD,KAAKy+D,WAAW,CAAE5N,KAAI,GAAAzsD,OAAA+e,EAAM0tC,GAAI,CAAEqC,MAAQ,wBAAAztD,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAClD,gBAAA4+D,EAAAj7B,GAAA,OAAAg7B,EAAA35D,MAAAhF,KAAAiF,UAAA,EAPA,MAOAs5D,EAhBwD,IAAAG,CAgBxD,CA3BoC,GAA5BH,SAA4B,mBAAAt+D,iBAA5Bs+D,GAA4Br+D,EAAAwI,4BAAAC,EAAAk2D,2BAAA,EAA5BN,EAA4B,UAAAr+D,EAAA,kCAA5Bq+D,EAA4Bp1D,UAAA,4BAAAuW,OAAA,CAAAqd,OAAA,UAAAzzB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wYAxBsC0iB,UAAAC,MAAAC,EAAA,iKAXvEhwB,EAAAqN,yBAAA,UAAArN,CAAwD,qBAAxDA,CAAwD,gBAEZA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAC1CtN,EAAAqN,yBAAA,aAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAA+0D,WAAA,CAAA1hC,OAAA5rB,GAA8B,iCAHnDjR,EAAAsN,wBAAAtN,KAQRA,EAAA+R,qBAAA,EAAA6sD,EAAA,YAGA5+D,EAAAqN,yBAAA,WAKIrN,EAAA+R,qBAAA,EAAA8sD,EAAA,oDAQJ7+D,EAAAsN,gCA3B4BtN,EAAA0f,sBAAA,aAAAlW,EAAAqzB,QAKhB78B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAwN,EAAAve,EAAA4V,sBAAA,IAAApM,EAAA+rB,UAAA,KAAAhX,EAAAse,QAMuC78B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAqzB,QAK/C78B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,YAAAlW,EAAAqzB,OAAA78B,CAA0B,WAAAwJ,EAAAqzB,QAIL78B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,KAAApM,EAAAupD,uTAepBsL,CAA4B,wJC5FzC,IAAAt0D,EAAAnM,EAAA,UACAA,EAAA,yEAmBoBoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAA4J,KAAA83C,UAAA,kCAEJ7zD,EAAAyJ,oBAAA,mDAGIzJ,EAAA+Q,qBAAA,MAAA8E,EAAAkG,KAAAuP,OAAA,GAAAtrB,EAAAurB,wBAAA,uBAGAvrB,EAAAyJ,oBAAA,qCAcAzJ,EAAAqN,yBAAA,UAIIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,IAAA/C,EAAA2K,KAAA60C,WAAA,IAAAx/C,EAAAmoD,MAAA,+BAEJv5D,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAiJ,EAAAmM,QAAA,4BAEJ7iB,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,UACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,UACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,SACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,SACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,SACJvN,EAAAsN,0BAoBX5N,gCAA6B,eAA7Bo/D,EAA6B,WAxG1C,SAAAA,IAAAj/D,EAAAC,KAAAg/D,GA0GoBh/D,KAAAi6B,QAAS,EACTj6B,KAAAqf,UAAW,EACXrf,KAAAi/D,WAAY,EACZj/D,KAAAy5D,KAAe,MACdz5D,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAChBvf,KAAAk/D,OAAS,IAAIj1D,EAAAsV,aAKjCzf,SAAAk/D,EAAA,EAAAv9D,IAAA,UAAAkE,IAHG,WAAkB,IAAAw5D,EACd,OAA4B,QAA5BA,EAAOn/D,KAAKic,KAAKg4C,mBAAW,IAAAkL,OAAA,EAArBA,EAAuBrjD,IAAI,SAACzY,GAAC,OAAKA,EAAEoQ,IAAI,GAAEoB,KAAK,KAC1D,KAACmqD,CAAA,CAXqC,GAA7BA,SAA6B,mBAAA/+D,iBAA7B++D,EAA6B,EAA7BA,EAA6B,UAAA9+D,EAAA,kCAA7B8+D,EAA6B71D,UAAA,8BAAAuW,OAAA,CAAAzD,KAAA,OAAAge,OAAA,SAAA5a,SAAA,WAAA4/C,UAAA,YAAAxF,KAAA,QAAA95C,QAAA,CAAAqa,UAAA,YAAAklC,OAAA,UAAA51D,MAAA,GAAAC,KAAA,GAAA+D,OAAA,+6EAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IArGlCvJ,EAAAqN,yBAAA,SAAArN,CAIC,cAKOA,EAAA8Q,qBAAA,0BAAStH,EAAAw1D,OAAAz/C,MAAa,GAEtBvf,EAAAqN,yBAAA,WAGIrN,EAAA+R,qBAAA,EAAAmtD,EAAA,aAMAl/D,EAAA+R,qBAAA,EAAAotD,EAAA,aAKAn/D,EAAA+R,qBAAA,EAAAqtD,EAAA,yBAAAp/D,EAAAkmB,kCAMJlmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAwC,UAAxCA,CAAwC,SAE3BA,EAAAuN,iBAAA,IAAyBvN,EAAAsN,yBAC9BtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,GAAAstD,EAAA,YAMAr/D,EAAA+R,qBAAA,GAAAutD,EAAA,cAMAt/D,EAAA+R,qBAAA,GAAAwtD,EAAA,cAMAv/D,EAAA+R,qBAAA,GAAAytD,EAAA,cAMAx/D,EAAA+R,qBAAA,GAAA0tD,EAAA,cAMAz/D,EAAA+R,qBAAA,GAAA2tD,EAAA,cAMA1/D,EAAA+R,qBAAA,GAAA4tD,EAAA,cAMJ3/D,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAAswB,UAAAva,MAAgB,GAEzBvf,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,4CA7FNA,EAAA0f,sBAAA,gBAAAlW,EAAAuwB,QAca/5B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuS,KAAA83C,UAAArqD,EAAA2V,UAKAnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAAuP,OAAA,KAAA9hB,EAAAuS,KAAAuP,OAAAnmB,OAAAnF,CAA2B,WAAAqmB,GAavBrmB,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAAuS,KAAAxI,MAAA,QAEDvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAuS,KAAA+e,SAAA,KAMC96B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuS,KAAA60C,YAMA5wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAAg4C,YAAA,KAAAvqD,EAAAuS,KAAAg4C,YAAA5uD,QAMAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAA40C,KAAA,KAAAnnD,EAAAuS,KAAA40C,KAAA5qD,SAAA,gBAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAA40C,KAAA,KAAAnnD,EAAAuS,KAAA40C,KAAA5qD,SAAA,UAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAA40C,KAAA,KAAAnnD,EAAAuS,KAAA40C,KAAA5qD,SAAA,eAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAA40C,KAAA,KAAAnnD,EAAAuS,KAAA40C,KAAA5qD,SAAA,mBAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAuS,KAAA40C,KAAA,KAAAnnD,EAAAuS,KAAA40C,KAAA5qD,SAAA,kBAYb/F,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,gBAAAlW,EAAAu1D,WAGU/+D,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAAu1D,UAAA,mGAQbD,CAA6B,oJC3G1C,IAAA/0D,EAAAnM,EAAA,OAOAgc,EAAAhc,EAAA,UAEAA,EAAA,0HAaoBoC,EAAAqN,yBAAA,+BAOIrN,EAAA8Q,qBAAA,2BAAA8b,EAAA5sB,EAAAkR,wBAAA8b,GAAAnP,UAAAsC,EAAAngB,EAAAqR,wBAAA,UAAarR,EAAAsR,sBAAA6O,EAAA2Z,UAAAva,KAAAqN,EAAAvZ,IAAuB,EAApCrT,CAAqC,wBAAA4sB,EAAA5sB,EAAAkR,wBAAA8b,GAAAnP,UAAAmC,EAAAhgB,EAAAqR,wBAAA,UAC3BrR,EAAAsR,sBAAA0O,EAAA4/C,WAAAhzC,GAAiB,GAAK,GACnC5sB,EAAAsN,wBAAA,0DANGtN,EAAA+Q,qBAAA,OAAA6b,EAAA5sB,CAAa,SAAA6R,EAAAkoB,SAAAnN,EAAAizC,UAAb7/D,CAAa,cAAbA,CAAa,YAAA6R,EAAAkpB,YAAAnO,EAAAvZ,IAAA,2BAVzBrT,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,UAA2BrN,EAAAuN,iBAAA,mBAAavN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,iCACJvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,UACIrN,EAAA+R,qBAAA,EAAA+tD,EAAA,+DAUJ9/D,EAAAsN,yBACJtN,EAAA0hB,4EAfQ1hB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAA6T,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAAa,OAAA,KAAAsO,EAAAnc,SAAA,gBAMqBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAzD,EAAAa,MAAA,+DAmBrBhT,EAAAqN,yBAAA,gCAQIrN,EAAA8Q,qBAAA,2BAAAivD,EAAA//D,EAAAkR,wBAAAqF,GAAAsH,UAAArH,EAAAxW,EAAAqR,wBAAA,UAAarR,EAAAsR,sBAAAkF,EAAAsjB,UAAAimC,EAAA1sD,IAAkB,EAA/BrT,CAAgC,wBAAA+/D,EAAA//D,EAAAkR,wBAAAqF,GAAAsH,UAAA5G,EAAAjX,EAAAqR,wBAAA,UACtBrR,EAAAsR,sBAAA2F,EAAA2oD,WAAAG,GAAiB,GAAK,GACnC//D,EAAAsN,wBAAA,0DAPGtN,EAAA+Q,qBAAA,OAAAgvD,EAAA//D,CAAa,SAAAge,EAAA+b,SAAAgmC,EAAAF,UAAb7/D,CAAa,WAAAge,EAAAmB,SAAApZ,SAAAg6D,EAAAF,WAAb7/D,CAAa,YAAAge,EAAA+c,YAAAglC,EAAA1sD,IAAbrT,CAAa,OAAAge,EAAAu7C,KAAA,2BAPrBv5D,EAAAqN,yBAAA,UAIIrN,EAAA+R,qBAAA,EAAAiuD,EAAA,gEAWJhgE,EAAAsN,kEATyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,IAAAM,EAAA+pD,WAAA,2BAP7BjgE,EAAAuhB,kCAAA,GACIvhB,EAAA+R,qBAAA,EAAAmuD,EAAA,2CAgBJlgE,EAAA0hB,0GAdS1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAC,EAAAoqD,YAAA,KAAA3+C,EAAAnc,OAAAnF,CAAmC,WAAAqmB,EAAA,wBAiB5CrmB,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,2DACJvN,EAAAsN,wBAAAtN,0BAIJA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,wBAAAtN,UADnCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAOhBrR,4BAAyB,eAAzBygE,EAAyB,WAgBlC,SAAAA,EAAoBtmD,GAAiCha,EAAAC,KAAAqgE,GAAjCrgE,KAAA+Z,SAfJ/Z,KAAAi6B,OAAiB,GACjBj6B,KAAAqf,SAAmB,GACnBrf,KAAAs7B,eAAiC,GACjCt7B,KAAAu4B,UAAsB,GACrBv4B,KAAAg6B,UAAY,IAAI/vB,EAAAsV,aAChBvf,KAAAu7B,SAAW,IAAItxB,EAAAsV,aAEhBvf,KAAAkT,KAAO,IAAI4G,EAAAqB,gBAAgC,IAC3Cnb,KAAAqjB,QAAUrjB,KAAK+Z,OAAOsJ,QACtBrjB,KAAAmgE,UAAYngE,KAAK+Z,OAAOumD,aAMgB,CAACxgE,SAAAugE,EAAA,EAAA5+D,IAAA,OAAAkE,IAJzD,WACI,OAAO3F,KAAK+Z,OAAOkhD,aACvB,GAAC,CAAAx5D,IAAA,cAAAC,MAIM,SAAY24B,GACXA,EAAQiB,gBACRt7B,KAAKkT,KAAK1Q,KAAKxC,KAAKs7B,gBAAkB,GAE9C,GAAC,CAAA75B,IAAA,cAAAC,MAEM,SAAY6+D,GAAe,IAAAC,EAC9B,OAAqB,QAArBA,EAAOxgE,KAAKu4B,iBAAS,IAAAioC,OAAA,EAAdA,EAAgBv6D,SAASs6D,EACpC,GAAC,CAAA9+D,IAAA,aAAAC,MAEM,SAAWua,GAAgD,IAE7Cy/C,EAFiB+E,EAAAx7D,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAClCjF,KAAKu7B,SAAS9b,KAAKxD,GACfwkD,IACY,QAAZ/E,EAAAz/C,EAAK8G,eAAO,IAAA24C,GAAZA,EAAchyC,QAAQ,SAACrmB,GAAC,cAAYA,EAAE42B,MAAM,GAEpD,KAAComC,CAAA,CAjCiC,GAAzBA,SAAyB,mBAAApgE,iBAAzBogE,GAAyBngE,EAAAwI,4BAAAC,EAAAk2D,2BAAA,EAAzBwB,EAAyB,UAAAngE,EAAA,kCAAzBmgE,EAAyBl3D,UAAA,yBAAAuW,OAAA,CAAAua,OAAA,SAAA5a,SAAA,WAAAic,eAAA,iBAAA/C,UAAA,aAAA5Y,QAAA,CAAAqa,UAAA,YAAAuB,SAAA,YAAAnyB,SAAA,CAAAlJ,EAAAo6B,gCAAAhxB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,y3BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjE9BvJ,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAAyuD,EAAA,oDAmBAxgE,EAAAqN,yBAAA,UAA2BrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,iCACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA0uD,EAAA,oDAkBJzgE,EAAAsN,yBACAtN,EAAA+R,qBAAA,GAAA2uD,EAAA,yBAAA1gE,EAAAkmB,kCAUAlmB,EAAA+R,qBAAA,GAAA4uD,EAAA,yBAAA3gE,EAAAkmB,8EApDmBlmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAApM,EAAAwJ,OAAA,KAAAsO,EAAAnc,QAqBXnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAA8Q,EAAAve,EAAA4V,sBAAA,IAAApM,EAAAy2D,YAAA,KAAA1hD,EAAApZ,SAAA,uBAEWnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA4V,sBAAA,IAAApM,EAAA2Z,SAAAnjB,CAA0B,WAAA8hB,EAAA,sGAyCxCq+C,CAAyB,gOC9EtC,IAAA7/D,EAAA1C,EAAA,OAEAyC,GADAzC,EAAA,MACAA,EAAA,OACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAQAoyD,EAAApyD,EAAA,MACAq7D,EAAAr7D,EAAA,uCAuBa8B,4BAAyB,eAAzBi/D,EAAyB,WAoGlC,SAAAA,EACY19D,EACAD,GAA0B,IAAAI,EAAAtB,KAAAD,EAAAC,KAAA6+D,GAD1B7+D,KAAAmB,OACAnB,KAAAkB,YArGJlB,KAAA68B,SAAW,IAAI/iB,EAAAqB,gBAAsC,IACrDnb,KAAAoxB,SAAW,IAAItX,EAAAqB,gBAAsC,CACzD4hB,OAAQ,GACR8zB,KAAM,GACNoC,WAAY,KAERjzD,KAAAmxB,SAAW,IAAIrX,EAAAqB,gBAAgB,IAEvBnb,KAAAqjB,QAAUrjB,KAAKmxB,SAAS7V,eACxBtb,KAAAy1B,QAAUz1B,KAAKoxB,SAAS9V,eAExBtb,KAAAwF,SAAWxF,KAAKmB,KAAKkX,gBAAgBlV,QACjD7C,EAAA0b,QAAO,SAAC3Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAwxB,WAAU,SAACzuB,GAAC,SACR9C,EAAAopC,cAAatmC,EAAEkQ,GAAI,qBAAqBpQ,QACpC7C,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAoB,GAC5C,MAEL/Z,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,EAAE+T,OAA2B,MACxC9W,EAAAsjB,KAAI,SAACvgB,GAAC,OACF/B,EAAKJ,UAAUu/B,KAAK,2BAA6B,MAADp9B,MAAGmsD,eAAc,MAErElvD,EAAAuyB,aAAY,IAGA7yB,KAAA8gE,aAAe9gE,KAAKwF,SAASrC,QACzC7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,EAAEy9D,cAAgB,EAAE,IAEnB9gE,KAAA2tD,aAAe3tD,KAAKwF,SAASrC,QACzC7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,EAAE09D,gBAAkB,EAAE,IAGrB/gE,KAAAghE,kBAA6ClnD,EAAAgJ,eAAc,CACvE9iB,KAAK68B,SACL78B,KAAKmB,KAAKkX,kBACXlV,QACC7C,EAAA0b,QAAO,SAAA1V,GAAQ,QAAR0c,EAAA1c,EAAA,GAAQ,EAAW,MAC1BhG,EAAAwxB,WAAU,SAAA7O,GAAoB,IAAAC,EAAAF,EAAAC,EAAA,GAAhBnP,EAAIoP,EAAA,GAAJpP,KAAQkF,EAAGkK,EAAA,GACrB5hB,SAAK6vB,SAAS3uB,KAAK,WAAQ,EACpBjC,EAAAopC,cAAa71B,GAAQkF,EAAIzF,GAAI,YAAYpQ,QAC5C7C,EAAAwb,KAAI,SAACjD,GAAC,OAAKA,EAAEzB,QAAQ0E,IAAI,SAACzY,GAAC,OAAK,IAAI6sD,EAAAU,aAAavtD,EAAE,EAAC,MACpD/C,EAAAmyB,YAAW,SAACpvB,GAAC,MAAK,EAAE,GAE5B,IAAC,EACD/C,EAAAsjB,KAAI,SAACvgB,GAAC,OAAK/B,EAAK6vB,SAAS3uB,KAAK,GAAG,MACjClC,EAAAuyB,aAAY,IAGA7yB,KAAAizD,WAAajzD,KAAKghE,eAAe79D,QAC7C7C,EAAAwb,KAAI,SAACzY,GAAC,SAAK7C,EAAAipC,QAAOpmC,EAAEyY,IAAI,SAACwW,GAAC,OAAKA,EAAE0I,QAAQ,GAAE,IAG/Bh7B,KAAAsgE,iBAAgBxmD,EAAAgJ,eAAc,CAC1C9iB,KAAKoxB,SACLpxB,KAAKghE,iBACN79D,QACC7C,EAAAwxB,WAAS,eAAA2L,EAAA97B,EACL,SAAAoxB,GAAA,IAAAC,EAAAhQ,EAAA+P,EAAA,GAAAkuC,EAAAjuC,EAAA,GAEQ+J,EAAMkkC,EAANlkC,OACA8zB,EAAIoQ,EAAJpQ,KACAoC,EAAUgO,EAAVhO,WACAjpB,EAAOi3B,EAAPj3B,QACAh4B,EAAIivD,EAAJjvD,KACAsC,EAAQ2sD,EAAR3sD,SACAyC,EAASkqD,EAATlqD,UAEJue,EAACtC,EAAA,UAAApxB,IAAAC,KAAA,SAAAC,IAAA,IAAAktD,EAAA97C,EAAA,OAAAtR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,KAEmB22D,EAAA+H,yBAChBl3B,GACF1mC,YAAW,OAFP0rD,SAAK1sD,EAAA4B,KAGX64B,EAASA,EAAO7J,cACZhgB,EAAO6pB,EACLzH,EAAEtZ,OAAO,SAAC3Y,GAAC,OAAKA,EAAEoQ,KAAKyf,cAAcjtB,SAAS82B,EAAO,GACrDzH,EACNpiB,EAAO29C,EAAKxrD,OACN6N,EAAK8I,OAAO,SAAC3Y,GAAC,OAAKwtD,EAAK9tB,MAAM,SAAC9iC,GAAC,OAAKoD,EAAEwtD,KAAK5qD,SAAShG,EAAE,EAAC,GACxDiT,EAINA,GAHAA,EAAO+/C,EAAW5tD,OACZ6N,EAAK8I,OAAO,SAAC3Y,GAAC,OAAK4vD,EAAWhtD,SAAS5C,EAAE23B,SAAS,GAClD9nB,GACM8I,OAAO,SAAC3Y,GAAC,SACjB81D,EAAAqC,uBAAsBn4D,EAAG2rD,EAAO,CAC5Bh9C,OACAsC,WACAyC,aACK,GACXzU,EAAAqB,OAAA,SACKuP,GAAI,wBAAA5Q,EAAAwC,OAAA,EAAAhD,EAAA,EAtBVF,EAsBU,GACd,gBAAAub,GAAA,OAAAsgB,EAAAz4B,MAAAhF,KAAAiF,UAAA,EAlCI,KAkCJ,EAEL3E,EAAAuyB,aAAY,GAUb,CAAC/yB,SAAA++D,EAAA,EAAAp9D,IAAA,gBAAAkE,IAPJ,WACI,OAAO3F,KAAKmB,KAAK85D,aACrB,GAAC,CAAAx5D,IAAA,aAAAC,MAOM,SAAWy/D,GACdnhE,KAAK68B,SAASr6B,KAAI+vB,IAAA,GAAMvyB,KAAK68B,SAAS9jB,YAAeooD,GACzD,GAAC,CAAA1/D,IAAA,aAAAC,MAEM,SAAWy/D,GACdnhE,KAAKoxB,SAAS5uB,KAAI+vB,IAAA,GAAMvyB,KAAKoxB,SAASrY,YAAeooD,GACzD,KAACtC,CAAA,CA/GiC,GAAzBA,SAAyB,mBAAA5+D,iBAAzB4+D,GAAyB3+D,EAAAsd,mBAAA7U,EAAAG,qBAAA5I,EAAAsd,mBAAA3U,EAAAD,iBAAA,EAAzBi2D,EAAyB,WAAA3+D,EAAA,oCAAzB2+D,EAAyBphD,QAAzBohD,EAAyBnhD,UAAAC,WAFtB,SAEHkhD,CAAyB,4NCpCtC,IAAA7wD,EAAAlQ,EAAA,OAGAoyD,GAFApyD,EAAA,OACAA,EAAA,MACAA,EAAA,UACAA,EAAA,0LA+DgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAmV,GAAA,IAAAxQ,EAAA7V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAuE,EAAAkmB,UAAqB,KAAI,GAN7B/7B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,EAvEhB,IAAMgrB,EAAuB,GAqIhB54B,iCAA8B,eAA9Bk1D,EAA8B,WAsBvC,SAAAA,EACY5zD,EACAkgE,EACAjgE,EACyB21C,GAA4B/2C,EAAAC,KAAA80D,GAHrD90D,KAAAkB,YACAlB,KAAAohE,SACAphE,KAAAmB,OACyBnB,KAAA82C,QAzB9B92C,KAAAi8B,UAAiC,KACjCj8B,KAAAqf,SAAQ8D,EAAwBnjB,KAAK82C,MAAM,IAAM,IA0BpD92C,KAAKohE,OAAO3C,WAAWz+D,KAAK82C,MAAM,GACtC,CAACh3C,SAAAg1D,EAAA,EAAArzD,IAAA,YAAAkE,IAzBD,WACI,OACI3F,KAAKkB,UAAUyE,IAAc,yBAA2B6yB,CAEhE,GAAC,CAAA/2B,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKqf,SAASvD,IAAI,SAACzY,GAAC,OAAKA,EAAE08D,SAAS,GAAElrD,KAAK,IACtD,GAAC,CAAApT,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKqf,SAAS8c,OAAO,SAACl8B,EAAGqyB,GAAC,OAAKryB,EAAIqyB,EAAEyhC,QAAQ,EAAE,EAC1D,GAAC,CAAAtyD,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKmB,KAAK85D,aACrB,GAAC,CAAAx5D,IAAA,aAAAC,MAWM,SAAW6R,GACd,OAAOA,GAAMvT,KAAKo8B,aAAan2B,SAASsN,EAC5C,GAAC,CAAA9R,IAAA,cAAAC,MAEM,SAAYua,EAAoBogB,GACnC,IAAMnpB,EAAOlT,KAAKqf,SAASrD,OACvB,SAAC3Y,GAAC,OAAKA,EAAE08D,YAAc9jD,EAAK8jD,SAAS,GAEzC,GAAI1jC,EAAO,CACP,IAAM4/B,EAAW,IAAI/L,EAAAU,aAAYr+B,IAAA,GAAMtW,GAAI,IAAEq4C,UAAU,KACvDphD,EAAKijB,KAAK8lC,GACVj8D,KAAKi8B,UAAYggC,EAErBj8D,KAAKqf,SAAWnM,CACpB,GAAC,CAAAzR,IAAA,kBAAAC,MAEM,SAAgBua,GACnB,IAAMud,EAAWx5B,KAAKu4B,UAChBkB,GAAaD,EAASvzB,SAASgW,EAAK1I,IAEtCvT,KAAKkB,UAAUw4B,gBAAgB,uBAD/BD,EACqD,GAAAr1B,OAAA+e,EAC9CqW,GAAQ,CACXvd,EAAK1I,KAKLimB,EAASxd,OAAO,SAAC3Y,GAAC,OAAKA,IAAM4Y,EAAK1I,EAAE,GAGhD,KAACuhD,CAAA,CA7DsC,GAA9BA,SAA8B,mBAAA70D,iBAA9B60D,GAA8B50D,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAg2D,2BAAA3+D,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BA0B3BsF,EAAAsuB,iBAAe,EA1BlBw4B,EAA8B,UAAA50D,EAAA,kCAA9B40D,EAA8B3rD,UAAA,+BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,sPApHlB0iB,UAAAC,MAAAC,EAAA,msCA+DRF,UAAAG,MAAAD,EAAA,+XAgBwCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,mHAC/B,wNA/BHF,UAAAO,MAAAL,EAAA,qHAhEThwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAQqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAAqBzuB,EAAAsN,wBAAAtN,GAEzBA,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,6BAGAzJ,EAAAqN,yBAAA,WAGIrN,EAAAyJ,oBAAA,8BAIAzJ,EAAAqN,yBAAA,2BAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAA,OAAazH,EAAA2uB,gBAAAlnB,EAAuB,EAApCjR,CAAqC,oBAAAiR,GAAA,OAAAzH,EAAAuyB,UAAA9qB,CAAA,GAGxCjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,8BAMIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA6yB,YAAA7yB,EAAAuyB,UAAA9qB,EAA+B,EAA/CjR,CAAgD,8BAMnCwJ,EAAA2uB,gBAAA3uB,EAAAuyB,UAA2B,EANxC/7B,CAAgD,0BAAAwJ,EAAAuyB,UAO3B,IAAI,GAC5B/7B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,gBAGIrN,EAAA+R,qBAAA,GAAAovD,EAAA,iBAWAnhE,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BAERtH,EAAA6yB,YAAA7yB,EAAAuyB,WAC0CvyB,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA8jC,WAGpD,GACkB7/D,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,gBAjHJA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAkBInf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAGA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAvH,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA8jC,UAAA7/D,CAA+B,WAAAwJ,EAAA0yB,aAA/Bl8B,CAA+B,iBAAAwJ,EAAA2V,SAA/Bnf,CAA+B,YAAAwJ,EAAA6uB,WAYnCr4B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAAuyB,UAAA/7B,CAA2B,UAAAwJ,EAAAuyB,WAF3B/7B,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,UAAA/7B,CAAmB,SAAAwJ,EAAA0yB,aAAAn2B,UAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA8jC,YAAA,IAAnB7/D,CAAmB,OAAAwJ,EAAA+vD,KAAnBv5D,CAAmB,QAAAwJ,EAAAuyB,WAAAvyB,EAAA6uB,UAAAtyB,UAAA,MAAAyD,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA1oB,KAAA,KAuBlBrT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAuyB,WAWD/7B,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,OAAAlW,EAAAuyB,WADA/7B,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAeAnf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA2V,UAUJnf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAAgzB,OAAAx8B,EAAA6uB,sBAAA,IAMI7uB,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,UAAAlW,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA8jC,YADA7/D,EAAA+Q,qBAAA,YAAAvH,EAAAuyB,WAU8B/7B,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAzK,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA8jC,WAAA,gBAItB7/D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA+yB,WAAA,MAAA/yB,EAAAuyB,UAAA,KAAAvyB,EAAAuyB,UAAA8jC,WAAA,6MAafjL,CAA8B,gLC5I3C,IAAA7qD,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OAGA4hD,EAAA5hD,EAAA,qHA6CoCoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,0GAJItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAmU,sBAAA,IAAAitD,EAAAxQ,WAAA,IAAAjvC,EAAA43C,MAAA,+BAbZv5D,EAAAqN,yBAAA,wBAAArN,CAIC,WAJDA,CAIC,YAGWA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAAsvD,EAAA,cASJrhE,EAAAsN,wBAAAtN,2BAfAA,EAAA+Q,qBAAA,QAAAqwD,EAAA/tD,IAIQrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA2zD,EAAA7tD,KAAA,KAICvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAqwD,EAAAxQ,WAAA,+DArBrB5wD,EAAAuhB,kCAAA,GACIvhB,EAAAqN,yBAAA,wBAIIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA+kC,GAAA,IAAAqrB,EAAAthE,EAAAqR,0BAAAwM,UAAApI,EAAAzV,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAmE,EAAAgnD,kBAAA6E,EAAArwD,GAAgC,GAEjDjR,EAAAqN,yBAAA,wBAAArN,CAA6C,aACXA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,GAEtCA,EAAA+R,qBAAA,EAAAwvD,EAAA,2BAoBJvhE,EAAAsN,yBACJtN,EAAA0hB,iCAAA,qDAnB4B1hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAuwD,EAAA,KAAAA,EAAAz+C,QAAA,2BA6BhB7iB,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,0GADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAmU,sBAAA,IAAAqtD,EAAA5Q,WAAA,IAAAvyC,EAAAk7C,MAAA,mEAZZv5D,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAuwD,EAAAxhE,EAAAkR,wBAAAo2C,GAAAzpC,UAAA28B,EAAAx6C,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAkpC,EAAAoiB,aAAA4E,EAAAnuD,IAAApC,EAAA,GAEAjR,EAAAqN,yBAAA,WAAArN,CAA8C,YAEtCA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAA+R,qBAAA,EAAA0vD,EAAA,cAMJzhE,EAAAsN,wBAAAtN,EAAM,0DAZNA,EAAA+Q,qBAAA,UAAAqF,EAAAwmD,aAAA4E,EAAAnuD,KAIQrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+zD,EAAAjuD,KAAA,KAICvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAywD,EAAA5Q,WAAA,0BAVb5wD,EAAA+R,qBAAA,EAAA2vD,EAAA,wEACoB1hE,EAAA+Q,qBAAA,gBAAAuwD,EAAA,KAAAA,EAAAz+C,QAAA,2BAzChC7iB,EAAAqN,yBAAA,UAAArN,CAIC,WAC2CA,EAAAuN,iBAAA,GAAgBvN,EAAAsN,yBACxDtN,EAAAqN,yBAAA,WACIrN,EAAA+R,qBAAA,EAAA4vD,EAAA,sBAgCA3hE,EAAA+R,qBAAA,EAAA6vD,EAAA,yBAAA5hE,EAAAkmB,kCAkBJlmB,EAAAsN,wBAAAtN,wDAtDAA,EAAAuxD,sBAAA,QAAA+P,EAAA/tD,MAEwCvT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAqtD,EAAA/tD,MAErBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAuwD,EAAA/gB,SAAAvgD,CAAuB,WAAAqtB,EAAA,EAqE7C3tB,qCAAkC,eAAlCmiE,EAAkC,WAS3C,SAAAA,EACqCjrB,GAAoC,IAAAx1C,EAAAtB,KAAAD,EAAAC,KAAA+hE,GAApC/hE,KAAA82C,QARpB92C,KAAA8uB,MAAQ,IAAI7kB,EAAAsV,aAItBvf,KAAA88D,aAAiC,GACxB98D,KAAAy5D,KAAOz5D,KAAK82C,MAAM2iB,KAK9B,IAI0B3iC,EAJpB+I,KAAS6f,EAAAjW,QACXzpC,KAAK82C,MAAM/zB,QAAQjH,IAAI,SAACwW,GAAC,OAAKA,EAAEoF,OAAS,OAAO,IAE9CgmC,EAAa,GAAG3mC,EAAAC,EACF6I,GAAM,QAAA5I,EAAA,WAAE,IAAjBS,EAAKZ,EAAAp1B,MACNqhB,EAAUzhB,EAAKw1C,MAAM/zB,QAAQ/G,OAAO,SAACsW,GAAC,OAAKA,EAAEoF,QAAUA,CAAK,GAClEgmC,EAAWvnC,KAAK,CACZ1iB,KAAMikB,EACN+oB,WAAY19B,EAAQ6M,KAAK,SAAC0C,GAAC,OAAKA,EAAEmuB,QAAQ,GAC1C19B,aALR,IAAAgU,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAAH,GAOC,OAAAtM,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACDr3B,KAAK6/B,OAAS69B,CAClB,CAAC59D,SAAAiiE,EAAA,EAAAtgE,IAAA,oBAAAC,MAEM,SAAkBg2B,EAA4BnkB,GAAU,IACzBooB,EADyBC,EAAA5E,EACtCU,EAAM3U,SAAO,IAAlC,IAAA6Y,EAAAjS,MAAAgS,EAAAC,EAAAzE,KAAAC,MAAoC,KAAzB2+B,EAAMp6B,EAAAj6B,MACb1B,KAAK88D,aAAa/G,EAAOxiD,IAAMwiD,EAAOxiD,KAAOA,EAChD,OAAAoX,GAAAiR,EAAA1W,EAAAyF,EAAA,SAAAiR,EAAAvE,GAAA,CACL,GAAC,CAAA51B,IAAA,cAAAC,MAEM,WAAW,IAAAyD,EAAAnF,KACR+iB,EAAU/iB,KAAK82C,MAAM/zB,QAAQ/G,OAC/B,SAAC8/C,GAAG,OAAK32D,EAAK23D,aAAahB,EAAIvoD,GAAG,GAEtCvT,KAAK8uB,MAAMrP,KAAK,CAAE6P,OAAQ,OAAQigB,SAAU,CAAExsB,YAClD,KAACg/C,CAAA,CAtC0C,GAAlCA,SAAkC,mBAAA9hE,iBAAlC8hE,GAAkC7hE,EAAAwI,4BAU/BsF,EAAAsuB,iBAAe,EAVlBylC,EAAkC,UAAA7hE,EAAA,kCAAlC6hE,EAAkC54D,UAAA,iCAAAwW,QAAA,CAAAmP,MAAA,SAAAxlB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,+wBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAnFvCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,oBAAcvN,EAAAsN,yBAClBtN,EAAAqN,yBAAA,aAAArN,CAA8B,cAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,EAAA+vD,EAAA,aA2DJ9hE,EAAAsN,yBACAtN,EAAAqN,yBAAA,aAAArN,CAAoB,cACmBA,EAAA8Q,qBAAA,0BAAStH,EAAAu4D,aAAa,GACrD/hE,EAAAuN,iBAAA,aACJvN,EAAAsN,wBAAAtN,UA7DsBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAm2B,6WA0ErBkiC,CAAkC,wICnG/C,IAAAvhE,EAAA1C,EAAA,OAGAoyD,EAAApyD,EAAA,MAGA8B,gBAA0BE,EA0BtB,SAAAu7D,IAA6C,IAAA6G,EAAAC,EAAjCr/D,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,GAAElF,EAAAC,KAAAq7D,GACzCr7D,KAAKuT,GAAKzQ,EAAKyQ,IAAE,SAAAnP,UAAa5D,EAAA+yD,WAAU,QAAW,MACnDvzD,KAAK00B,UAAY5xB,EAAK4xB,WAAa,GACnC10B,KAAKiiC,SAAWn/B,EAAKm/B,WAAsB,QAAdigC,EAAIp/D,EAAKgsB,aAAK,IAAAozC,OAAA,EAAVA,EAAY3uD,KAAM,GACnDvT,KAAK04B,OAAS51B,EAAK41B,OAAS,IAAI5c,IAAI,SAACwW,GAAC,OAAK,IAAI49B,EAAAU,aAAat+B,EAAE,GAC9DtyB,KAAKk6D,WAAal6D,KAAK04B,MAAMyD,OACzB,SAAC7D,EAAQrc,GAAI,OAAKqc,EAASrc,EAAK83C,QAAQ,EACxC,GAEJ/zD,KAAKo0D,WAAap0D,KAAK04B,MAAMyD,OACzB,SAAC7D,EAAQrc,GAAI,OAAKqc,GAAUrc,EAAKm4C,YAAc,EAAE,EACjD,GAEJp0D,KAAKoiE,YAAct/D,EAAKs/D,aAAe,GACvCpiE,KAAKykC,OAAS3hC,EAAK2hC,QAAU,WAC7BzkC,KAAKi/B,eAAiBn8B,EAAKm8B,gBAAkB,GAC7Cj/B,KAAK8uB,MAAQhsB,EAAKgsB,OAAS,KAC3B9uB,KAAKqiE,MAAQv/D,EAAKu/D,OAAS,GAC3BriE,KAAKsiE,WACDx/D,EAAKw/D,YACJx/D,EAAakP,OACJ,QADQmwD,EAClBniE,KAAK8uB,aAAK,IAAAqzC,OAAA,EAAVA,EAAYnwD,OACZuI,KAAKgX,KACb,4NCrDJ,IAAA/wB,EAAA1C,EAAA,OAIAykE,GAFAzkE,EAAA,OACAA,EAAA,OACAA,EAAA,wHAyCgBoC,EAAAqN,yBAAA,eAKIrN,EAAAuN,iBAAA,YACJvN,EAAAsN,kEAHItN,EAAA+Q,qBAAA,aAAAK,EAAAwtB,MAAAujC,MAAA,+DAvCZniE,EAAAqN,yBAAA,UAAArN,CAKC,UALDA,CAKC,UALDA,CAKC,cASqBA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,wBAAAtN,KAG9BA,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,gCACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,GAKJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aAAkBrN,EAAAuN,iBAAA,IAAwCvN,EAAAsN,yBAC1DtN,EAAAqN,yBAAA,aACIrN,EAAA+R,qBAAA,GAAAuwD,EAAA,iBAOJtiE,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAkB,eAAlBA,CAAkB,aASNA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,kBAAuBrN,EAAAuN,iBAAA,sBAAevN,EAAAsN,wBAAAtN,KAG9CA,EAAAqN,yBAAA,YAAArN,CAAkB,gBACDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqd,GAAA,IAAA7X,EAAA1W,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAoF,EAAA6rD,YAAA7rD,EAAA6rD,WAAA,GACTviE,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,MAAW,wEAjErBA,EAAA0f,sBAAA,eAAAvN,EAAAowD,WAAAviE,CAAiC,cAAAmS,EAAAowD,YAM7BviE,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,cAAAvN,EAAAowD,WAAAviE,CAAgC,sBAAAmS,EAAAowD,YAUhCviE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAmU,sBAAA,KAAAhC,EAAAysB,MAAAwjC,WAAA,kBAGApiE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA0E,EAAAysB,MAAAhQ,MAAA,KAAAzc,EAAAysB,MAAAhQ,MAAAnS,MAAAlH,gBAAA,MAAApD,EAAAysB,MAAAhQ,MAAA,KAAAzc,EAAAysB,MAAAhQ,MAAAnS,MAAAlJ,OAAA,uBAOAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA0E,EAAAysB,MAAAhQ,OAAA,MAAAzc,EAAAysB,MAAAhQ,MAAAnW,UAAA,KAAAtG,EAAAysB,MAAAhQ,MAAAnW,UAAAlF,QAAA,MAAApB,EAAAysB,MAAAhQ,MAAA,KAAAzc,EAAAysB,MAAAhQ,MAAAra,OAAA,wBAMcvU,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAysB,MAAAsjC,aAAA,eAGTliE,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAoB,EAAAysB,MAAAujC,OAQLniE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA0E,EAAAysB,MAAAG,gBAAA,sBAOI/+B,EAAAwN,oBAAA,GAAAxN,EAAAsjD,sBAAA,mBAAAnxC,EAAAoyB,OAAA,KAAApyB,EAAAoyB,OAAAi+B,QACAxiE,EAAA+Q,qBAAA,oBAAAsV,GAGIrmB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAA0E,EAAAoyB,OAAA,KAAApyB,EAAAoyB,OAAAhxB,KAAA,KAOMvT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA9B,EAAAowD,WAAA,oEAclBviE,EAAAyJ,oBAAA,gBAIIzJ,EAAA+Q,qBAAA,6CAVR/Q,EAAAqN,yBAAA,WAMIrN,EAAA+R,qBAAA,EAAA0wD,EAAA,aAMJziE,EAAAsN,iEATItN,EAAA0f,sBAAA,QAAA7J,EAAA0sD,YACAviE,EAAA+Q,qBAAA,QAAA8E,EAAA0sD,WAAA,eAKqBviE,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8E,EAAA+oB,MAAApG,MAAA,+DAKrBx4B,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAA4xD,EAAA1iE,EAAAkR,wBAAA+E,GAAA4H,UAAA3H,EAAAlW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4E,EAAAysD,aAAAD,EAAArvD,IAAuB,GAEhCrT,EAAAyJ,oBAAA,YAIAzJ,EAAAqN,yBAAA,aAAwBrN,EAAAuN,iBAAA,GAAiBvN,EAAAsN,wBAAAtN,EAAO,2BAF5CA,EAAAwN,oBAAA,GAAAxN,EAAAsjD,sBAAA,mBAAAof,EAAAF,QAEoBxiE,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAAyuD,EAAAnvD,KAAA,EAuB3B7T,yBAAuB,eAAvBkjE,EAAuB,SAAAjiE,GAAAC,EAAAgiE,EAAAjiE,GAAA,IAAAG,EAAAC,EAAA6hE,GAgBhC,SAAAA,EAAoBlK,GAA8B,IAAAt3D,EAAAvB,SAAAC,KAAA8iE,IAC9CxhE,EAAAN,EAAAO,KAAAvB,OADgB44D,UAbbt3D,EAAAmhE,YAAa,EAEJnhE,EAAAyhE,SAAWR,EAAAS,kBAEX1hE,EAAAuhE,aAAY,eAAAv8D,EAAA3E,EAAAC,IAAAC,KAAG,SAAAC,EAAO6nB,GAAC,OAAA/nB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC7BlB,EAAKs3D,QAAQiK,aAAavhE,EAAKw9B,MAAOnV,GAAE,OAC9CroB,EAAKuC,QAAQ,gBAAiB,kBAAQvC,EAAKw9B,MAAc2F,OAAS9a,CAAC,GAAG,wBAAArnB,EAAAwC,OAAA,EAAAhD,EAAA,IACzE,gBAAAqb,GAAA,OAAA7W,EAAAtB,MAAAhF,KAAAiF,UAAA,EAH2B,GAG1B3D,CAQF,CAACxB,SAAAgjE,EAAA,EAAArhE,IAAA,SAAAkE,IAND,WAAiB,IAAAR,EAAAnF,KACb,OAAOA,KAAK+iE,SAASnzC,KAAK,SAAC0C,GAAC,OAAKA,EAAE/e,KAAOpO,EAAK25B,MAAM2F,MAAM,EAC/D,KAACq+B,CAAA,CAd+B,CAAQtiE,EAAAiI,cAA/Bq6D,SAAuB,mBAAA7iE,iBAAvB6iE,GAAsB5iE,EAAAwI,4BAAAC,EAAAmwD,uBAAA,EAAtBgK,EAAuB,UAAA5iE,EAAA,kCAAvB4iE,EAAsB35D,UAAA,qBAAAuW,OAAA,CAAAof,MAAA,SAAA11B,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,6uCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtH3BvJ,EAAA+R,qBAAA,EAAAgxD,EAAA,eAuEA/iE,EAAA+R,qBAAA,EAAAixD,EAAA,YAaAhjE,EAAAqN,yBAAA,qBACIrN,EAAA+R,qBAAA,EAAAkxD,EAAA,gBAYJjjE,EAAAsN,gCA7FKtN,EAAA+Q,qBAAA,OAAAvH,EAAAo1B,OAoEA5+B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAo1B,MAAA,KAAAp1B,EAAAo1B,MAAApG,MAAArzB,QAesBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAq5D,ycA6BnB,CAACviE,EAAA4Y,mCAEJ0pD,CAAuB,qRChIpC,IAAAhpD,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OACAizB,EAAAjzB,EAAA,OAEA0C,EAAA1C,EAAA,OACAslE,EAAAtlE,EAAA,OACA4C,EAAA5C,EAAA,OAEAo7D,EAAAp7D,EAAA,kBA6Ba8B,wBAAsB,eAAtBk5D,EAAsB,SAAAj4D,GAAAC,EAAAg4D,EAAAj4D,GAAA,IA6D/BwiE,EA7D+BriE,EAAAC,EAAA63D,GA0C/B,SAAAA,IAAA,IAAAx3D,EAAAvB,SAAAC,KAAA84D,IACIx3D,EAAAN,EAAAO,KAAAvB,OA1CIixB,MAAQ,IAAInX,EAAAqB,gBAAwB,GACpC7Z,EAAA6vB,SAAW,IAAIrX,EAAAqB,iBAAyB,GACxC7Z,EAAA8vB,SAAW,IAAItX,EAAAqB,gBAAsC,IAG7C7Z,EAAAgiE,UAAsCxpD,EAAAgJ,eAAc,CAChExhB,EAAK8vB,SACL9vB,EAAK2vB,QACN9tB,QACC7C,EAAAmxB,cAAa,MAAG,EAChBnxB,EAAAwxB,WAAU,SAAAxrB,GAAsB,IAAAi9D,EAAAvgD,EAAA1c,EAAA,MAAlB0L,EAAIuxD,EAAJvxD,KAAM6B,EAAK0vD,EAAL1vD,MAChBvS,EAAK6vB,SAAS3uB,MAAK,GACnB,IAAMujC,KAAQhV,EAAAyC,gBAAYzC,EAAA0C,YAAWzhB,GAAQuI,KAAKgX,QAC5CtM,KAAM8L,EAAAyC,gBAAYzC,EAAA4C,UAAS3hB,GAAQuI,KAAKgX,QAC9C,SAAO6xC,EAAAtvC,aAAY,CACf81B,UAAW/1C,GAAS,IAAIgB,KAAK,KAC7B0e,aAAcwS,EACdrS,WAAYzO,GAEpB,IAAC,EACD3kB,EAAAwb,KAAI,SAACiY,GAAM,SAAKvzB,EAAAoyB,SAAQmB,EAAOjY,IAAI,SAACgT,GAAK,OAAKA,EAAM00C,IAAI,WAAW,GAAE,MACrEljE,EAAAsjB,KAAI,kBAAMtiB,EAAK6vB,SAAS3uB,MAAK,EAAM,MACnClC,EAAAuyB,aAAY,IAGAvxB,EAAA+hB,QAAU/hB,EAAK6vB,SAAS7V,eAUxBha,EAAA0gC,SAAW1gC,EAAKgiE,OAAOngE,QACnC7C,EAAAwb,KAAI,SAAC5I,GAAI,OACLA,EAAK8I,OAAO,SAAC8iB,GAAK,OAvD9B,SAAS2kC,EACL3kC,EACArJ,GAEA,IAAM9L,GAAK8L,EAAQsH,QAAU,IAAI7J,cACjC,QAAS4L,EAAMpG,MAAM9I,KACjB,SAAC3T,GAAI,OACDA,EAAKxI,KAAKyf,cAAcjtB,SAAS0jB,MAC/B1N,EAAK8G,QAAQ6M,KAAK,SAACmmC,GAAM,OACvBA,EAAOtiD,KAAKyf,cAAcjtB,SAAS0jB,EAAE,EACxC,EAEb,CA2CmC85C,CAAW3kC,EAAOx9B,EAAK8vB,SAASrY,WAAW,EAAC,IAMvEzX,EAAKyR,aAAa,UAAWzR,EAAKgiE,OAAOrwD,aAAa3R,CAC1D,CAEAxB,SAAAg5D,EAAA,EAAAr3D,IAAA,UAAAkE,eAlBI,OAAO3F,KAAKoxB,SAASrY,UACzB,EACA2C,IACA,SAAmB+Z,GACfz1B,KAAKoxB,SAAS5uB,KAAKizB,EACvB,GAAC,CAAAh0B,IAAA,eAAAC,MAcM,WAAsC,IAAAyD,EAAAnF,KACzCA,KAAK61B,SACD,UACA,kBAAM1wB,EAAK8rB,MAAMzuB,UAAS+X,MAAOua,UAAU,EAH/B7vB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,KAMpC,GAEA,CAAAxD,IAAA,cAAAC,MACO,WACH1B,KAAKi2B,cAAc,UACvB,GAEA,CAAAx0B,IAAA,eAAAC,OAAA2hE,EAAA1hE,EAAAC,IAAAC,KAKO,SAAAC,EACHg9B,EACA2F,GAA2B,IAAAi/B,EAAA/sD,EAAAmY,EAAA2S,EAAA,OAAA7/B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAErBkhE,SAAgB,IAAIxK,EAAAmC,cAAa9oC,IAAA,GAAMuM,GAAK,IAAE2F,YAC9C9tB,EAAW,GAAAvS,OAAA+e,EACV2b,EAAMhQ,MAAM00C,IAAI,YAAYxnD,OAAO,SAACsH,GAAC,OAAKA,EAAE/P,KAAOurB,EAAMvrB,EAAE,IAAC,CAC/DmwD,IACF5nD,IAAI,SAACwW,GAAC,OAAK,IAAI4mC,EAAAmC,cAAa9oC,EAAA,GAAMD,GAAI,GAClCxD,EAAQ,IAAIpuB,EAAAotB,cAAayE,IAAA,GACxBuM,EAAMhQ,OAAK,IACdnY,cACFrU,EAAAE,KAAA,KACoB4gE,EAAAO,WAAU70C,GAAOxrB,YAAW,OAA5Cm+B,SAAOn/B,EAAA4B,KACblE,KAAKixB,MAAMzuB,KAAK+X,KAAKgX,OAAOjvB,EAAAqB,OAAA,SACrB89B,GAAO,wBAAAn/B,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACjB,SAAA6iE,EAAA1lD,EAAAwmB,GAAA,OAAA0/B,EAAAr+D,MAAAhF,KAAAiF,UAAA,MAAA6zD,CAAA,CAlF8B,CAAQt4D,EAAAiI,cAA9BqwD,SAAsB,mBAAA74D,iBAAtB64D,EAAqB,EAArBA,EAAsB,WAAA54D,EAAA,oCAAtB44D,EAAqBr7C,QAArBq7C,EAAqBp7C,UAAAC,WAFlB,SAEHm7C,CAAsB,oNCrCnC,IAAAt4D,EAAA1C,EAAA,OAEA8lE,GADA9lE,EAAA,MACAA,EAAA,QACAwC,EAAAxC,EAAA,UACAA,EAAA,mKA0CwBoC,EAAAqN,yBAAA,WAGIrN,EAAA8Q,qBAAA,uBAAA6yD,EAAA3jE,EAAAkR,wBAAAqd,GAAA1Q,UAAAnH,EAAA1W,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAoF,EAAAktD,WAAAD,EAAAtwD,IAAoB,GAE7BrT,EAAAqN,yBAAA,QACIrN,EAAAyJ,oBAAA,qBAIJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,QAAIrN,EAAAuN,iBAAA,GAAsCvN,EAAAsN,yBAC1CtN,EAAAqN,yBAAA,UAAArN,CAAuB,yEAcfA,EAAAuN,iBAAA,kCAOJvN,EAAAsN,wBAAAtN,IAAO,gEAzBHA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAqX,EAAAjJ,SAAApZ,SAAA49D,EAAAtwD,KAGJrT,EAAAwN,oBAAA,GAAAxN,EAAAiU,4BAAA0vD,EAAApuD,cAAAouD,EAAApwD,MAIIvT,EAAAwN,oBAAA,GAAAxN,EAAA0f,sBAAA,wBAAA3J,EAAA/V,EAAA4V,sBAAA,IAAAwS,EAAAqlC,gBAAA13C,EAAAhQ,SAAA49D,EAAAtwD,KAAArT,CAIC,oBAAAoS,EAAApS,EAAA4V,sBAAA,IAAAwS,EAAAqlC,eAAA,KAAAr7C,EAAArM,SAAA49D,EAAAtwD,KAODrT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA+a,EAAAxoB,EAAA4V,sBAAA,MAAAwS,EAAAqlC,gBAAAjlC,EAAAziB,SAAA49D,EAAAtwD,IAAA,wFAxDxBrT,EAAAqN,yBAAA,WAAArN,CAGC,YAHDA,CAGC,YAHDA,CAGC,OAHDA,CAGC,WAMgCA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAotC,GAAA,IAAA38B,EAAA3hB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAqQ,EAAAiiD,WAAW,KAAI,GACrC5jE,EAAAyJ,oBAAA,iFAYJzJ,EAAAsN,yBACAtN,EAAAyJ,oBAAA,QACAzJ,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,mCACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YACIrN,EAAA+R,qBAAA,GAAA8xD,EAAA,8CAoCJ7jE,EAAAsN,wBAAAtN,IAAQ,iDAtDQA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAuQ,EAAAthB,EAAA4V,sBAAA,IAAAzD,EAAA2xD,QAAA,KAAAxiD,EAAAnc,UAAAgN,EAAAgN,SAAAha,OAAAnF,CAGC,gBAAAmS,EAAAgN,SAAAha,OAAA,WAAAoZ,EAAAve,EAAA4V,sBAAA,IAAAzD,EAAA2xD,QAAA,KAAAvlD,EAAApZ,UAAAgN,EAAAgN,SAAAha,QAULnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAsI,EAAA/V,EAAA4V,sBAAA,KAAAzD,EAAA2xD,QAAA,KAAA/tD,EAAA5Q,OAAA,aAMcnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA4V,sBAAA,MAAAzD,EAAA2xD,OAAA,wBAkDlC9jE,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,kCAA4BvN,EAAAsN,wBAAAtN,IAYlCN,mCAAgC,eAAhCqkE,EAAgC,WAMzC,SAAAA,EACYpO,EACA10D,GAAyBpB,EAAAC,KAAAikE,GADzBjkE,KAAA61D,YACA71D,KAAAmB,OAPLnB,KAAAqjB,SAAU,EACVrjB,KAAAqf,SAAqB,GACZrf,KAAAgkE,SAAQJ,EAAA7xC,sBAAqB/xB,KAAKmB,KAAK6U,SAASzC,IAChDvT,KAAA2tD,aAAe3tD,KAAK61D,UAAUlI,YAK3C,CAAC7tD,SAAAmkE,EAAA,EAAAxiE,IAAA,aAAAC,OAAAwiE,EAAAviE,EAAAC,IAAAC,KAEG,SAAAC,EAAiByR,GAAU,IAAAywD,EAAA,OAAApiE,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB,MAAP+Q,EAAU,CAAAjR,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACUxC,KAAKgkE,MAAM7gE,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAEpDtD,KAAKqf,SADLrf,KAAKqf,SAASha,UADZ2+D,EAAK1hE,EAAA4B,MACwBmB,OACf2+D,EAAMloD,IAAI,SAACzY,GAAC,OAAKA,EAAEkQ,EAAE,GACpB,GAAGjR,EAAAE,KAAA,eAGpBxC,KAAKqf,SADLrf,KAAKqf,SAASpZ,SAASsN,GACPvT,KAAKqf,SAASrD,OAAO,SAAC3Y,GAAC,OAAKA,IAAMkQ,CAAE,GACtC,GAAAnP,OAAA+e,EAAOnjB,KAAKqf,UAAQ,CAAE9L,IAAI,wBAAAjR,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAEnD,SAAA8jE,EAAA3mD,GAAA,OAAA+mD,EAAAl/D,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,iBAAAC,MAAA,eAAAyiE,EAAAxiE,EAAAC,IAAAC,KAEM,SAAA0D,IAAA,IAAA2N,EAAA5R,EAAAtB,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACH,OAAAxC,KAAKqjB,SAAU,EAAK5d,EAAAjD,KAAA,EACQxC,KAAK2tD,aAAaxqD,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAAjE8gE,OACAlxD,EADazN,EAAAvB,KACQ8X,OAAO,SAAC3Y,GAAC,OAAM/B,EAAK+d,SAASpZ,SAAS5C,EAAE,GAACoC,EAAAjD,KAAA,EAC9DxC,KAAK61D,UACNwO,aAAa,CAAEtD,eAAgB7tD,IAAO1O,MAChC,kBAAM,IAAI,GAAC,OACtBxE,KAAKqjB,SAAU,EAAM,wBAAA5d,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IACxB,gBAAAskE,IAAA,OAAAH,EAAAn/D,MAAAhF,KAAAiF,UAAA,EAVA,IAUA,CAAAxD,IAAA,kBAAAC,MAAA,eAAA6iE,EAAA5iE,EAAAC,IAAAC,KAEM,SAAAwE,IAAA,IAAA6M,EAAA,OAAAtR,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACyBxC,KAAK2tD,aAAaxqD,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAAjE8gE,OACAlxD,KAAO1S,EAAAipC,QADMhjC,EAAAvC,KACeE,OAAOpE,KAAKqf,WAAU5Y,EAAAjE,KAAA,EAClDxC,KAAK61D,UACNwO,aAAa,CAAEtD,eAAgB7tD,IAAO1O,MAChC,kBAAM,IAAI,GAAC,OACtBxE,KAAKqjB,SAAU,EAAM,wBAAA5c,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACxB,gBAAAwkE,IAAA,OAAAD,EAAAv/D,MAAAhF,KAAAiF,UAAA,EATA,MASAg/D,EAhCG,IAAAC,CAgCH,CAzCwC,GAAhCD,SAAgC,mBAAAhkE,iBAAhCgkE,GAAgC/jE,EAAAwI,4BAAAC,EAAA4tD,sBAAAr2D,EAAAwI,4BAAAG,EAAAC,qBAAA,EAAhCm7D,EAAgC,UAAA/jE,EAAA,kCAAhC+jE,EAAgC96D,UAAA,iCAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,q2BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAxGrCvJ,EAAAqN,yBAAA,QAAArN,CAAK,aAALA,CAAK,UAEmBA,EAAAuN,iBAAA,yCAAmCvN,EAAAsN,yBACnDtN,EAAAqN,yBAAA,aAAArN,CAA8B,cAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAA+R,qBAAA,EAAAwyD,EAAA,gBAqEAvkE,EAAAqN,yBAAA,aAAArN,CAEC,cACyBA,EAAA8Q,qBAAA,0BAAStH,EAAA46D,gBAAgB,GAC3CpkE,EAAAuN,iBAAA,wBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAAsBrN,EAAA8Q,qBAAA,0BAAStH,EAAA86D,iBAAiB,GAC5CtkE,EAAAuN,iBAAA,yBACJvN,EAAAsN,wBAAAtN,KAGRA,EAAA+R,qBAAA,GAAAyyD,EAAA,yBAAAxkE,EAAAkmB,0EA9ESlmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAAnjB,CAAgB,WAAAiuB,EAAA,4QA+FpB81C,CAAgC,iQCjH7CnmE,EAAA,WACAyC,EAAAzC,EAAA,MAKAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAWA0C,EAAA1C,EAAA,OAWA6mE,GAFA7mE,EAAA,MAEAA,EAAA,OAIA8mE,EAAA9mE,EAAA,OAIA+mE,EAAA/mE,EAAA,OAIAoyD,EAAApyD,EAAA,MACAo7D,EAAAp7D,EAAA,OACAgnE,EAAAhnE,EAAA,MAKAinE,EAAAjnE,EAAA,OAIAknE,EAAAlnE,EAAA,kDAWa8B,uBAAqB,eAArB22D,EAAqB,SAAA11D,GAAAC,EAAAy1D,EAAA11D,GAAA,IA6C7BokE,EA7C6BjkE,EAAAC,EAAAs1D,GA+C9B,SAAAA,EACYp1D,EACAiX,EACAlX,GAA0B,IAAAI,EAAAvB,SAAAC,KAAAu2D,IAElCj1D,EAAAN,EAAAO,KAAAvB,OAJQmB,OACAG,EAAA8W,UACA9W,EAAAJ,YAjDJI,EAAA4jE,SAAW,IAAIprD,EAAAqB,gBAAgB,GAE/B7Z,EAAA6jE,MAAQ,IAAIrrD,EAAAqB,gBAAgC,IAE5C7Z,EAAA6vB,SAAW,IAAIrX,EAAAqB,iBAAyB,GAExC7Z,EAAA8jE,UAAY,IAAItrD,EAAAqB,gBAAwB,OAEhC7Z,EAAAs1D,KAAOt1D,EAAK6jE,MAAM7pD,eAElBha,EAAA+hB,QAAU/hB,EAAK6vB,SAAS7V,eAExBha,EAAAg1D,SAAWh1D,EAAK8jE,UAAU9pD,eAE1Bha,EAAAkE,SAAWlE,EAAKH,KAAKkX,gBAAgBlV,QACjD7C,EAAA0b,QAAO,SAAC3Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAwxB,WAAU,SAACzuB,GAAC,SACR9C,EAAAopC,cAAatmC,EAAEkQ,GAAI,qBAAqBpQ,QACpC7C,EAAAmyB,YAAW,SAACpvB,GAAC,SAAKyW,EAAAO,IAAG,GAAoB,GAC5C,MAEL/Z,EAAAwb,KAAI,SAACzY,GAAC,OAAMA,EAAE+T,SAAgC,EAAE,MAChD9W,EAAAsjB,KAAI,SAACvgB,GAAC,OACF/B,EAAKJ,UAAUu/B,KAAK,2BAA6B,MAADp9B,MAAGmsD,eAAc,MAErElvD,EAAAuyB,aAAY,IAGAvxB,EAAAw/D,aAAex/D,EAAKkE,SAASrC,QACzC7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,EAAEy9D,cAAgB,EAAE,IAEnBx/D,EAAAqsD,aAAersD,EAAKkE,SAASrC,QACzC7C,EAAAwb,KAAI,SAACzY,GAAC,OAAKA,EAAE09D,gBAAkB,EAAE,IAG9Bz/D,EAAAwS,KAAO,GAiBVxS,EAAKyR,aACD,WACAzR,EAAKH,KAAKkX,gBAAgBpF,UAAS,eAAA3M,EAAA3E,EAAAC,IAAAC,KAAC,SAAAC,EAAOkX,GAAa,IAAA49C,EAAA,OAAAh1D,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAChDwW,EAAG,CAAA1W,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACiBlB,EAAK+jE,mBAAmBrsD,EAAIzF,IAAG,OAA7CqjD,EAAIt0D,EAAA4B,KAA2C4X,IACjD,SAACwW,GAAC,OAAK,IAAI49B,EAAAU,aAAat+B,EAAE,GAE9BhxB,EAAK8jE,UAAU5iE,KACXlB,EAAKJ,UAAUyE,IAAI,iBACfqT,EAAIs9C,UACJ,OAERh1D,EAAK6jE,MAAM3iE,KAAKo0D,GAAM,wBAAAt0D,EAAAwC,OAAA,EAAAhD,EAAA,IAE7B,gBAAAqb,GAAA,OAAA7W,EAAAtB,MAAAhF,KAAAiF,UAAA,EAZkC,KAarC3D,CACN,CAEAxB,SAAAy2D,EAAA,EAAA90D,IAAA,cAAAkE,IAjCA,WAAsB,IAAAimC,EAClB,OAAQ5rC,KAAK8T,MAAQ9T,KAAK8T,QAA2B,QAAvB83B,EAAK5rC,KAAKmB,KAAK6U,gBAAQ,IAAA41B,OAAA,EAAlBA,EAAoBr4B,GAC3D,GAAC,CAAA9R,IAAA,aAAAkE,IAED,WACI,IAAMixD,EAAO52D,KAAKmlE,MAAMpsD,WACxB,SAAOvY,EAAAipC,QAAOmtB,EAAK96C,IAAI,SAACwW,GAAC,OAAKA,EAAE0I,QAAQ,GAC5C,GAAC,CAAAv5B,IAAA,sBAAAC,OAAAujE,EAAAtjE,EAAAC,IAAAC,KA8BM,SAAA0D,EAA0Bu5B,GAAoB,IAAAwmC,EAAA9sD,EAAApB,EAAAjS,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAC3CgW,SAAMxY,KAAKoY,QAAQrD,KAGvB+vD,EAAA9J,4BAA6B,CAC3Bl4D,KAAM,CACF22D,KAAMz5D,KAAKolE,UAAUrsD,WACrB+lB,QACA83B,KAAM52D,KAAK42D,KACXvzC,QAASrjB,KAAKqjB,QACdi4C,kBAAmB,SAACj4D,GAAC,OAAK8B,EAAKm2D,kBAAkBj4D,EAAE,EACnD04D,cAAe,SAAC14D,GAAC,OAAK8B,EAAK42D,cAAc14D,EAAE,KAEjDoC,EAAAjD,KAAA,EACoBwB,QAAQ0qC,KAAK,CAC/Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OALI8T,SAAO3R,EAAAvB,KAMbsU,EAAIxQ,QAAQvC,EAAA9B,OAAA,UACE,MAAPyT,GAAiB,QAAVkuD,EAAPluD,EAASm4B,gBAAQ,IAAA+1B,OAAV,EAAPA,EAAmBxmC,QAASA,GAAK,wBAAAr5B,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC3C,SAAAulE,EAAA5hC,GAAA,OAAAshC,EAAAjgE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAAA,eAAA8jE,EAAA7jE,EAEM,eAAA6E,EAAAxG,KAAcic,EAAAhX,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,IAAIirD,EAAAU,aAAc,OAAAhvD,IAAAC,KAAA,SAAAwE,IAAA,IAAAmS,EAAApB,EAAAw/C,EAAA9H,EAAA,OAAAltD,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAClDgW,SAAMhS,EAAK4R,QAAQrD,KAGvB4vD,EAAAhS,2BAA4B,CAC1B7vD,KAAM,CACFmZ,OACAg3C,WAAYzsD,EAAKysD,cAEvBxsD,EAAAjE,KAAA,EACoBwB,QAAQ0qC,KAAK,CAC/Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OALW,GAAP8T,EAAO3Q,EAAAvC,KAMW,SAApBkT,GAASkY,OAAiB,CAAA7oB,EAAAjE,KAAA,eAAAiE,EAAA9C,OAAA,iBACxBizD,EAAOpwD,EAAK2+D,MAAMpsD,YAClB+1C,EAAQ8H,EAAKnrB,UAAU,SAACowB,GAAG,OAAKA,EAAItoD,KAAO0I,EAAK1I,EAAE,KAC3C,EACTqjD,EAAKprB,OAAOsjB,EAAO,EAAG13C,EAAQm4B,SAAStzB,MAEvC26C,EAAKzgC,KAAK/e,EAAQm4B,SAAStzB,MAE/BzV,EAAKi/D,WAAWj/D,EAAKrF,KAAK6U,SAASzC,GAAIqjD,GAAMoF,KACzC,WACIx1D,EAAK2+D,MAAM3iE,KAAI2gB,EAAKyzC,IACpBp+C,EAAIxQ,OACR,EACA,kBAAOwQ,EAAIM,kBAAkBuK,SAAU,CAAK,GAC9C,yBAAA5c,EAAA3B,OAAA,EAAAuB,EAAA,EA9BsDzE,EA8BtD,GACL,gBAAAs0D,IAAA,OAAAsP,EAAAxgE,MAAAhF,KAAAiF,UAAA,EAjCA,IAiCA,CAAAxD,IAAA,aAAAC,MAEM,SAAWua,GAAkB,IAAA7U,EAAApH,KAC1B42D,EAAO52D,KAAKmlE,MAAMpsD,WAClB+1C,EAAQ8H,EAAKnrB,UAAU,SAACowB,GAAG,OAAKA,EAAItoD,KAAO0I,EAAK1I,EAAE,GACpDu7C,GAAS,EAAG8H,EAAKprB,OAAOsjB,EAAO,EAAG7yC,GACjC26C,EAAKzgC,KAAKla,GACfjc,KAAKylE,WAAWzlE,KAAKmB,KAAK6U,SAASzC,GAAIqjD,GAAMoF,KAAK,kBAC9C50D,EAAK+9D,MAAM3iE,KAAI2gB,EAAKyzC,GAAM,EAElC,GAAC,CAAAn1D,IAAA,YAAAC,MAAA,eAAAgkE,EAAA/jE,EAEM,SACHsa,GAAkB,IAAA4yB,EAAA7uC,KAClB+1D,EAAA9wD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyB,GAAS,OAAArD,IAAAC,KAAA,SAAAsF,IAAA,IAAA0wD,EAAAr/C,EAAApB,EAAAw/C,EAAA9H,EAAA,OAAAltD,IAAAS,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,OAE5Bq1D,YAAQr3D,EAAAipC,QAAOxtB,EAAK8G,QAAQjH,IAAI,SAACwW,GAAC,OAAKA,EAAEoF,KAAK,IAC9Clf,EAAMq2B,EAAKz2B,QAAQrD,KAGvB6vD,EAAAhN,iCAAkC,CAChC90D,KAAM,CACFi1D,OAAQ97C,EACR85C,SACA8B,WAENxwD,EAAA7E,KAAA,EACoBwB,QAAQ0qC,KAAK,CAC/Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OALW,GAAP8T,EAAO/P,EAAAnD,KAMW,SAApBkT,GAASkY,OAAiB,CAAAjoB,EAAA7E,KAAA,eAAA6E,EAAA1D,OAAA,iBACxBizD,EAAO/nB,EAAKs2B,MAAMpsD,YAClB+1C,EAAQ8H,EAAKnrB,UAAU,SAACowB,GAAG,OAAKA,EAAItoD,KAAO0I,EAAK1I,EAAE,KAC3C,EACTqjD,EAAKprB,OAAOsjB,EAAO,EAAG13C,EAAQm4B,SAAStzB,MAEvC26C,EAAKzgC,KAAK/e,EAAQm4B,SAAStzB,MAE/B4yB,EAAK42B,WAAW52B,EAAK1tC,KAAK6U,SAASzC,GAAIqjD,GAAMoF,KACzC,WACIntB,EAAKs2B,MAAM3iE,KAAI2gB,EAAKyzC,IACpBp+C,EAAIxQ,OACR,EACA,kBAAOwQ,EAAIM,kBAAkBuK,SAAU,CAAK,GAC9C,yBAAAhc,EAAAvC,OAAA,EAAAqC,EAAA,EAjCgCvF,EAiChC,GACL,gBAAAk0D,EAAAlyB,GAAA,OAAA8hC,EAAA1gE,MAAAhF,KAAAiF,UAAA,EAtCA,IAsCA,CAAAxD,IAAA,gBAAAC,MAAA,eAAAikE,EAAAhkE,EAAAC,IAAAC,KAEM,SAAAitC,EAAoB/rB,GAAyB,IAAAvK,EAAApB,EAAA,OAAAxV,IAAAS,KAAA,SAAA8sC,GAAA,cAAAA,EAAA5sC,KAAA4sC,EAAA3sC,MAAA,OAC1CgW,SAAMxY,KAAKoY,QAAQrD,KAGvBgwD,EAAAhD,mCAAoC,CAClCj/D,KAAM,CACF22D,KAAMz5D,KAAKolE,UAAUrsD,WACrBgK,aAENosB,EAAA3sC,KAAA,EACoBwB,QAAQ0qC,KAAK,CAC/Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OALW,GAAP8T,EAAO+3B,EAAAjrC,KAMW,SAApBkT,GAASkY,OAAiB,CAAA6f,EAAA3sC,KAAA,eAAA2sC,EAAAxrC,OAAA,SAAS,IAAE,OACzC6U,SAAIxQ,QAAQmnC,EAAAxrC,OAAA,SACLyT,EAAQm4B,SAASxsB,SAAO,wBAAAosB,EAAArqC,OAAA,EAAAgqC,EAAA9uC,KAAA,IAClC,gBAAA+7D,EAAAl4B,GAAA,OAAA8hC,EAAA3gE,MAAAhF,KAAAiF,UAAA,EArBA,IAqBA,CAAAxD,IAAA,aAAAC,MAAA,eAAAkkE,EAAAjkE,EAAAC,IAAAC,KAEM,SAAA8tC,EAAiB1zB,GAAkB,IAAA7E,EAAAw/C,EAAAiP,EAAA7lE,KAAA,OAAA4B,IAAAS,KAAA,SAAA0tC,GAAA,cAAAA,EAAAxtC,KAAAwtC,EAAAvtC,MAAA,OAAAutC,SAAAvtC,KAAA,KAChBhC,EAAA4uB,kBAClB,CACI5tB,MAAO,uBACPqmB,QAAO,qDAAAzjB,OAAuD6X,EAAKxI,KAAI,mBACvE4b,KAAM,CACFvc,KAAM,OACNgzD,MAAO,iBACPj+C,QAAS,WAGjB7nB,KAAKoY,SACR,OAXY,GAYU,UAZjBhB,EAAO24B,EAAA7rC,MAYDorB,OAAiB,CAAAygB,EAAAvtC,KAAA,eAAAutC,EAAApsC,OAAA,iBAC7ByT,EAAQiM,QAAQ,6BACVuzC,EAAO52D,KAAKmlE,MAAMpsD,WAAWiD,OAAO,SAAC6/C,GAAG,OAAK5/C,EAAK1I,KAAOsoD,EAAItoD,EAAE,GACrEvT,KAAKylE,WAAWzlE,KAAKmB,KAAK6U,SAASzC,GAAIqjD,GAAMoF,KACzC,WACI6J,EAAKV,MAAM3iE,KAAI2gB,EAAKyzC,IACpBx/C,EAAQpP,OACZ,EACA,kBAAMoP,EAAQiM,QAAQ,GAAG,GAC3B,wBAAA0sB,EAAAjrC,OAAA,EAAA6qC,EAAA3vC,KAAA,IACL,gBAAAm2D,EAAAjmB,GAAA,OAAA01B,EAAA5gE,MAAAhF,KAAAiF,UAAA,EAzBA,IAyBA,CAAAxD,IAAA,eAAAC,MAAA,eAAAqkE,EAAApkE,EAAAC,IAAAC,KAEM,SAAAmkE,EAAmB/pD,EAAoB85C,GAAsB,IAAA3+C,EAAAw/C,EAAAqP,EAAAjmE,KAAA,OAAA4B,IAAAS,KAAA,SAAAytC,GAAA,cAAAA,EAAAvtC,KAAAutC,EAAAttC,MAAA,OAAAstC,SAAAttC,KAAA,KAC1ChC,EAAA4uB,kBAClB,CACI5tB,MAAO,8BACPqmB,QAAO,wDAAAzjB,OAA0D2xD,EAAOtiD,KAAI,YAAArP,OAAW6X,EAAKxI,KAAI,MAChG4b,KAAM,CACFvc,KAAM,OACNgzD,MAAO,iBACPj+C,QAAS,WAGjB7nB,KAAKoY,SACR,OAXY,GAYU,UAZjBhB,EAAO04B,EAAA5rC,MAYDorB,OAAiB,CAAAwgB,EAAAttC,KAAA,eAAAstC,EAAAnsC,OAAA,iBAC7ByT,EAAQiM,QAAQ,qCACVuzC,EAAO52D,KAAKmlE,MAAMpsD,YACnByyB,OACDorB,EAAKnrB,UAAU,SAACowB,GAAG,OAAKA,EAAItoD,KAAO0I,EAAK1I,EAAE,GAC1C,EACA,IAAI28C,EAAAU,aAAYr+B,IAAA,GACTtW,GAAI,IACP8G,QAAS9G,EAAK8G,QAAQ/G,OAAO,SAAC8/C,GAAG,OAAKA,EAAIvoD,KAAOwiD,EAAOxiD,EAAE,OAGlEvT,KAAKylE,WAAWzlE,KAAKmB,KAAK6U,SAASzC,GAAIqjD,GAAMoF,KACzC,WACIiK,EAAKd,MAAM3iE,KAAI2gB,EAAKyzC,IACpBx/C,EAAQpP,OACZ,EACA,kBAAMoP,EAAQiM,QAAQ,GAAG,GAC3B,wBAAAysB,EAAAhrC,OAAA,EAAAkhE,EAAAhmE,KAAA,IACL,gBAAAg2D,EAAA7lB,EAAA+1B,GAAA,OAAAH,EAAA/gE,MAAAhF,KAAAiF,UAAA,EAjCA,IAiCA,CAAAxD,IAAA,aAAAC,MAAA,eAAAykE,EAAAxkE,EAAAC,IAAAC,KAEM,SAAAukE,IAAA,IAAA1W,EAAAF,EAAAoH,EAAAiB,EAAAr/C,EAAApB,EAAAivD,EAAArmE,KAAA,OAAA4B,IAAAS,KAAA,SAAAikE,GAAA,cAAAA,EAAA/jE,KAAA+jE,EAAA9jE,MAAA,OAAA8jE,SAAA9jE,KAAA,EACkBxC,KAAKs7D,kBAAkBt7D,KAAKmB,KAAK6U,SAASzC,IAAG,OAA5Dm8C,SAAM4W,EAAApiE,KAAAoiE,EAAA9jE,KAAA,EACoBxC,KAAKwF,SAASrC,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAAAijE,OAA/D/W,EAA+D8W,EAAApiE,KAA/DsrD,cACFoH,EAAO52D,KAAKmlE,MAAMpsD,WAClB8+C,KAAQr3D,EAAAipC,WAAOjpC,EAAAoyB,SAAQgkC,EAAK96C,IAAI,SAACwW,GAAC,OAAMA,EAAE0I,UAAQ52B,OAAA+e,EAAKmP,EAAEu+B,MAAI,KAC7Dr4C,EAAMxY,KAAKoY,QAAQrD,KAGvB8vD,EAAAtV,6BAA8B,CAC5BzsD,KAAM,CACF4sD,SACAmI,QACArI,gBACAI,UAAW,SAAC9wC,GAAC,OAAKunD,EAAKhC,aAAa,CAAE7U,cAAe1wC,GAAI,KAE/DwnD,EAAA9jE,KAAA,GACoBwB,QAAQ0qC,KAAK,CAC/Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,QALW,GAAP8T,EAAOkvD,EAAApiE,KAMW,SAApBkT,GAASkY,OAAiB,CAAAg3C,EAAA9jE,KAAA,gBAAA8jE,EAAA3iE,OAAA,kBAC9B3D,KAAKwmE,aAAaxmE,KAAKmB,KAAK6U,SAASzC,GAAI6D,EAAQm4B,UAAUysB,KACvD,kBAAMxjD,EAAIxQ,OAAO,EACjB,kBAAOwQ,EAAIM,kBAAkBuK,SAAU,CAAK,GAC9C,yBAAAijD,EAAAxhE,OAAA,EAAAshE,EAAApmE,KAAA,IACL,gBAAAymE,IAAA,OAAAN,EAAAnhE,MAAAhF,KAAAiF,UAAA,EA7BA,IA6BA,CAAAxD,IAAA,aAAAC,MAAA,eAAAglE,EAAA/kE,EAAAC,IAAAC,KAEM,SAAA8kE,IAAA,IAAAnuD,EAAApB,EAAAw/C,EAAA59C,EAAA4tD,EAAA,OAAAhlE,IAAAS,KAAA,SAAAwkE,GAAA,cAAAA,EAAAtkE,KAAAskE,EAAArkE,MAAA,OACGgW,SAAMxY,KAAKoY,QAAQrD,KAAKiwD,EAAA5U,kCAAiCyW,EAAArkE,KAAA,EACzCwB,QAAQ0qC,KAAK,CAC/Bl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OALW,GAAP8T,EAAOyvD,EAAA3iE,KAMW,SAApBkT,GAASkY,OAAiB,CAAAu3C,EAAArkE,KAAA,eAAAqkE,EAAAljE,OAAA,iBAC9B6U,SAAIM,kBAAkBuK,QAAU,mBAC1BuzC,EAAO52D,KAAKmlE,MAAMpsD,WAClBC,EAAMhZ,KAAKmB,KAAK6U,SAChB4wD,KAAepmE,EAAAipC,QAAOryB,EAAQm4B,SAASnrC,OAAOwyD,GAAO,MAAKiQ,EAAArkE,KAAA,GAC1DxC,KAAKylE,WAAWzsD,EAAIzF,GAAIqzD,GAAapiE,MAAO,SAACnB,GAC/C,QAAA7C,EAAAmU,aAAY,iCACZ6D,EAAIxQ,QACE3E,CACV,GAAE,SACF,EAAA7C,EAAAynC,eAAa,wCAAA7jC,OAC+BgT,EAAQm4B,SAASlqC,OAAM,oBAEnEmT,EAAIxQ,QAAQ,yBAAA6+D,EAAA/hE,OAAA,EAAA6hE,EAAA3mE,KAAA,IACf,gBAAA8mE,IAAA,OAAAJ,EAAA1hE,MAAAhF,KAAAiF,UAAA,EAxBA,IAwBA,CAAAxD,IAAA,aAAAC,MAEO,SAAWsoC,EAAiB4sB,GAChC,SAAOr2D,EAAAgoD,gBAAeve,EAAS,CAC3Bz2B,GAAIy2B,EACJv2B,KAAM,WACN2D,QAASw/C,EACTjjD,YAAW,qBAAAvP,OAAuB4lC,KACnC1mC,WACP,GAAC,CAAA7B,IAAA,eAAAC,MAAA,eAAAqlE,EAAAplE,EAAAC,IAAAC,KAEM,SAAAmlE,EAAmBxhE,GAA0B,OAAA5D,IAAAS,KAAA,SAAA4kE,GAAA,cAAAA,EAAA1kE,KAAA0kE,EAAAzkE,MAAA,OAAAykE,SAAAzkE,KAAA,EACrBxC,KAAKwF,SAASrC,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,OAA5D4jE,OAAYD,EAAAtjE,OAAA,YACXpD,EAAAgoD,gBAAevoD,KAAKmB,KAAK6U,SAASzC,GAAI,CACzCA,GAAIvT,KAAKmB,KAAK6U,SAASzC,GACvBE,KAAM,oBACN2D,QAAOmb,IAAA,GAJO00C,EAAA/iE,MAIiBsB,GAC/BmO,YAAW,yBAAAvP,OAA2BpE,KAAKmB,KAAK6U,SAASzC,MAC1DjQ,aAAW,wBAAA2jE,EAAAniE,OAAA,EAAAkiE,EAAAhnE,KAAA,IACjB,gBAAAqkE,EAAA8C,GAAA,OAAAJ,EAAA/hE,MAAAhF,KAAAiF,UAAA,EAVA,IAUA,CAAAxD,IAAA,qBAAAC,MAAA,eAAA0lE,EAAAzlE,EAAAC,IAAAC,KAEO,SAAAwlE,EAAyBr9B,GAAe,IAAA4sB,EAAA,OAAAh1D,IAAAS,KAAA,SAAAilE,GAAA,cAAAA,EAAA/kE,KAAA+kE,EAAA9kE,MAAA,OAAA8kE,SAAA9kE,KAAA,KACxBjC,EAAAopC,cAAaK,EAAS,YAAY1mC,YAAW,OAA3DszD,OACM0Q,EAAA3jE,OAAA,UADNizD,EAAI0Q,EAAApjE,KACLkT,mBACkBoyB,MAAQotB,EAAO,IAAE,wBAAA0Q,EAAAxiE,OAAA,EAAAuiE,EAAA,IAC3C,gBAAAhC,EAAAkC,GAAA,OAAAH,EAAApiE,MAAAhF,KAAAiF,UAAA,EANA,IAMA,CAAAxD,IAAA,oBAAAC,MAAA,eAAA8lE,EAAA7lE,EAEM,eACHqoC,EAAA/kC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkBjF,KAAKmB,KAAK6U,SAASzC,GAAE,OAAA3R,IAAAC,KAAA,SAAA4lE,IAAA,IAAAzY,EAAA,OAAAptD,IAAAS,KAAA,SAAAqlE,GAAA,cAAAA,EAAAnlE,KAAAmlE,EAAAllE,MAAA,OAAAklE,SAAAllE,KAAA,KAG7BjC,EAAAopC,cAAaK,EAAS,mBAAmB1mC,YAAW,OADxD0rD,OAEG0Y,EAAA/jE,OAAA,UAFHqrD,EAAK0Y,EAAAxjE,KAETkT,mBACsBoyB,MAASwlB,EAAgB,IAAE,wBAAA0Y,EAAA5iE,OAAA,EAAA2iE,EAAA,EALZ7lE,EAKY,GACtD,gBAAA05D,IAAA,OAAAkM,EAAAxiE,MAAAhF,KAAAiF,UAAA,EATA,IASA,CAAAxD,IAAA,eAAAC,MAEO,SAAasoC,EAAiB0lB,GAClC,SAAOnvD,EAAAgoD,gBAAeve,EAAS,CAC3Bz2B,GAAIy2B,EACJv2B,KAAM,kBACN2D,QAASs4C,EACT/7C,YAAW,4BAAAvP,OAA8B4lC,KAC1C1mC,WACP,GAAC,CAAA7B,IAAA,iBAAAC,MAEM,SAAeo9B,EAAsBm9B,GACxC,IAAIvjC,EAAQoG,EAAMpG,MACZivC,EAAQjvC,EAAM9I,KAChB,SAAC3T,GAAI,IAAA2rD,EAAAlM,EAAA,OACDz/C,EAAK1I,KAAO0oD,EAAS1oD,KACL,QAAhBq0D,EAAA3L,EAASl5C,eAAO,IAAA6kD,OAAA,EAAhBA,EAAkBviE,WACF,QADQq2D,EACpBz/C,EAAK8G,eAAO,IAAA24C,OAAA,EAAZA,EAAcv/B,OACV,SAAC+xB,EAAG5qC,GAAC,OACD4qC,GACC+N,EAASl5C,QAAQ6M,KAAK,SAACksC,GAAG,OAAKx4C,EAAE/P,KAAOuoD,EAAIvoD,EAAE,GACzC,EACA,EAAE,EACZ,GACH,GAYb,OAVAo0D,EACQA,EAAc5T,UAAY,EAC3Br7B,EAAQA,EAAMt0B,OAAO,CAClB,IAAI8rD,EAAAU,aAAYr+B,IAAA,GAAM0pC,GAAQ,IAAElI,SAAU,OAElC,IAAImF,EAAAmC,cAAa9oC,IAAA,GAC5BuM,GAAK,IACRpG,QACA5J,MAAO,OAGf,KAACynC,CAAA,CA7X6B,CAAQ/1D,EAAAiI,cAA7B8tD,SAAqB,mBAAAt2D,iBAArBs2D,GAAoBr2D,EAAAsd,mBAAA7U,EAAAG,qBAAA5I,EAAAsd,mBAAA3U,EAAAqQ,WAAAhZ,EAAAsd,mBAAAzU,EAAAH,iBAAA,EAApB2tD,EAAqB,WAAAr2D,EAAA,oCAArBq2D,EAAoB94C,QAApB84C,EAAoB74C,UAAAC,WAFjB,SAEH44C,CAAqB,yFCnBrB32D,aAAyB,CAClC,CAAE2T,GAAI,aAAcE,KAAM,qBAC1B,CAAEF,GAAI,cAAeE,KAAM,sBAC3B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,YAAaE,KAAM,2BACzB,CAAEF,GAAI,eAAgBE,KAAM,+BAC5B,CAAEF,GAAI,eAAgBE,KAAM,gBAC5B,CAAEF,GAAI,SAAUE,KAAM,8JCrD1B,IAAAjT,EAAA1C,EAAA,OAEA8L,GADA9L,EAAA,OACAA,EAAA,QACA+P,EAAA/P,EAAA,OACAwQ,EAAAxQ,EAAA,MACAkQ,EAAAlQ,EAAA,OACAuQ,EAAAvQ,EAAA,OACAyQ,EAAAzQ,EAAA,OACA2Q,EAAA3Q,EAAA,MACA0Q,EAAA1Q,EAAA,OACAmQ,EAAAnQ,EAAA,OAEAyM,EAAAzM,EAAA,OAEAm4C,EAAAn4C,EAAA,UAEAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,iBA8Ca8B,uBAAoB,eAApByM,EAAoBvM,EAAA,SAAAuM,IAAAtM,EAAAC,KAAAqM,EAAA,GAApBA,SAAoB,mBAAApM,iBAApBoM,EAAoB,EAApBA,EAAoB,UAAAnM,EAAA,iCAApBmM,MAAoB,UAAAnM,EAAA,qCAjBzBM,EAAAiZ,aACApL,EAAA0B,cACAxB,EAAA2B,cACArC,EAAA+B,sBACA5B,EAAAsB,gBACAhB,EAAA0B,kBACAvB,EAAA4B,eACA7B,EAAA4B,iBACAxG,EAAAiC,YACAjC,EAAAwC,oBACA6pC,EAAA9mC,iBACAlB,EAAAsB,mBACAhF,EAAA4B,oBAKKE,CAAoB,sFCjFjCgqB,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,MAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,MAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,MAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,+FCfaA,oBAAgC,CACzC,CAAE2T,GAAI,UAAWE,KAAM,UAAW4b,KAAM,CAAEy2C,MAAO,kBAAoBpD,OAAQ,QAC7E,CAAEnvD,GAAI,WAAYE,KAAM,WAAY4b,KAAM,CAAEy2C,MAAO,mBAAqBpD,OAAQ,WAChF,CACInvD,GAAI,YACJE,KAAM,YACN4b,KAAM,CAAEy2C,MAAO,oBACfpD,OAAQ,WAEZ,CAAEnvD,GAAI,QAASE,KAAM,QAAS4b,KAAM,CAAEy2C,MAAO,gBAAkBpD,OAAQ,WACvE,CACInvD,GAAI,YACJE,KAAM,YACN4b,KAAM,CAAEy2C,MAAO,oBACfpD,OAAQ,WAEZ,CACInvD,GAAI,YACJE,KAAM,YACN4b,KAAM,CAAEy2C,MAAO,oBACfpD,OAAQ,wNCrBhB5kE,EAAA,WACA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,gLAeYoC,EAAAqN,yBAAA,UAAArN,CAOC,qBAPDA,CAOC,aAIWA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA09C,EAAA3uD,EAAAkR,wBAAAotC,GAAAsQ,MAAAjtC,EAAA3hB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAqQ,EAAAi/C,aAAAjS,GAAA19C,EAAA,GAFJjR,EAAAsN,wBAAAtN,GAMJA,EAAAqN,yBAAA,cAAarN,EAAA8Q,qBAAA,uBAAA69C,EAAA3uD,EAAAkR,wBAAAotC,GAAAsQ,MAAAn5C,EAAAzV,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAmE,EAAAkyD,WAAAhZ,GAAa,GAC/B3uD,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,IAAW,sDALvBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAwvD,aAAAjS,GAAA,2BAfhB3uD,EAAAqN,yBAAA,YAIIrN,EAAA+R,qBAAA,EAAA61D,EAAA,aAmBJ5nE,EAAAsN,iEAfJtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAoB,EAAAyuD,aAAA5gE,CACE,eAAAmS,EAAAgb,UAAA,+DAeEntB,EAAAqN,yBAAA,cAAArN,CAGC,eAEOA,EAAAuN,iBAAA,oBACAvN,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,kBAAAG,GAAAjR,EAAAkR,wBAAA+kC,GAAA,IAAAj2B,EAAAhgB,EAAAqR,0BAAA,OAAUrR,EAAAsR,sBAAA0O,EAAA6nD,iBAAA52D,GAAwB,GAHtCjR,EAAAsN,wBAAAtN,GAMJA,EAAAqN,yBAAA,eAAmCrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+kC,GAAA,IAAAj4B,EAAAhe,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0M,EAAA8pD,UAAS,GACjD9nE,EAAAuN,iBAAA,gBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAAmCrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+kC,GAAA,IAAA7/B,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAA2xD,kBAAiB,GACzD/nE,EAAAuN,iBAAA,oBACJvN,EAAAsN,wBAAAtN,EAAS,wBAGTA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,uCAAiCvN,EAAAsN,wBAAAtN,IAMvCN,+BAA4B,eAA5BsoE,EAA4B,WAIrC,SAAAA,EACYnuD,EACA0kC,GAAuD1+C,EAAAC,KAAAkoE,GADvDloE,KAAA+Z,SACA/Z,KAAAy+C,cALLz+C,KAAA8gE,aAAyB,GACzB9gE,KAAAqjB,SAAU,CAKd,CAACvjB,SAAAooE,EAAA,EAAAzmE,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAEG,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAEQxC,KAAK+Z,OAAO+mD,aAAa39D,QAAK7C,EAAA4b,MAAK,IAAI5Y,YAAW,UAAAhB,EAAAiC,GAAAjC,EAAA4B,KAAA5B,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,QAAAF,EAAAiC,GAAK,GAAE,OADpEvE,KAAK8gE,aAAYx+D,EAAAiC,GAAA,wBAAAjC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAEpB,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAEM,WACH1B,KAAK8gE,aAAa3qC,KAAK,GAC3B,GAAC,CAAA10B,IAAA,aAAAC,MAEM,SAAWotD,GACd9uD,KAAK8gE,aAAat1B,OAAOsjB,EAAO,EACpC,GAEA,CAAArtD,IAAA,mBAAAC,MAIO,SAAiBotB,GAAK,IAAAxtB,EAAAtB,KAEzB,GAAI8uB,EAAMuhC,OAAQ,CACd,IAAME,EAAOzhC,EAAMuhC,OAAOC,MAAM,GAEhC,GAAIC,EAAM,CACN,IAAM4X,EAAS,IAAI1X,WACnB0X,EAAOpX,WAAWR,EAAM,SACxB4X,EAAOzX,iBAAiB,OAAQ,SAAC0X,GAC7B,IAEwCtxC,EAFlC5jB,KACF1S,EAAAmwD,WAAWyX,EAAIC,WAAmB3gE,SAAW,GAAGqvB,EAAAC,EAChB9jB,GAAI,IAAxC,IAAA6jB,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAA0C,CACtC91B,EAAKw/D,aAAa3qC,KADoBW,EAAAp1B,MAA7B+3D,KACkB,CAC9B,OAAA9uC,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD/1B,EAAKw/D,gBAAetgE,EAAAipC,QAAOnoC,EAAKw/D,cAChChyC,EAAMuhC,OAAO3uD,MAAQ,EACzB,GACAymE,EAAOzX,iBAAiB,QAAS,SAACrtD,GAAC,SAC/B7C,EAAAmU,aAAY,sBAAsB,IAIlD,GAAC,CAAAlT,IAAA,kBAAAC,MAAA,eAAA4mE,EAAA3mE,EAAAC,IAAAC,KAEM,SAAA0D,IAAA,IAAAgjE,EAAA,OAAA3mE,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACH,OAAAxC,KAAKqjB,SAAU,EACTklD,EAAgBvoE,KAAK8gE,aAAa9kD,OAAO,SAAC3Y,GAAC,OAAKA,GAAKA,EAAEwuC,MAAM,GAACpsC,EAAAjD,KAAA,EAC9DxC,KAAK+Z,OAAOsqD,aAAa,CAAEvD,aAAcyH,IAAgB,OAC/DvoE,KAAKy+C,YAAYz2C,QAAQ,wBAAAvC,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC5B,gBAAAioE,IAAA,OAAAK,EAAAtjE,MAAAhF,KAAAiF,UAAA,EAPA,IAOA,CAAAxD,IAAA,YAAAC,MAEM,SAAU4sC,EAAaryB,GAC1B,OAAOqyB,CACX,KAAC45B,EApDG,IAAAnnE,CAoDH,CA3DoC,GAA5BmnE,SAA4B,mBAAAjoE,iBAA5BioE,GAA4BhoE,EAAAwI,4BAAAC,EAAA4tD,sBAAAr2D,EAAAwI,4BAAAG,EAAA61C,cAAA,EAA5BwpB,EAA4B,UAAAhoE,EAAA,kCAA5BgoE,EAA4B/+D,UAAA,6BAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,m6BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA5DjCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,uBAAiBvN,EAAAsN,yBACrBtN,EAAAqN,yBAAA,aAAArN,CAA8B,cAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAA+R,qBAAA,EAAAu2D,EAAA,cAwBAtoE,EAAA+R,qBAAA,EAAAw2D,EAAA,gBAmBAvoE,EAAA+R,qBAAA,EAAAy2D,EAAA,yBAAAxoE,EAAAkmB,yEA1CKlmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAAnjB,CAAgB,WAAAqmB,GAyBhBrmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA2Z,QAAA,oLA4BA6kD,CAA4B,uJCrEzC,IAAAn3C,EAAAjzB,EAAA,OAEA6qE,EAAA7qE,EAAA,OAIAgc,EAAAhc,EAAA,OACAyC,EAAAzC,EAAA,MACAwC,EAAAxC,EAAA,OAEM8qE,EAA+D,GAErEhpE,0BAAA,SAAgBshE,EACZl3B,GAGA,OAAKA,KACA4+B,EAAc5+B,IAHnB/kC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,MAII2jE,EAAc5+B,IAAO,EAAIzpC,EAAAopC,cAAaK,EAAS,mBAAmB7mC,QAC9D7C,EAAAwb,KACI,SAACzY,GAAC,OACGA,EAAE+T,mBAAmBoyB,MAChBnmC,EAAE+T,QACF,EAAE,IAAsB,EAEtC9W,EAAAmyB,YAAW,SAACvN,GAAC,SAAKpL,EAAAO,IAAG,GAAwB,KAE9CuuD,EAAc5+B,KAAO,EAXPlwB,EAAAO,IAAG,GAY5B,EAEAza,wBAAA,SAAgB47D,EACZv/C,EACA+yC,EACAlgC,GAEA,IACwBgI,EADpB+xC,GAAe,EAAK9xC,EAAAC,EACLg4B,GAAK,QAAA/3B,EAAA,WAAE,IAAA6xC,EAAfC,EAAIjyC,EAAAp1B,MACX,GACIua,EAAK+e,WAAa+tC,EAAKt1D,MACvBwI,EAAK40C,KAAK5qD,SAAS8iE,EAAKt1D,OACxBqb,EAAM/X,UAAU6Y,KAAK,SAACvsB,GAAC,OAAKA,EAAEwQ,MAAM5N,SAAS8iE,EAAKt1D,KAAK,IAC5C,QAD6Cq1D,EACxDh6C,EAAMnS,aAAK,IAAAmsD,GAAXA,EAAaj1D,MAAM5N,SAAS8iE,EAAKt1D,OACnB,MAAds1D,EAAKt1D,KACP,CACE,IACkCkoB,EAD9BqtC,EAAU,EAAEptC,EAAA5E,EACQ+xC,EAAK/Z,OAAK,IAAlC,IAAApzB,EAAAjS,MAAAgS,EAAAC,EAAAzE,KAAAC,MAAoC,KAAzB6xC,EAASttC,EAAAj6B,MACVsQ,EAAO,IAAIuI,KAAKuU,EAAM9c,MAC5B,OAAQi3D,EAAU,IACd,IAAK,YACDD,MAAWj4C,EAAA8hB,UACPt4B,KAAKgX,OAAG,EACRR,EAAAm4C,UAASl3D,EAAMi3D,EAAU,KAEvB,EACA,EACN,MACJ,IAAK,eACDD,MAAWj4C,EAAA6hB,SACPr4B,KAAKgX,OAAG,EACRR,EAAAm4C,UAASl3D,EAAMi3D,EAAU,KAEvB,EACA,EACN,MACJ,IAAK,aACDD,MAAWj4C,EAAA6hB,SAAQ5gC,KAAM+e,EAAAo4C,UAASn3D,EAAMi3D,EAAU,KAC5C,EACA,EACN,MACJ,IAAK,cACDD,MAAWj4C,EAAA8hB,UAAS7gC,KAAM+e,EAAAo4C,UAASn3D,EAAMi3D,EAAU,KAC7C,EACA,EACN,MACJ,IAAK,aACDD,GACIl6C,EAAMxa,aAAYq0D,EAAAS,iBAAgBH,EAAU,IACtC,EACA,EACV,MACJ,IAAK,aACDD,GACIl6C,EAAMxa,aAAYq0D,EAAAS,iBAAgBH,EAAU,IACtC,EACA,EACV,MACJ,IAAK,eACDD,GACIl6C,EAAM00C,IAAI,kBAAoByF,EAAU,GAAK,EAAI,EACrD,MACJ,QACID,GAAW,EAAE,CAExB,OAAAr+C,GAAAiR,EAAA1W,EAAAyF,EAAA,SAAAiR,EAAAvE,GAAA,CACDwxC,EAAeG,GAAWD,EAAK/Z,MAAM3pD,SA1D7C,IAAA0xB,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAAAH,GA4DC,OAAAtM,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,OAAOwxC,CACX,oFClGAxyC,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,2ICJA,IAAAmK,EAAAjM,EAAA,OAEa8B,gCAA6BmK,EAAAs/D,SAAQ,OAAQ,IACtDt/D,EAAAu/D,YAAW,SAAU,IACjBv/D,EAAA6pC,OAAM,CAAE21B,QAAS,EAAG/hE,OAAQ,KAAG,EAC/BuC,EAAAy/D,SAAQ,OAAKz/D,EAAA6pC,OAAM,CAAE21B,QAAS,EAAG/hE,OAAQ,UAC5C,EACDuC,EAAAu/D,YAAW,SAAU,IACjBv/D,EAAA6pC,OAAM,CAAE21B,QAAS,EAAG/hE,OAAQ,OAAK,EACjCuC,EAAAy/D,SAAQ,OAAKz/D,EAAA6pC,OAAM,CAAE21B,QAAS,EAAG/hE,OAAQ,SAIpC5H,oCAAiCmK,EAAAs/D,SAAQ,OAAQ,IAC1Dt/D,EAAAsyB,OAAM,UAAQtyB,EAAA6pC,OAAM,CAAE21B,QAAS,EAAG/hE,OAAQ,QAAM,EAChDuC,EAAAsyB,OAAM,UAAQtyB,EAAA6pC,OAAM,CAAE21B,QAAS,EAAG/hE,OAAQ,EAAG,iBAAkB,WAAS,EACxEuC,EAAAu/D,YAAW,mBAAiBv/D,EAAAy/D,SAAQ,4GCVxC5pE,gBAAA,SAAgB2gC,EAAczkB,GAC1B,IAAI2tD,EAAM,GACV,GAAI3tD,EACA,QAAWra,KAAOqa,EACVra,KAAOqa,GAAPra,MAAcqa,EAAIra,KAClBgoE,GAAG,GAAArlE,OAAQqlE,EAAM,IAAM,IAAErlE,OAAI3C,EAAG,KAAA2C,OAAIoxC,mBAAmB15B,EAAIra,MAIvE,OAAOgoE,CACX,qJCdA,IAGIC,EAHJhqB,EAAA5hD,EAAA,OACA2hD,EAAA3hD,EAAA,OA+B6B,SAAA6rE,aAAAhoE,EAAAC,IAAAC,KAA7B,SAAAC,EAA8B8nE,GAAe,OAAAhoE,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtB,GADsBF,EAAAiC,GACrCqlE,EAAMC,WAASvnE,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EAAUonE,EAAME,iBAAgB,OAAAxnE,EAAAiC,GAAAjC,EAAA4B,KAAA,WAAA5B,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,SAC/C,SAAAk9C,EAAA18C,KAAI,QAAO,sCAAwCV,EAAAE,KAAA,EACxConE,EAAMG,iBAAgB,UAAAznE,EAAA4B,KAAA,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,mBACjC,EAAA87C,EAAAuqB,YAAW,gDAAiD,UAAW,kBACnEjkE,SAASyC,QAAQ,GACnB,yBAAAlG,EAAAwC,OAAA,EAAAhD,EAAA,KAETkD,MAAAhF,KAAAiF,UAAA,CA7BDrF,aAAA,SAAgB8G,EACZkjE,GACgC,IAAhC/zC,EAAA5wB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAEf2kE,EAAMC,YACFH,GAAQzzC,cAAcyzC,GAC1BA,EAAcO,YAAY,YACtB,EAAAvqB,EAAA18C,KAAI,QAAO,2BAUvB,SAIe+mE,EAAc5sD,GAAAwsD,EAAA3kE,MAAAhF,KAAAiF,UAAA,CAbjB8kE,CAAeH,EACnB,EAAG/zC,GAEX,EAEAj2B,kBAAA,SAAgBsqE,IACRR,GAAQzzC,cAAcyzC,EAC9B,wJC3BA,IAAA5vD,EAAAhc,EAAA,kBAWa8B,eAAY,eAAZ6I,EAAY,WAHzB,SAAAA,IAAA1I,EAAAC,KAAAyI,GAKczI,KAAAmqE,QAAsC,GAEtCnqE,KAAAoqE,WAAyC,GAEzCpqE,KAAAqqE,eAEN,GAEerqE,KAAAsqE,aAAe,IAAIxwD,EAAAqB,iBAAyB,GAE/Cnb,KAAAkD,YAAclD,KAAKsqE,aAAahvD,eAEhDxb,SAAA2I,EAAA,EAAAhH,IAAA,iBAAAkE,IACA,WACI,OAAO3F,KAAKsqE,aAAavxD,UAC7B,GAAC,CAAAtX,IAAA,cAAAC,MAEM,WACH1B,KAAKuqE,SACT,GAAC,CAAA9oE,IAAA,UAAAC,MAES,WACN,QAAWD,KAAOzB,KAAKmqE,QACf1oE,KAAOzB,KAAKmqE,SACZnqE,KAAKmE,aAAa1C,GAG1B,QAAWA,KAAOzB,KAAKoqE,WACf3oE,KAAOzB,KAAKoqE,YACZpqE,KAAKi2B,cAAcx0B,GAG3B,QAAWA,KAAOzB,KAAKqqE,eACf5oE,KAAOzB,KAAKqqE,gBACZrqE,KAAKwqE,MAAM/oE,EAGvB,GAEA,CAAAA,IAAA,UAAAC,MAMU,SAAQ+R,EAAcolB,GAAmC,IAAAv3B,EAAAtB,KAAnByqE,EAAAxlE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IAC5D,KAAIwO,GAAQolB,GAAMA,aAAc6xC,UAO5B,MAAM,IAAIC,MACNl3D,EACM,6CACA,8CATVzT,KAAKmE,aAAasP,GAClBzT,KAAKmqE,QAAQ12D,GAAam3D,WAAW,WACjC/xC,WACOv3B,EAAK6oE,QAAQ12D,EACxB,EAAGg3D,EAQX,GAEA,CAAAhpE,IAAA,eAAAC,MAAA,SAAAmpE,GAAA,SAAA1mE,EAAAgZ,GAAA,OAAA0tD,EAAA7lE,MAAAhF,KAAAiF,UAAA,CAAAd,SAAA2mE,SAAA,kBAAAD,EAAAC,UAAA,EAAA3mE,CAAA,EAIU,SAAasP,GACfzT,KAAKmqE,QAAQ12D,KACbtP,aAAanE,KAAKmqE,QAAQ12D,WACnBzT,KAAKmqE,QAAQ12D,GAE5B,IAEA,CAAAhS,IAAA,WAAAC,MAMU,SAAS+R,EAAcolB,GAAmC,IAAnB4xC,EAAAxlE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IAC7D,KAAIwO,GAAQolB,GAAMA,aAAc6xC,UAI5B,MAAM,IAAIC,MACNl3D,EACM,8CACA,+CANVzT,KAAKi2B,cAAcxiB,GACnBzT,KAAKoqE,WAAW32D,GAAaw2D,YAAY,kBAAMpxC,GAAI,EAAE4xC,EAQ7D,GAEA,CAAAhpE,IAAA,gBAAAC,MAAA,SAAAqpE,GAAA,SAAA90C,EAAA0N,GAAA,OAAAonC,EAAA/lE,MAAAhF,KAAAiF,UAAA,CAAAgxB,SAAA60C,SAAA,kBAAAC,EAAAD,UAAA,EAAA70C,CAAA,EAIU,SAAcxiB,GAChBzT,KAAKoqE,WAAW32D,KAChBwiB,cAAcj2B,KAAKoqE,WAAW32D,WACvBzT,KAAKoqE,WAAW32D,GAE/B,IAEA,CAAAhS,IAAA,eAAAC,MAKU,SAAa+R,EAAc+2D,GACjCxqE,KAAKwqE,MAAM/2D,GACXzT,KAAKqqE,eAAe52D,GAAQ+2D,CAChC,GAAC,CAAA/oE,IAAA,kBAAAC,MAES,SAAgB+R,GACtB,OACIzT,KAAKqqE,eAAe52D,aAAiBqG,EAAAkxD,gBACnChrE,KAAKqqE,eAAe52D,EAE9B,GAEA,CAAAhS,IAAA,QAAAC,MAIU,SAAM+R,GACRA,KAAQzT,KAAKqqE,iBACTrqE,KAAKqqE,eAAe52D,aAAiBqG,EAAAkxD,aACpChrE,KAAKqqE,eAAe52D,GAAc8J,cAC5Bvd,KAAKqqE,eAAe52D,IAC1BzT,KAAKqqE,eAAe52D,YAElBzT,KAAKqqE,eAAe52D,GAEnC,GAEA,CAAAhS,IAAA,YAAAC,MACU,SAAUupE,GAChB,IAGsBn0C,EAHhBo0C,EAAO9gD,OAAOC,KAAKrqB,KAAKqqE,gBAAgBruD,OAAO,SAACmvD,GAAC,OACnDA,EAAEllE,SAASglE,EAAS,GACtBl0C,EAAAC,EACgBk0C,GAAI,IAAtB,IAAAn0C,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MACIp3B,KAAKwqE,MADK1zC,EAAAp1B,MAEb,OAAAipB,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACL,KAAC5uB,CAAA,CAhJoB,GAAZA,SAAY,mBAAAxI,iBAAZwI,EAAY,EAAZA,EAAY,WAAAvI,EAAA,oCAAZuI,EAAYgV,QAAZhV,EAAYiV,UAAAC,WAFT,SAEHlV,CAAY,gNCXzB,IAAAsoB,EAAAjzB,EAAA,OACAoiC,EAAApiC,EAAA,OACAstE,EAAAttE,EAAA,OACA4hD,EAAA5hD,EAAA,OAoBA,SAASutE,EAAUr5D,GACf,IAAMs5D,KAAWF,EAAAG,iBAAgBv5D,EAAM,OACvC,SAAA5N,UAAU2sB,EAAA2U,QAAO4lC,EAAU,YAAW,KAAAlnE,UAAI2sB,EAAA2U,QAAO4lC,EAAU,UAAS,IACxE,CAEA,SAASE,EAAax5D,GAClB,SAAA5N,UAAU2sB,EAAA2U,QAAO1zB,EAAM,YAC3B,CAsFA,SAASy5D,EAAkBhC,GACvB,OAAOA,EACFvsC,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,SAAU,MAClBA,QAAQ,OAAQ,OAChBA,QAAQ,iBAAkB,MACnC,CA3FAt9B,2BAAA,SAAgBgxC,EAAyB9hB,GAAe,IAAA48C,EAAAC,EAAAC,EAC9CC,EAA0B,GAC1Bl4D,EAAc83D,EAAiB,GAAArnE,OAAI0qB,EAAMmU,OACzCl9B,EAAW0lE,EAAiB,GAAArnE,OAAI0qB,EAAM/oB,WAC5C8lE,EAAO11C,KAAK,CAAC,QAAS,cACtB01C,EAAO11C,KAAK,CAAC,UAAW,QACxB01C,EAAO11C,KAAK,CAAC,QAAS,WACtB01C,EAAO11C,KAAK,CAAC,MAAK,GAAA/xB,OAAK0qB,EAAMg9C,eAC7BD,EAAO11C,KAAK,CAAC,UAAS,GAAA/xB,OAAK,IAAImW,KAAKuU,EAAM9c,MAAM+5D,iBAChDF,EAAO11C,KAAK,CACR,QAAO,GAAA/xB,UACJ2sB,EAAAiV,YAAWlX,EAAM9c,KAAoB,QAAhB05D,EAAE58C,EAAMxa,gBAAQ,IAAAo3D,IAAI,IAAIK,iBAEpDF,EAAO11C,KAAK,CAAC,UAAS,GAAA/xB,OAAK0qB,EAAMttB,SACjCqqE,EAAO11C,KAAK,CAAC,cAAexiB,IAC5Bk4D,EAAO11C,KAAK,CAAC,WAAYpwB,IACzB,IAAM0O,GACa,QAAfk3D,EAAA78C,EAAMnW,iBAAS,IAAAgzD,OAAA,EAAfA,EAAiBl4D,QACP,QADWm4D,EACrB98C,EAAMra,YAAI,IAAAm3D,OAAA,EAAVA,EAAY3kE,MAAM,OAClB6nB,EAAMob,WACN,OACJ2hC,EAAO11C,KAAK,CACR,YAAW,MAAA/xB,OACLqQ,EAAI,YAAArQ,OAAW0qB,EAAMra,MAAQqa,EAAMsT,cAE7C,IAAM4pC,EAAWH,EACZ/vD,IAAI,SAAAxV,GAAA,IAAA8B,EAAA4a,EAAA1c,EAAA,GAAO5E,EAAK0G,EAAA,YAAAhE,OAAPgE,EAAA,GAAmB,KAAAhE,OAAIoxC,mBAAmB9zC,GAAM,GACzDmT,KAAK,MACV,yCAAAzQ,OAA0C4nE,EAC9C,EAEApsE,6BAAA,SAAgB8wC,EAA2B5hB,GAAe,IAAAm9C,EAAAC,EAChDC,EAAMr9C,EAAM+B,QAAU26C,EAAeH,EACrCj0D,EAAe,CACjB+P,OAAQ,WACRilD,KAAMt9C,EAAMttB,MACZ4V,QAAS0X,EAAMmU,KACfl9B,SAAU+oB,EAAM/oB,SAChBsmE,KAAK,EACLC,MAAK,GAAAloE,OAAK+nE,EAAIr9C,EAAM9c,MAAK,KAAA5N,OAAI+nE,KACzBp7C,EAAAiV,YAAWlX,EAAM9c,KAAoB,QAAhBi6D,EAAEn9C,EAAMxa,gBAAQ,IAAA23D,IAAI,OAG3CM,GAAUz9C,EAAMtY,WAAa,IAAIsF,IAAI,SAACzY,GAAM,OAAKA,EAAE2D,OAAS3D,CAAC,GAC7D0T,IACc,QAAfm1D,EAAAp9C,EAAM/X,iBAAS,IAAAm1D,GAAfA,EAAiB7mE,OAASypB,EAAM/X,UAAY,OAAS,CAAC+X,EAAMzV,SAC/DyC,IAAI,SAACzY,GAAM,OAAKA,GAAG2D,OAAS3D,CAAC,GAC/B,OAAIkpE,EAAOlnE,QAAU0R,EAAU1R,UAC3B+R,EAAQ07B,OAAM4M,EAAAjW,QAAM,GAAArlC,OAAA+e,EAAKopD,GAAMppD,EAAKpM,KAAYlC,QACpD,+CAAAzQ,UAAsD87B,EAAAK,eAClDnpB,GAER,EAEAxX,gCAAA,SAAgB4wC,EACZ1hB,GACsC,IAAA09C,EAAAC,EAAAC,EAAtC55D,EAAA7N,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,UAExB6pB,EAAM9c,OAAM8c,EAAM9c,KAAOuI,KAAKgX,OACnC,IAAMzuB,EAAY,CACdpE,KAAM,2BACNiuE,IAAK,WACLC,QAAS,IAAIryD,KAAKuU,EAAM9c,MAAM+5D,cAC9Bc,SAAO97C,EAAAiV,YAAWlX,EAAM9c,KAAoB,QAAhBw6D,EAAE19C,EAAMxa,gBAAQ,IAAAk4D,IAAI,IAAIT,cACpDe,QAASh+C,EAAMttB,MACfyhC,KAAMnU,EAAMmU,KACZl9B,SAAU+oB,EAAM/oB,SAChBgnE,OAAqB,QAAfN,EAAE39C,EAAM+B,eAAO,IAAA47C,MAEnBF,GAAUz9C,EAAMtY,WAAa,IAAIsF,IAAI,SAACzY,GAAM,OAAKA,EAAE2D,OAAS3D,CAAC,GAC7D0T,IACc,QAAf21D,EAAA59C,EAAM/X,iBAAS,IAAA21D,GAAfA,EAAiBrnE,OAASypB,EAAM/X,UAAY,OAAS,CAAC+X,EAAMzV,SAC/DyC,IAAI,SAACzY,GAAM,OAAKA,GAAG2D,OAAS3D,CAAC,GAC/B,OAAIkpE,EAAOlnE,QAAU0R,EAAU1R,UAC3BvC,EAAKkqE,MAAKttB,EAAAjW,QAAM,GAAArlC,OAAA+e,EAAKopD,GAAMppD,EAAKpM,KAAYlC,QAChC,WAAT/B,EAAiB,0DAAA1O,UACwC87B,EAAAK,eACtDz9B,IACH,wDAAAsB,UACuD87B,EAAAK,eACpDz9B,GAEd,gMCnHAihC,EAAAjmC,EAAA,OAASssB,uCAAA,CAAA6iD,YAAA,EAAAtnE,IAAA,kBAAAo+B,EAAAt7B,YAAY,IACrB,IAAAykE,EAAApvE,EAAA,OAASssB,iDAAA,CAAA6iD,YAAA,EAAAtnE,IAAA,kBAAAunE,EAAAC,sBAAsB,IAC/B,IAAAC,EAAAtvE,EAAA,OAASssB,yCAAA,CAAA6iD,YAAA,EAAAtnE,IAAA,kBAAAynE,EAAAC,cAAc,IACvB,IAAAC,EAAAxvE,EAAA,OAASssB,0CAAA,CAAA6iD,YAAA,EAAAtnE,IAAA,kBAAA2nE,EAAA1kE,eAAe,IACxB,IAAA2kE,EAAAzvE,EAAA,OAASssB,wCAAA,CAAA6iD,YAAA,EAAAtnE,IAAA,kBAAA4nE,EAAAC,aAAa,IACtB,IAAAC,EAAA3vE,EAAA,OAASssB,kCAAA,CAAA6iD,YAAA,EAAAtnE,IAAA,kBAAA8nE,EAAAC,OAAO,IAEhBr3C,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,MAAA8B,GACAy2B,EAAAC,aAAAx4B,EAAA,OAAA8B,0MClBA9B,EAAA,WACAwC,EAAAxC,EAAA,UAEAA,EAAA,OACAA,EAAA,gDAEA8B,qBAAwCE,EAAA,SAAA6tE,IAAA5tE,EAAAC,KAAA2tE,EAAA,GAO3B/tE,wBAAqB,eAArBguE,EAAqB,WAC9B,SAAAA,EACYp9D,EACAtP,EACAC,GAAyBpB,EAAAC,KAAA4tE,GAFzB5tE,KAAAwQ,UACAxQ,KAAAkB,YACAlB,KAAAmB,MACT,CAACrB,SAAA8tE,EAAA,EAAAnsE,IAAA,cAAAC,OAAAmsE,EAAAlsE,EAAAC,IAAAC,KAEG,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SACI3D,KAAK8tE,gBAAc,wBAAAxrE,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC7B,SAAAlB,IAAA,OAAA+uE,EAAA7oE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAAA,eAAAqsE,EAAApsE,EAAAC,IAAAC,KAEM,SAAA0D,IAAA,OAAA3D,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SACI3D,KAAK8tE,gBAAc,wBAAAroE,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC7B,gBAAAhB,IAAA,OAAA+uE,EAAA/oE,MAAAhF,KAAAiF,UAAA,EAJA,IAIA,CAAAxD,IAAA,eAAAC,MAAA,eAAAssE,EAAArsE,EAAAC,IAAAC,KAEO,SAAAwE,IAAA,IAAA+C,EAAA6kE,EAAA3sE,EAAAtB,KAAA,OAAA4B,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACExC,KAAKmB,KAAK+B,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAAAmD,SAAAjE,KAAA,EACvDxC,KAAKkB,UAAUgC,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC5D8F,SAAWpJ,KAAKkB,UAAUyE,IAAI,0BAA4B,IAC1DsoE,GAAgB7kE,EAASwmB,KAAK,SAACvsB,GAAC,OAClC/B,EAAKkP,QAAQ5C,IAAI3H,SAAS5C,EAAE,KAG5BrD,KAAKwQ,QAAQK,SAAS,CAAC,MAC1BpK,EAAA9C,OAAA,WACQsqE,GAAY,wBAAAxnE,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACxB,gBAAA8tE,IAAA,OAAAE,EAAAhpE,MAAAhF,KAAAiF,UAAA,EAbA,MAaA2oE,EArBG,IAAAC,CAqBH,CA1B6B,GAArBD,SAAqB,mBAAA3tE,iBAArB2tE,GAAqB1tE,EAAAsd,mBAAA7U,EAAA0E,QAAAnN,EAAAsd,mBAAA3U,EAAAD,iBAAA1I,EAAAsd,mBAAAzU,EAAAD,qBAAA,EAArB8kE,EAAqB,WAAA1tE,EAAA,oCAArB0tE,EAAqBnwD,QAArBmwD,EAAqBlwD,UAAAC,WAFlB,SAEHiwD,CAAqB,iGCblC,IAAA78C,EAAAjzB,EAAA,OAIA8B,mBAAA,SAAgBsuE,EAAiB92D,GAC7B,IAAI+2D,EAAkB/2D,EAAQ+2D,SAAW,GACzCA,SAAUA,EAAQC,OAAO,GAAGC,cAAgBF,EAAQ50C,MAAM,IAC5C,GAAAn1B,OAAM+pE,EAAO,WAAA/pE,UAAU2sB,EAAA2U,QAAO,IAAInrB,KAAKnD,EAAQ6N,KAAM,gBAAmB,iBAC1F,yfCTA,IAAArb,EAAA9L,EAAA,OAEAwC,EAAAxC,EAAA,OACAwwE,EAAAxwE,EAAA,OAiBIywE,EAAY,MA4EhB,SAAgBhb,EAAUib,GAA+B,IAAjBnoC,EAAAphC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACpD,OAAOmhC,KAAKC,MAAMD,KAAKupB,UAAY6e,EAAOnoC,IAAUA,CACxD,CAmCsC,SAAAooC,aAAA9sE,EAAAC,IAAAC,KAA/B,SAAAC,EACHgB,EACA6E,GAAiB,IAAA6Q,EAAA,OAAA5W,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEXgW,SAAM7Q,EAAOoN,KACfu5D,EAAAI,sBAAqBn8C,IAAA,GAEd+7C,EAAAK,kBAAgB,IACnB7rE,UAEPR,EAAAiC,GAAAguB,EAAAjwB,EAAA4rC,GAAA3b,EAAAjwB,EAAA8rC,GAAA,GAAA9rC,EAAAE,KAAA,EAEawB,QAAQ0qC,KAAK,CACnBl2B,EAAIM,kBAAkBgW,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEisB,MAAiB,IACrChsB,YACLkV,EAAII,cAActV,cACpB,OAAAhB,SAAA+rC,GAAA/rC,EAAA4B,KAAA5B,EAAAssE,MAAAtsE,EAAA4rC,IAAA5rC,EAAA8rC,GAAA9rC,EAAA+rC,IAAA/rC,EAAAusE,GAAA,GAAAvsE,EAAAwsE,GAAA,CACFzrD,QAAS,SAACsG,GAAC,OAAMnR,EAAIM,kBAAkBuK,QAAUsG,CAAC,EAClD3hB,MAAO,kBAAMwQ,EAAIxQ,OAAO,GAAA1F,EAAAqB,OAAA,YAAArB,EAAAiC,IAAAjC,EAAAssE,GAAAtsE,EAAAusE,GAAAvsE,EAAAwsE,KAAA,yBAAAxsE,EAAAwC,OAAA,EAAAhD,EAAA,KAE/BkD,MAAAhF,KAAAiF,UAAA,CApIDrF,aAAA,SAAgB8F,EAAW+N,GACvB86D,EAAY96D,CAChB,EAUA7T,MAAA,SAAgBoD,EACZ8P,EACAi8D,EACAC,GAG4B,IAF5BC,EAAAhqE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAwB,QAExBiqE,EAAAjqE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmBspE,EAEnB,IAAI5rE,OAAOwsE,OACPxsE,OAAOysE,OAJXnqE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,IAI2B,CACvB,IAKUoqE,EAMHC,EAXDC,EAAmB,CACrB,iBACA,iBACA,kBAEAP,GACAK,EAAA5sE,SAAQwsE,GAAOjqE,MAAAqqE,EAAA,OAAAjrE,OACL8qE,EAAQ,QAAA9qE,OAAO0O,EAAI,QAAA1O,OAAO2qE,IAAG3qE,OAChCmrE,EAAM,CACTP,MAGJM,EAAA7sE,SAAQwsE,GAAOjqE,MAAAsqE,EAAA,OAAAlrE,OAAO8qE,EAAQ,QAAA9qE,OAAO0O,EAAI,QAAA1O,OAAO2qE,IAAG3qE,OAAOmrE,GAAM,CAG5E,EAOA3vE,kBAAA,SAAgB4vE,EAAgBnlD,EAAgBvO,GAC5C,IAAMra,EAAM4oB,EAAK,GACjB,OAAIvO,GAAOra,KAAOqa,EACPuO,EAAKhlB,OAAS,EACfmqE,EAAgBnlD,EAAKkP,MAAM,GAAIzd,EAAIra,IAAQ,IAC3Cqa,EAAIra,GAEP,IACX,EAOA7B,SAAA,SAAgB6pC,IAAiD,IAAhBhoC,EAAAwD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,GACrDolB,EAAO,GACb,OAF4BplB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE5B+W,OAAO,SAACyzD,GACjB,IAAMl8D,EAAK9R,EAAMguE,EAAGhuE,GAAOguE,EACrBC,EAASrlD,EAAKpkB,SAASsN,GAC7B,OAAKm8D,GAAQrlD,EAAK8L,KAAK5iB,IACfm8D,CACZ,EACJ,EAOA9vE,YAAA2zD,EASA3zD,YAAA,SAAgB+vE,EAAUlG,GAAwC,IAAlBpkE,EAAAJ,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAE7D,IADAwkE,EAAG,GAAArlE,OAAMqlE,GACFA,EAAIpkE,OAASA,GAAQokE,EAAG,IAAArlE,OAAOqlE,GACtC,OAAOA,CACX,EAOA7pE,eAAA,SAAgB6iD,EACZp9C,GAIA,QAHAuqE,EAAA3qE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,gEAEZwkE,EAAM,GACDn3C,EAAI,EAAGA,EAAIjtB,EAAQitB,IACxBm3C,GAAOmG,EAAMrc,EAAUqc,EAAMvqE,SAEjC,OAAOokE,CACX,EAQA7pE,mBARC,SAQqBwvB,EAAgBjS,EAAAwmB,GAAA,OAAA8qC,EAAAzpE,MAAAhF,KAAAiF,UAAA,EA2BtCrF,YAAA,SAAgB+wD,EAAUkf,GAOtB,QANMC,EAAa,IAAIC,OACnB,+DACA,MAEAC,EAAa,KACXC,EAAU,CAAC,IACTD,EAAaF,EAAWI,KAAKL,IAC7BG,EAAW,GAAG3qE,QAA4B,MAAlB2qE,EAAW,IAAYC,EAAQ95C,KAAK,IAChE85C,EAAQA,EAAQ5qE,OAAS,GAAG8wB,KACxB65C,EAAW,GACLA,EAAW,GAAG9yC,QAAQ,IAAI6yC,OAAO,KAAM,KAAM,KAC7CC,EAAW,IAGzB,IAAMG,EAAoBF,EAAQzkC,OAAO,EAAG,GAAG,GAe/C,OAdiBykC,EAAQn0D,IAAI,SAACs0D,GAE1B,QADMh9B,EAAU,GACP9gB,EAAI,EAAGA,EAAI89C,EAAI/qE,OAAQitB,IAAK,CACjC,IAAM7wB,GAAO0uE,EAAQ79C,IAAM,IAAIrrB,MAAM,KAAK4N,KAAK,KAAKqe,cACpD,IACIkgB,EAAQ3xC,GAAOgD,KAAKmxB,MAAMw6C,EAAI99C,GAAG4K,QAAQ,IAAK,YAE9CkW,EAAQ3xC,GAAO2uE,EAAI99C,IAAM,IAER,SAAjB8gB,EAAQ3xC,IAAoC,UAAjB2xC,EAAQ3xC,MACnC2xC,EAAQ3xC,GAAwB,SAAjB2xC,EAAQ3xC,GAAS,CAExC,OAAO2xC,CACX,EAEJ,EAEAxzC,6BAAA,SAAgBywE,EAA2BvhD,GAAiB,IAAAxtB,EAAAtB,KACxD,OAAO,IAAIgE,QAAgB,SAACC,EAASqsE,GAEjC,GAAIxhD,EAAMuhC,OAAQ,CACd,IAAMjd,EAAUtkB,EAAMuhC,OAChBE,EAAOnd,EAAQkd,MAAM,GAE3B,GAAIC,EAAM,CACN,IAAM4X,EAAS,IAAI1X,WACnB0X,EAAOpX,WAAWR,EAAM,SACxB4X,EAAOzX,iBAAiB,OAAQ,SAAC0X,GAC7BnkE,EAASmkE,EAAIC,WAAmB3gE,QAChC0rC,EAAQ1xC,MAAQ,EACpB,GACAymE,EAAOzX,iBAAiB,QAAS,SAACrtD,GAC9B/B,EAAK+hB,QAAU,GACfitD,EAAO,CAAC,qBAAsBjtE,GAClC,EAAC,EAGb,EACJ,EAMAzD,YAAA,SAAgB2wE,EAAUC,GACtB,GAAIA,aAAgBhnC,OAASgnC,EAAKnrE,OAAS,EAAG,CAC1C,IACMorE,EADOrmD,OAAOC,KAAKmmD,EAAK,IACNx0D,OAAO,SAACva,GAAG,OAAKA,KAAO+uE,EAAK,EAAE,GACtD,SAAApsE,OAAUqsE,EAAW57D,KAAK,KAAI,MAAAzQ,OAAKosE,EAC9B10D,IAAI,SAACG,GAAI,OACNw0D,EACK30D,IAAI,SAACra,GAAG,OAAKgD,KAAKC,UAAUuX,EAAKxa,IAAMy7B,QAAQ,IAAK,IAAI,GACxDroB,KAAK,IAAI,GAEjBA,KAAK,MAAK,CAEnB,MAAO,EACX,EAOAjV,eAAA,SAAgBoxD,EAAa0f,EAAkBC,GAC3C,IAAMv9B,EAAUtd,SAAS6d,cAAc,KACvCP,EAAQw9B,aACJ,OACA,iCAAmCp7B,mBAAmBm7B,IAE1Dv9B,EAAQw9B,aAAa,WAAYF,GAEjCt9B,EAAQQ,MAAM1rB,QAAU,OACxB4N,SAASmN,KAAK8Q,YAAYX,GAE1BA,EAAQy9B,QAER/6C,SAASmN,KAAKmR,YAAYhB,EAC9B,EAEAxzC,WAAA,SAAgBkxE,EAASptE,GACrB,IACMqtE,EADYrtE,EAAMuD,MAAM,KAAK,GACVi2B,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACpD8zC,EAAcC,mBAChBC,KAAKH,GACA9pE,MAAM,IACN6U,IAAI,SAACoyC,GACF,MAAO,KAAO,KAAOA,EAAEijB,WAAW,GAAGrG,SAAS,KAAKvxC,OAAM,EAC7D,GACC1kB,KAAK,KAEd,OAAOpQ,KAAKmxB,MAAMo7C,EACtB,EAOApxE,UAAA,SAAgBgzB,EAAiBw+C,GAG7B,QAFMC,EAAKluD,EAAOiuD,GACZE,EAAM,GACLD,EAAMhsE,QAAQ,CAEjB,IAAM7C,EAAO6uE,EAAMpmC,MACfzB,MAAM+nC,QAAQ/uE,GAEd6uE,EAAMl7C,KAAInxB,MAAVqsE,EAAKluD,EAAS3gB,IAEd8uE,EAAIn7C,KAAK3zB,EAAI,CAIrB,OAAO8uE,EAAIE,SACf,EASA5xE,uBAAA,SAAgB6xE,EAAqBC,EAAQC,EAAMC,EAAQC,GACvD,OACKH,GAAUE,GAAUF,EAASG,GAC7BF,EAAOC,GAAUD,EAAOE,GACxBD,GAAUF,GAAUE,EAASD,GAC7BE,EAAOH,GAAUG,GAAQF,CAElC,EAEA,IACMG,EAmBN,SAASC,EAAM5+C,EAAGrU,EAAGovC,EAAGr1C,GACpB,OAAO,WAKH,IAAI5Y,GAJJkzB,KAAO,IACPrU,KAAO,GAGW,EAClBqU,SAAIrU,EAAKA,IAAM,EACfA,GAJAovC,KAAO,IAIGA,GAAK,GAAM,EAIrBA,GAHAA,EAAKA,GAAK,GAAOA,IAAM,KAEvBjuD,EAAKA,GADL4Y,EAAS,GALTA,KAAO,GAKO,GACA,GACA,GACN5Y,IAAM,GAAK,UACvB,CACJ,CAlCa8xE,CAAM,WAAY,UAAY,WAO3C,SAASC,EAAMvI,GAEX,QADIwI,EAAI,WAAaxI,EAAIpkE,OAChBitB,EAAI,EAAGA,EAAIm3C,EAAIpkE,OAAQitB,IAEvB2/C,GADJA,EAAI7rC,KAAK8rC,KAAKD,EAAIxI,EAAI0H,WAAW7+C,GAAI,cACvB,GAAO2/C,IAAM,GAChC,OAAO,WACHA,SAAI7rC,KAAK8rC,KAAKD,EAAKA,IAAM,GAAK,YAC9BA,EAAI7rC,KAAK8rC,KAAKD,EAAKA,IAAM,GAAK,aACtBA,GAAKA,IAAM,MAAQ,CAC/B,CACJ,CAlBaD,CAAM,UACoCG,IA0CvD,SAAgBC,IACZ,IACMC,GADO,IAAI93D,MAEZC,mBACGsb,SAASw8C,cAAc,QAAQC,aAAa,SACxCC,UAAUC,UAEjBv/C,cACL,OAAOm/C,EAAa/e,QAAQ,MAAQ,GAAK+e,EAAa/e,QAAQ,MAAQ,CAC1E,CAjDA1zD,uBAAA,SAAgB8yE,IAA0D,IAArClE,EAAAvpE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,IAAKohC,EAAAphC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACrE,OAAOmhC,KAAKC,MAAMyrC,KAAUtD,EAAOnoC,IAAUA,CACjD,EAiCAzmC,mBAAA,SAAgB+yE,IACZ,OAAOP,IAAiB,QAAU,QACtC,EAGAxyE,eAAAwyE,EAWAxyE,mBAAA,SAAgBgV,EAAiBlE,GAAoC,IAAnBkiE,EAAA3tE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAC3DosD,EAAU,GACd,QAAW5vD,KAAOiP,EAAKqU,SACfrU,EAAKqU,SAAStjB,aAAgBmI,EAAA60B,UAC9B4yB,EAAO,GAAAjtD,OAAA+e,EACAkuC,GAAOluC,EACPvO,EAAiBlE,EAAKqU,SAAStjB,GAAiB,GAAA2C,OAAK3C,EAAG,QAEvDiP,EAAKqU,SAAStjB,GAAKiT,OAC3B28C,EAAQl7B,KAAI,GAAA/xB,OAAIwuE,GAAMxuE,OAAG3C,IAGjC,OAAO4vD,CACX,EAEAzxD,oBAAA,SAAgB4yC,EAAkBqgC,GAC9B,QAAWpxE,KAAOoxE,GACVA,QAAIpxE,IAAwD,KAAboxE,EAAIpxE,YAC5CoxE,EAAIpxE,EAGvB,EAEA7B,wBAAA,SAAgBgyC,EAAsBkhC,GAClC,SAAA1uE,OAAU0uE,EAAK,GAAGzE,eAAajqE,OAAG0uE,EAAKC,UAAU,GACrD,EAEAnzE,aAAA,SAAgBozE,EACZj2D,GAC4C,IAA5Ck2D,EAAAhuE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,MAACK,EAAW,KAAM,IAEzC,OAAOyX,EAAMf,OAAO,SAAC3Y,GAAC,OAAM4vE,EAAchtE,SAAS5C,EAAE,EACzD,kKCzYAvF,EAAA,WACA4hD,EAAA5hD,EAAA,6BAca8B,yBAAsB,eAAtButE,EAAsB,WAe/B,SAAAA,EAAoB3rE,GAAYzB,EAAAC,KAAAmtE,GAAZntE,KAAAwB,QATbxB,KAAAiN,SAAU,EAEVjN,KAAAkvE,SAAW,SAKVlvE,KAAAkzE,OAAqC,EAEV,CAACpzE,SAAAqtE,EAAA,EAAA1rE,IAAA,OAAAC,MAE7B,WAA6B,IAAxByxE,EAAAluE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,GACzBtC,OAAOywE,OACRzwE,OAAO0wE,UAAY1wE,OAAO0wE,WAAa,GACtC,SAAUC,EAAGz6D,EAAG8Q,EAAG2L,EAAGhD,GACnBghD,EAAEh+C,GAAKg+C,EAAEh+C,IAAM,GACfg+C,EAAEh+C,GAAGa,KAAK,CACN,iBAAiB5b,MAAOo4B,UACxB7jB,MAAO,WAEX,IAAIuI,EAAIxe,EAAE06D,qBAAqB5pD,GAAG,GAC9B6pD,EAAI36D,EAAE86B,cAAchqB,GAExB6pD,EAAEC,OAAQ,EACVD,EAAEE,IAAM,8CAAgDphD,EACxD+E,EAAEs8C,WAAWC,aAAaJ,EAAGn8C,EACjC,CAZC,CAYE10B,OAAQmzB,SAAU,SAAU,YAAaq9C,IAAW,EACvDzzB,EAAA18C,KAAI,YAAa,UAAW,wCAEhChD,KAAK6zE,QAAUlxE,OAAOywE,IAC1B,GAAC,CAAA3xE,IAAA,OAAAC,MAEM,SAAKmxE,GACRlwE,OAAO0wE,UAAUl9C,KAAK08C,EAC1B,GAEA,CAAApxE,IAAA,OAAAC,MAIO,SAAKyxE,GACR,IAAKnzE,KAAKiN,QACN,MAAM,IAAI09D,MACN,iEAGR,IAAK3qE,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,wDAGR,EAAAjrB,EAAA18C,KAAI,YAAa,UAAS,2BAAAoB,OAA6B+uE,IACvDnzE,KAAK8zE,KAAK,GACd,GACA,CAAAryE,IAAA,UAAAC,MAIO,SAAQ6R,GAAU,IAAAjS,EAAAtB,KACrB,IAAKA,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,uDAGJ3qE,KAAKiN,SACLjN,KAAK6D,QAAO,QAAAO,OACAmP,GACR,YACI,EAAAmsC,EAAA18C,KAAI,YAAa,UAAS,gBAAAoB,OAAkBmP,IAC5CjS,EAAKuyE,QAAQ,MAAO,SAAUtgE,GAC9BjS,EAAKwtB,MAAM,iBAAkB,oBACjC,EACA,IAGZ,GAAC,CAAArtB,IAAA,OAAAC,MAEM,SAAKoR,EAAcpR,GAA0B,IAAAyD,EAAAnF,KAChD,IAAKA,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,uDAGJ3qE,KAAKiN,SACLjN,KAAK6D,QAAO,OAAAO,OAAQ0O,GAAQ,WACxB3N,EAAKgxB,KAAI5D,IAAA,GACF7wB,GAAK,IACRotB,MAAO,UAEf,EAER,GAEA,CAAArtB,IAAA,QAAAC,MAOO,SACHs5B,EACA7T,EACA4sD,EACAryE,GAAc,IAAA8E,EAAAxG,KAEd,IAAKA,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,uDAGJ3qE,KAAKiN,SACLjN,KAAK6D,QAAO,SAAAO,OACC42B,EAAQ,KAAA52B,OAAI+iB,EAAM,KAAA/iB,OAAI2vE,EAAK,KAAA3vE,OAAI1C,GACxC,WACI,IAAM4zB,EAAIy+C,EAAQ,KAAOA,EAAQ,IACjC,EAAAr0B,EAAA18C,KACI,YACA,UAAS,UAAAoB,OACC42B,EAAQ,MAAA52B,OAAK+iB,GAAM/iB,OAAGkxB,GAAClxB,OAC7B1C,EAAQ,KAAOA,EAAQ,KAI/B8E,EAAK2vB,KAAK,CACNrH,MAAO,QACPkM,SAAUA,EACV7T,OAAQA,EACR4sD,MAAOA,GAEf,EACA,IAGZ,GAEA,CAAAtyE,IAAA,SAAAC,MAKO,SAAO+R,EAAcy7D,GAAiB,IAAA9nE,EAAApH,KACzC,IAAKA,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,uDAGJl3D,GAAQzT,KAAKiN,SACbjN,KAAK6D,QAAO,SAAAO,OACCqP,EAAI,KAAArP,OAAI8qE,GAAYlvE,KAAKkvE,UAClC,YACI,EAAAxvB,EAAA18C,KACI,YACA,UAAS,WAAAoB,OACEqP,GAAIrP,OAAG8qE,EAAW,KAAOA,EAAW,KAEnD9nE,EAAK+uB,KAAK,CACNrH,MAAO,aACPklD,QAAS9E,GAAY9nE,EAAK8nE,SAC1B+E,WAAYxgE,GAEpB,EACA,IAGZ,GAEA,CAAAhS,IAAA,OAAAC,MAKO,SAAKwyE,GAAsC,IAAArlC,EAAA7uC,KAAvBgG,EAAAf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACvB,IAAKjF,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,uDAGJ3qE,KAAKiN,UACLjN,KAAKm0E,WAAaD,GAAS,IAC3Bl0E,KAAK6D,QAAO,QAAAO,OACA8vE,GACR,YACI,EAAAx0B,EAAA18C,KAAI,YAAa,UAAS,SAAAoB,OAAW8vE,IACrCrlC,EAAK1Y,KAAK,CACNrH,MAAO,WACPlhB,IAAG,GAAAxJ,OAAK4B,EAASD,SAASC,OAAS,IAAE5B,OAAG8vE,IAEhD,EACA,KAGZ,GAEA,CAAAzyE,IAAA,SAAAC,MAOO,SACHs5B,EACAo5C,EACA1yE,EACAqyE,GAAc,IAAAlO,EAAA7lE,KAEd,IAAKA,KAAK6zE,QACN,MAAM,IAAIlJ,MACN,uDAGJ3qE,KAAKiN,SACLjN,KAAK6D,QAAO,QAAAO,OACA42B,EAAQ,KAAA52B,OAAIgwE,EAAQ,KAAAhwE,OAAI1C,EAAK,KAAA0C,OAAI2vE,GACzC,YACI,EAAAr0B,EAAA18C,KACI,YACA,UAAS,WAAAoB,OACE42B,EAAQ,MAAA52B,OAAKgwE,EAAQ,MAAAhwE,OAAK1C,GAAK0C,OACtC2vE,EAAQ,KAAOA,EAAQ,KAG/BlO,EAAK1vC,KAAK,CACNrH,MAAO,SACPkM,WACAo5C,WACA1yE,QACAqyE,SAER,EACA,IAGZ,GAEA,CAAAtyE,IAAA,UAAAC,MAMQ,SAAQ+R,EAAcolB,GAAmC,IAAAotC,EAAAjmE,KAAnByqE,EAAAxlE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IACtDjF,KAAKkzE,OAAOz/D,KACZtP,aAAanE,KAAKkzE,OAAOz/D,WAClBzT,KAAKkzE,OAAOz/D,IAEvBzT,KAAKkzE,OAAOz/D,GAAam3D,WAAW,WAC5B/xC,aAAc6xC,UACd7xC,WAEGotC,EAAKiN,OAAOz/D,EACvB,EAAGg3D,EACP,KAAC0C,CAAA,CAnQ8B,GAAtBA,SAAsB,mBAAAltE,iBAAtBktE,GAAsBjtE,EAAAsd,mBAAA7U,EAAA0rE,OAAA,EAAtBlH,EAAsB,WAAAjtE,EAAA,oCAAtBitE,EAAsB1vD,QAAtB0vD,EAAsBzvD,UAAAC,WAFnB,SAEHwvD,CAAsB,4JCfnC,IAAArzD,EAAAhc,EAAA,OAGA4hD,EAAA5hD,EAAA,kBAGMw2E,EAAoC,CAAC,UAAW,QAAS,MAAO,OAAQ,MAKjE10E,iBAAc,eAAdytE,EAAc,WAcvB,SAAAA,IAAA,IAAA/rE,EAAAtB,KAAAD,EAAAC,KAAAqtE,GAZQrtE,KAAAu0E,eAAmD,GAEnDv0E,KAAAw0E,kBAAiD,GAEjDx0E,KAAAy0E,UAAsB,GAEtBz0E,KAAA00E,kBAAgC,GAEhC10E,KAAA20E,QAAkB,EAKtBhyE,OAAO+tD,iBAAiB,UAAW,SAAC5hC,GAChC,IAAM2qC,EAAOn4D,EAAKszE,QAAQ9lD,EAAM2qC,MAAQ,IAAIvmC,eACxC5xB,EAAKuzE,YAAcpb,IACdn4D,EAAKizE,eAAe9a,KACrBn4D,EAAKizE,eAAe9a,GAAQ,IAAI3/C,EAAAqB,gBAAgB,MAChD7Z,EAAKkzE,kBAAkB/a,GAAQn4D,EAAKizE,eAAe9a,GAAMn+C,gBAE7Dha,EAAKizE,eAAe9a,GAAMj3D,OAAOlB,EAAKqzE,SAClCrzE,EAAKmzE,UAAUnhB,QAAQmG,IAAS,GAChC3qC,EAAMgmD,iBAEVxzE,EAAKuzE,UAAYpb,EAEzB,GAEA92D,OAAO+tD,iBAAiB,QAAS,SAAC5hC,GAC9B,IAAM2qC,EAAOn4D,EAAKszE,QAAQ9lD,EAAM2qC,MAAQ,IAAIvmC,eAC5C5xB,EAAKizE,eAAe9a,GAAMj3D,KAAK,MAC3BlB,EAAKuzE,YAAcpb,IACnBn4D,EAAKuzE,UAAY,KAEzB,EACJ,CAEA/0E,SAAAutE,EAAA,EAAA5rE,IAAA,SAAAC,MAKO,SAAOqzE,EAA0BvyE,GAAgB,IAAA2C,EAAAnF,KAE9Cg1E,GADND,EAASA,aAAiBvrC,MAAQurC,EAAQA,EAAM9tE,MAAM,MAClB6U,IAAI,SAAAwW,GAAC,OAAIntB,EAAKyvE,OAAOtiD,EAAEY,cAAc,GACzE,GAAI8hD,EAAY3vE,OAAS,GAAKrF,KAAKi1E,iBAAiBD,GAAc,CAC9Dh1E,KAAK00E,kBAAkBv+C,KAAK6+C,GAC5B,IAAME,EAAWF,EAAYA,EAAY3vE,OAAS,GAClD,OAAKrF,KAAKu0E,eAAeW,KACrBl1E,KAAKu0E,eAAeW,GAAY,IAAIp7D,EAAAqB,gBAAgB,MACpDnb,KAAKw0E,kBAAkBU,GAAYl1E,KAAKu0E,eAAeW,GAAU55D,gBAErEtb,KAAKm1E,2BACEn1E,KAAKw0E,kBAAkBU,GAAUjiE,UAAU,SAACypB,GAC/C,GAAIA,EAAO,CACP,IAAM04C,EAAoB,GAC1B,GAAIJ,EAAY3vE,OAAS,EAAG,CACxB,IAC6ByxB,EAD7BC,EAAAC,EACkBg+C,GAAW,IAA7B,IAAAj+C,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAA+B,KACrBiF,EAAQl3B,EAAKovE,eADTz9C,EAAAp1B,OAEV0zE,EAAQj/C,KAAKkG,GAAQA,EAAMtjB,aAAc,EAAO,CAEpD,OAAA4R,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACA,QAAS/E,EAAI,EAAGA,EAAI0iD,EAAY3vE,OAAS,EAAGitB,IACxC,GAAI8iD,EAAQ9iD,GAAK8iD,EAAQ9iD,EAAI,GAAM,OAG7B8iD,EAAQj5C,OAAO,SAAChJ,EAAG1P,GAAC,OAAK0P,GAAK1P,EAAI,EAAI,GAAI,EAAG,EAAE,IAChDuxD,EAAY3vE,QACrB7C,GAAI,CAGhB,EAAC,CAEL,OAAO,IACX,GAEA,CAAAf,IAAA,SAAAC,MAIQ,SAAO+3D,GACX,OAAIA,EAAKnG,QAAQ,QAAU,GAAKmG,EAAKnG,QAAQ,UAAY,GAAKmG,EAAKnG,QAAQ,YAAc,EAC9EmG,EAAKv8B,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAE9Cu8B,CACX,GAEA,CAAAh4D,IAAA,2BAAAC,MAGQ,WACJ,IAC0Ci6B,EADtBC,EAAA5E,EACAh3B,KAAK00E,mBAAiB,IAA1C,IAAA94C,EAAAjS,MAAAgS,EAAAC,EAAAzE,KAAAC,MAA4C,KAAjC29C,EAAKp5C,EAAAj6B,MACZ1B,KAAKy0E,UAAUt+C,KAAK4+C,EAAMA,EAAM1vE,OAAS,GAAE,CAC9C,OAAAslB,GAAAiR,EAAA1W,EAAAyF,EAAA,SAAAiR,EAAAvE,GAAA,CACDr3B,KAAKy0E,aAAY/0B,EAAAjW,QAJA,GAKrB,GAEA,CAAAhoC,IAAA,mBAAAC,MAIQ,SAAiBqzE,GACrB,IACuBpX,EADnB0X,EAAW,EAAEzX,EAAA5mC,EACC+9C,GAAK,IAAvB,IAAAnX,EAAAj0C,MAAAg0C,EAAAC,EAAAzmC,KAAAC,MACQk9C,EAAwBhhB,QADlBqK,EAAAj8D,OACiC,GACvC2zE,GAEP,OAAA1qD,GAAAizC,EAAA14C,EAAAyF,EAAA,SAAAizC,EAAAvmC,GAAA,CACD,OAAOg+C,EAAW,CACtB,KAAChI,CAAA,CAjHsB,GAAdA,SAAc,mBAAAptE,iBAAdotE,EAAc,EAAdA,EAAc,WAAAntE,EAAA,oCAAdmtE,EAAc5vD,QAAd4vD,EAAc3vD,UAAAC,WAFX,SAEH0vD,CAAc,wLCV3B,IAAI98D,EACA+kE,GAAmB,EAoBvB,SAAgBC,EACZziE,EACA0iE,GAGuC,IAFvCruD,EAAAliB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KACjBwwE,EAAsBxwE,UAAAI,OAAA,EAAAJ,UAAA,QAAAK,EACtBoqD,EAAAzqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,GAErC,IAAKsL,EACD,OACK+kE,GACD7yE,QAAQizE,KAAK,4CAGrB,IAAMC,EAAeplE,EAASwE,KAAKygE,EAASruD,EAAMoL,EAAA,CAC9CnK,WAAY,CAACtV,GACbwB,SAAU,KACPo7C,IAEHvoC,IACAsuD,EAAYA,GAAc,kBAAME,EAAa52D,SAAS,EACtD42D,EAAaC,WAAW3iE,UAAU,kBAAMwiE,GAAW,GAE3D,CAtCA71E,kBAAA,SAAgBqD,EACZ4yE,GAGAtlE,EAAWslE,EACXP,EAHerwE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,EAInB,EAUArF,SAAA21E,EA+BA31E,gBAAA,SAAgBqoC,EACZ8mC,EACA5nD,EACAsuD,GACuC,IAAvC/lB,EAAAzqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCqwE,GAAoB7yE,QAAQ2sE,MAAML,GAChB,iBAARA,IAAkBA,EAAM,WACnCwG,EAAO,UAAWxG,EAAK5nD,EAAQsuD,EAAW/lB,EAC9C,EASA9vD,cAAA,SAAgB+U,EACZo6D,EACA5nD,EACAsuD,GACuC,IAAAK,EAAAC,EAAvCrmB,EAAAzqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCqwE,GAAoB7yE,QAAQ0D,MAAM4oE,GAChB,iBAARA,IACPA,GACgB,QAAX+G,EAAA/G,SAAW,IAAA+G,OAAA,EAAXA,EAAa3vE,SAAqB,QAAhB4vE,EAAKhH,SAAW,IAAAgH,OAAA,EAAXA,EAAaP,UAAW,qBACxDD,EAAO,QAASxG,EAAK5nD,EAAQsuD,EAAW/lB,EAC5C,EASA9vD,aAAA,SAAgBo2E,EACZjH,EACA5nD,EACAsuD,GACuC,IAAvC/lB,EAAAzqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCqwE,GAAoB7yE,QAAQizE,KAAK3G,GAClCwG,EAAO,OAAQxG,EAAK5nD,EAAQsuD,EAAW/lB,EAC3C,EASA9vD,aAAA,SAAgBoqE,EACZ+E,EACA5nD,EACAsuD,GACuC,IAAvC/lB,EAAAzqD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCqwE,GAAoB7yE,QAAQC,KAAKqsE,GAClCwG,EAAO,OAAQxG,EAAK5nD,EAAQsuD,EAAW/lB,EAC3C,mICrHA,IAAAnvD,EAAAzC,EAAA,MACA2hD,EAAA3hD,EAAA,OAwBgC,SAAAm4E,aAAAt0E,EAAAC,IAAAC,KAAzB,SAAAC,EAA0B0D,GAAuB,IAAA0wE,EAAAzhE,EAAA0hE,EAAAvoE,EAAAsmE,EAAApuE,EAAA4pD,EAAA,OAAA9tD,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9C0zE,SAAW1wE,EAAS0wE,UAAYnwE,SAASmwE,SACzCzhE,EAAOjP,EAAS4wE,QAAUrwE,SAASswE,SACnCF,EAAO3wE,EAAS2wE,MAAQpwE,SAASowE,KACjCvoE,EAAMpI,EAAS8wE,WAAU,GAAAlyE,OACtB8xE,EAAQ,MAAA9xE,OAAKqQ,EAAI,KAAArQ,OAAI+xE,GACxBpwE,SAASC,OACTkuE,GAASnuE,SAASuB,SAAW,KAAK41B,QAAQ,KAAM,KAChDp3B,EACFN,EAASM,MACTC,SAASkC,KAAKhC,SAAS,cACU,SAAjCswE,aAAaruE,QAAQ,QAEnBwnD,EAA2B,CAC7B8mB,UAAW,YACXC,MAAO,SACPhiE,KAAI,GAAArQ,OAAKqQ,GAAIrQ,OAAG+xE,EAAO,IAAMA,EAAO,IACpCO,SAAQ,GAAAtyE,OAAKwJ,EAAG,yBAChB+oE,UAAS,GAAAvyE,OAAKwJ,EAAG,qBACjBgpE,aAAY,GAAAxyE,OAAK2B,SAASC,QAAM5B,OAAG8vE,EAAK,mBACxC2C,cAAerxE,EAASI,YACxBkxE,YAAY,EACZhxE,QAEAywE,cACAA,aAAajyE,QACT,OAAM,GAAAF,SACD0B,IAASC,SAASkC,KAAKhC,SAAS,gBAGzCH,MACA25C,EAAAuqB,YAAW,6BACd1nE,EAAAqB,OAAA,YACMpD,EAAAw2E,OAAMrnB,IAAO,yBAAAptD,EAAAwC,OAAA,EAAAhD,EAAA,KACvBkD,MAAAhF,KAAAiF,UAAA,CAlCDrF,aAHA,SAGsBsG,EAAUiX,GAAA,OAAA84D,EAAAjxE,MAAAhF,KAAAiF,UAAA,6FCzBhC,IAAA+xE,EAAAl5E,EAAA,OAGA8B,iBAAA,SAAgBq3E,EAAexd,GAAsD,IAAAyd,EAC3EC,EAAK,IAAIH,EAAAI,UAAU,CACrBxpE,IAAK6rD,GAAQ,QACbhW,KAAM,IACN4zB,WAJ+CpyE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,QAKlDqyE,UALoEryE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,OAMvEsyE,SAAS,EACTC,SAAU,EACVC,UAAU,EACVC,WAAY,IAEhB,OAAS,MAAFP,GAAsB,QAApBD,EAAFC,EAAIQ,QAAQ,kBAAU,IAAAT,OAApB,EAAFA,EAAwBxD,GACnC,sMCdA,IAAAnzE,EAAAzC,EAAA,MACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAEAimC,EAAAjmC,EAAA,OACA4hD,EAAA5hD,EAAA,kBA0Ba8B,uBAAqB,eAArBg4E,EAAqB,SAAA/yC,GAAA/jC,EAAA82E,EAAA/yC,GAAA,IAAA7jC,EAAAC,EAAA22E,GAsB9B,SAAAA,IAAA,IAAAt2E,EAAAvB,SAAAC,KAAA43E,IACIt2E,EAAAN,EAAAO,KAAAvB,OAtBI63E,WAAa,IAAI/9D,EAAAqB,gBAAwB,IACzC7Z,EAAAw2E,QAAU,IAAIh+D,EAAAi+D,QAEdz2E,EAAA02E,eAAiB12E,EAAKw2E,QAAQ30E,QAAK7C,EAAAuyB,aAAY,MAE/CvxB,EAAA22E,kBAAoB32E,EAAKu2E,WAAW10E,QACxC7C,EAAA0b,QAAO,SAAC3Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAwxB,WAAU,SAACve,GAAE,SAAKuG,EAAAgJ,eAAc,IAAChJ,EAAAO,IAAG9G,GAAKjS,EAAK42E,QAAQ3kE,EAAI,YAAY,MACtEjT,EAAA0b,QAAO,SAAA1V,GAAY,QAAZ0c,EAAA1c,EAAA,GAAY,EAAe,MAClChG,EAAAwb,KAAI,SAAAmH,GAAA,IAAE1P,EAAFyP,EAAAC,EAAA,GAAI,UACJ3hB,EAAKyR,aACD,cACAzR,EAAK02E,eAAe/kE,UAAU,SAAC4F,GAAC,SAC5BtY,EAAA2xB,WAAU3e,EAAI,UAAUqhB,QAAQ,aAAc,CAAC/b,GAAG,GAEzD,IAIOvX,EAAAsB,QAAUtB,EAAK02E,eAI3B12E,EAAK62E,uBACL72E,EAAK22E,kBAAkBhlE,YAAY3R,CACvC,CAACxB,SAAA83E,EAAA,EAAAn2E,IAAA,YAAAC,MAEM,SAAU6R,GACbvT,KAAK63E,WAAWr1E,KAAK+Q,EACzB,GAAC,CAAA9R,IAAA,uBAAAC,MAEO,WAQJ,QARwByD,EAAAnF,KAOtBi3B,EAAA,WACG,IAAMx1B,EAAG22E,EAAAr4C,IAxDtB,SAASs4C,EACLC,EACAC,EACAC,GAEA,IAAIC,EAAmBH,EAAWC,GACjCD,EAAmBC,GAAkB,WAAmB,QAAAG,EAAAzzE,UAAAI,OAAf2pE,EAAW,IAAAxlC,MAAAkvC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAX3J,EAAW2J,GAAA1zE,UAAA0zE,GACjDH,EAAgBxJ,GACfyJ,EAAyBl3E,KAAIyD,MAA7ByzE,EAAwB,CAAMH,GAAUl0E,OAAK4qE,GAClD,CAEJ,CA8CYqJ,CAAW51E,QAAShB,EAAK,mBAAAm3E,EAAA3zE,UAAAI,OAAI2pE,EAAI,IAAAxlC,MAAAovC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7J,EAAI6J,GAAA5zE,UAAA4zE,GAAA,OAAK1zE,EAAK2zE,aAAar3E,EAAKutE,EAAK,IADtEjvC,EAAA,EAAAq4C,EAPiC,CAC7B,MACA,QACA,OACA,OACA,SAEmBr4C,EAAAq4C,EAAA/yE,OAAA06B,IAAA9I,GAG3B,GAAC,CAAAx1B,IAAA,eAAAC,MAEO,SAAaoR,EAAchQ,GAAsC,IAA3Bi2E,EAAA9zE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkB,UAC5DnC,EAAK,GACkB,iBAAZA,EAAK,GAAkBA,EAAK,GAAGo6B,QAAQ,MAAO,IAAMp6B,EAAK,GACpE9C,KAAK83E,QAAQt1E,KAAK,CACd+Q,GAAE,GAAAnP,OAAK20E,EAAU,KAAA30E,UAAIs7C,EAAA6T,WAAU,aAC/BzgD,KAAMimE,EACNC,QAASlmE,EACTmmE,UAAW1+D,KAAKgX,MAChBzuB,KAAMA,EAAKkZ,OACP,SAAC3Y,GAAC,MAAkB,iBAANA,IAAmBA,EAAE61E,WAAW,SAAS,IAGnE,GAEA,CAAAz3E,IAAA,UAAAC,MACQ,SAAQ6R,EAAYE,GAAoC,IACtD0lE,KAAS54E,EAAA2xB,WAAU3e,EADatO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,UAClBgtB,QAAQxe,GAC1C,OAAAzT,KAAK+S,aAAY,QAAA3O,OAASqP,GAAQ0lE,EAAOxmD,QAClCwmD,EAAO/mD,QAClB,KAACwlD,CAAA,CAhE6B,CAAQ7zC,EAAAt7B,cAA7BmvE,SAAqB,mBAAA33E,iBAArB23E,EAAoB,EAApBA,EAAqB,WAAA13E,EAAA,oCAArB03E,EAAoBn6D,QAApBm6D,EAAoBl6D,UAAAC,WAFjB,SAEHi6D,CAAqB,2ICzBrBh4E,kBAAkB,SAACuzB,EAAsBrU,GAElD,OADOyT,IAAA,GAA2BY,GAAMrU,EAE5C,EAEalf,oBAAoB,WAGR,IADrBw5E,EAAAn0E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmC,GAE7B6W,EAAM,IAHZ7W,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuC,IAIvBykB,QAAQ,SAAC2N,GAAC,OAAMvb,EAAIub,EAAE9jB,IAAM8jB,CAAC,GAC7C,IAAMgiD,EAA8B,GACpCD,SAAY1vD,QAAQ,SAAC4vD,GACXx9D,EAAIw9D,EAAE/lE,KACR8lE,EAAOljD,QAAKv2B,EAAA25E,iBAAgBz9D,EAAIw9D,EAAE/lE,IAAK+lE,GAE/C,GACOD,CACX,6QCxBAv7E,EAAA,WACAgc,EAAAhc,EAAA,OACAyC,EAAAzC,EAAA,MACAizB,EAAAjzB,EAAA,OACAwC,EAAAxC,EAAA,OAEA4hD,EAAA5hD,EAAA,OACA07E,EAAA17E,EAAA,OAEAimC,EAAAjmC,EAAA,OAEA2vE,EAAA3vE,EAAA,OACA27E,EAAA37E,EAAA,UACAA,EAAA,uCAYa8B,kBAAgB,eAAhBgJ,EAAgB,SAAAi8B,GAAA/jC,EAAA8H,EAAAi8B,GAAA,IAyDxB60C,EAzDwB14E,EAAAC,EAAA2H,GA2DzB,SAAAA,EACY+wE,EACYC,GAAkC,IAAAt4E,EAAAvB,EAAAC,KAAA4I,IAEtDtH,EAAAN,EAAAO,KAAAvB,OAHQ25E,SACYr4E,EAAAs4E,aA3DhBt4E,EAAAitE,UAAY,UAEZjtE,EAAAu4E,WAAa,IAAI//D,EAAAqB,gBAA2B,IAE5C7Z,EAAAw4E,eAAiB,IAAIhgE,EAAAqB,gBAAyB,IAE9C7Z,EAAAy4E,UAA2C,GAE3Cz4E,EAAA04E,aAAyC,GAEzC14E,EAAA24E,kBAA6B,GAoDjC,IAAM1oD,EAAM,IAAIhX,KACV2/D,EAAO,IAAI3/D,KAAKkzD,EAAAC,QAAQwM,MACxBC,KAAQppD,EAAAkC,WAAU1B,EAAK2oD,GAAK,YAAA91E,UAChB2sB,EAAA2U,QAAOw0C,EAAM,WAAQ,EACjCnpD,EAAA2U,QAAOw0C,EAAM,sBACnB,SAAAx6B,EAAA18C,KAAI,OAAM,GAAAoB,OAAKqpE,EAAAC,QAAQ0M,QAAU,KAAM,SAAS,IAAI,EACpD16B,EAAA18C,KAAI,MAAK,GAAAoB,OAAKqpE,EAAAC,QAAQ2M,KAAI,cAAAj2E,OAAa+1E,GAAS,KAAM,SAAS,GAC/D74E,EAAKg5E,OAAOh5E,CAChB,CAEAxB,SAAA8I,EAAA,EAAAnH,IAAA,YAAAia,aAzDqBha,GACjB1B,KAAK65E,WAAWr3E,KAAKd,GACrB1B,KAAKu6E,oBACT,GAEA,CAAA94E,IAAA,SAAAC,MACO,SAAgB+R,GACnB,OAAKzT,KAAKg6E,aAAavmE,KACnBzT,KAAK+5E,UAAUtmE,GAAQ,IAAIqG,EAAAqB,gBAAmB,MAC9Cnb,KAAKg6E,aAAavmE,GAAQzT,KAAK+5E,UAAUtmE,GAAM6H,gBAE5Ctb,KAAKg6E,aAAavmE,EAC7B,GAEA,CAAAhS,IAAA,OAAAC,MACO,SAAQ+R,EAAc/R,GACpB1B,KAAKg6E,aAAavmE,KACnBzT,KAAK+5E,UAAUtmE,GAAQ,IAAIqG,EAAAqB,gBAAmB,MAC9Cnb,KAAKg6E,aAAavmE,GAAQzT,KAAK+5E,UAAUtmE,GAAM6H,gBAEnDtb,KAAK+5E,UAAUtmE,GAAMjR,KAAKd,EAC9B,GAAC,CAAAD,IAAA,QAAAC,MAEM,SAAe+R,GAClB,OAAQzT,KAAKg6E,aAAavmE,GAEpBzT,KAAK+5E,UAAUtmE,GAAMsF,WADrB,IAEV,GAEA,CAAAtX,IAAA,QAAAkE,IACA,WACI,OAAO3F,KAAK25E,OAAOa,UACvB,EAAC9+D,IACD,SAAiBha,GAAa,IAAA+4E,EAC1Bz6E,KAAK25E,OAAOe,SAAQ,GAAAt2E,OACb1C,EAAK,OAAA0C,OAAMpE,KAAK2F,IAAI,aAAe3F,KAAKuuE,YAE3BvuE,KAAK2F,IAAI,+BAEd,QAAf80E,EAAAz6E,KAAK45E,kBAAU,IAAAa,GAAfA,EAAiBE,KAAK,WAAY,CAAEn5E,MAAOE,IAC/C,GAAC,CAAAD,IAAA,OAAAC,OAAAg4E,EAAA/3E,EAAAC,IAAAC,KAoBM,SAAAC,IAAA,IAAA84E,EAAAntD,EAAAtoB,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAxC,KAAK66E,eACD76E,KAAK2F,IAAI,WAAUhD,OAAOysE,OAAQ,GACnB,QAAnBwL,EAAI56E,KAAK2F,IAAI,cAAM,IAAAi1E,GAAfA,EAAiBnnE,OACjBzT,KAAKuuE,UAAYvuE,KAAK2F,IAAI,OAAO8N,MAErCzT,KAAKuuE,UACDxoE,SAASuB,SAAS41B,QAAQ,UAAW,IAAI2U,QAAU7xC,KAAKuuE,aAC5D7uB,EAAAh6C,YAAW1F,KAAKuuE,UAAUtnE,MAAM,KAAK4N,KAAK,KAAKw5D,gBAAa,EAC5D3uB,EAAA18C,KAAI,WAAY,gCAChBhD,KAAKsqE,aAAa9nE,MAAK,GACnBG,OAAOysE,QACFzsE,OAAOm4E,cAAan4E,OAAOm4E,YAAc,IAC9Cn4E,OAAOm4E,YAAYt1E,SAAWxF,MAElCA,KAAK+S,aACD,gBACA/S,KAAK85E,eAAe7mE,UAAU,SAAC5P,GAAC,OAAK8B,EAAK41E,mBAAmB13E,EAAE,IACjEf,EAAAE,KAAA,GACiBi3E,EAAA7yE,aAAazD,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,QAA7DmqB,SAAInrB,EAAA4B,KAAA5B,EAAAE,KAAA,MACSjC,EAAAopC,cAAalc,EAAKla,GAAI,YAAYjQ,YAAW,QAChEtD,KAAK85E,eAAet3E,KADVF,EAAA4B,KACoBkT,SAAW,IACzCpX,KAAK66E,eACL76E,KAAKg7E,eAAe,yBAAA14E,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACvB,SAAAs6E,IAAA,OAAAZ,EAAA10E,MAAAhF,KAAAiF,UAAA,IAED,CAAAxD,IAAA,WAAAkE,IACA,WACI,OAAO3F,KAAKuuE,SAChB,GAEA,CAAA9sE,IAAA,MAAAC,MAIO,SAAaD,GAChB,IACuB6E,EAAA8B,EADjBiiB,EAAO5oB,EAAIwF,MAAM,KACvB,GAAgB,QAAZojB,EAAK,GACL,OAEyD,QAFzD/jB,EACiD,QADjD8B,KACIs3C,EAAA8vB,iBAAgBnlD,EAAMrqB,KAAKi6E,0BAAkB,IAAA7xE,OAC7Cs3C,EAAA8vB,iBAAgBnlD,EAAMrqB,KAAK85E,eAAe/gE,mBAAW,IAAAzS,OACrDo5C,EAAA8vB,iBAAgBnlD,EAAMmvD,EAAAyB,kBAG9B,IACwCnkD,EADlCokD,EAAiB/3D,EAAOnjB,KAAK65E,WAAW9gE,YAAYge,EAAAC,EACnCkkD,GAAiB,IAAxC,IAAAnkD,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MAA0C,KAA/B+jD,EAAQrkD,EAAAp1B,MACTA,KAAQg+C,EAAA8vB,iBAAgBnlD,EAAKkP,MAAM,GAAI4hD,GAC7C,GAAa,MAATz5E,EACA,OAAOA,EAEd,OAAAipB,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,SAAOqoB,EAAA8vB,iBAAgBnlD,EAAMmvD,EAAAyB,iBACjC,GAAC,CAAAx5E,IAAA,kBAAAC,MAEM,SAAmB+R,EAAc/R,GAAQ,IAAA8E,EAAAxG,KAC5CA,KAAKi6E,kBAAkBxmE,GAAQ/R,EAClB,cAAT+R,GAAsBzT,KAAK66E,eAClB,cAATpnE,GAAsBzT,KAAKg7E,eAC/Bh7E,KAAK6D,QAAQ,gBAAiB,kBAAM2C,EAAK40E,qBAAqB,EAAE,IACpE,GAAC,CAAA35E,IAAA,sBAAAC,MAEM,SACHD,EACAC,GAC0B,IAA1B25E,EAAAp2E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAEImuC,EAAUtd,SAASwlD,eAAc,qBAAAl3E,OAAsB3C,IACtD2xC,KACDA,EAAUtd,SAAS6d,cAAc,UACzBpgC,GAAE,qBAAAnP,OAAwB3C,GAClCq0B,SAASylD,KAAKxnC,YAAYX,IAE9BA,EAAQooC,UAAS,kBAAAp3E,OAAqB3C,EAAG,MAAA2C,OAAK1C,EAAK,KAAA0C,OAC/Ci3E,EAAY,aAAe,GAC/B,IACJ,GAAC,CAAA55E,IAAA,qBAAAC,MAEO,WACJ,IAAM+5E,EAAez7E,KAAK2F,IAAI,sBAAwB,GAClD+1E,EAAa,UACjB,QAAWj6E,KAAOg6E,EACdC,GAAU,KAAAt3E,OAAS3C,EAAG,MAAA2C,OAAKq3E,EAAah6E,GAAI,MAEhDi6E,GAAc,IACd,IAAItoC,EAAUtd,SAASwlD,eAAe,qBACjCloC,KACDA,EAAUtd,SAAS6d,cAAc,UACzBpgC,GAAK,oBACbuiB,SAASylD,KAAKxnC,YAAYX,IAE9BA,EAAQooC,UAAYE,CACxB,GAAC,CAAAj6E,IAAA,sBAAAC,MAAA,eAAAi6E,EAAAh6E,EAAAC,IAAAC,KAEO,SAAA0D,IAAA,IAAAkoB,EAAA,OAAA7rB,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACsB,GACjB,OADHirB,KAAOgsD,EAAA3yE,iBACR2mB,EAAMla,IAAO6W,OAAOC,KAAKrqB,KAAKi6E,mBAAmB50E,OAAM,CAAAI,EAAAjD,KAAA,eAAAiD,EAAA9B,OAAA,iBAAA8B,SAAAjD,KAAA,KACtDjC,EAAAgoD,gBAAe96B,EAAKla,GAAI,CAC1BE,KAAM,WACNE,YAAa,GACbyD,QAAOmb,IAAA,GACAvyB,KAAK85E,eAAe/gE,YACpB/Y,KAAKi6E,qBAEb32E,YAAW,OACdtD,KAAK85E,eAAet3E,KAAI+vB,IAAA,GACjBvyB,KAAK85E,eAAe/gE,YACpB/Y,KAAKi6E,oBAEZj6E,KAAKi6E,kBAAoB,GAAG,wBAAAx0E,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC/B,gBAAAo7E,IAAA,OAAAO,EAAA32E,MAAAhF,KAAAiF,UAAA,EAlBA,IAkBA,CAAAxD,IAAA,qBAAAC,MAAA,eAAAk6E,EAAAj6E,EAAAC,IAAAC,KAEO,SAAAwE,EAAyBb,GAAiB,OAAA5D,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAE7C,wBAAAiE,EAAA3B,OAAA,EAAAuB,EAAA,IACJ,gBAAA00E,EAAA59D,GAAA,OAAAy+D,EAAA52E,MAAAhF,KAAAiF,UAAA,EALA,IAKA,CAAAxD,IAAA,eAAAC,MAEO,WACC1B,KAAK2F,IAAI,cACd3F,KAAK67E,oBAAoB,YAAW,GAAAz3E,OAAKpE,KAAK2F,IAAI,aAAY,MAClE,GAAC,CAAAlE,IAAA,eAAAC,MAEO,WAMJ,KACHkH,CAAA,CA7MwB,CAAQm7B,EAAAt7B,cAAxBG,SAAgB,mBAAA3I,iBAAhB2I,GAAe1I,EAAAsd,mBAAA7U,EAAA0rE,OAAAn0E,EAAAsd,mBAAA3U,EAAAskE,uBAAA,KAAfvkE,EAAgB,WAAA1I,EAAA,oCAAhB0I,EAAe6U,QAAf7U,EAAe8U,UAAAC,WAFZ,SAEH/U,CAAgB,+FCmJhBhJ,mBAAwB,CACjCwvE,OAAO,EACP0M,SAAU,CACN1F,OAAQ,GACRlC,MAAO,SACPgC,SAAU,GACVC,KAAM,GACNG,YAAY,EACZ1wE,aAAa,GAEjBm2E,IAlDa,CACbtoE,KAAM,YACNjS,MAAO,wBACPmS,YAAa,sDACbqoE,WAAY,QACZC,WAAY,CACRnpE,KAAM,MACN4gE,IAAK,yBAETwI,UAAW,CACPppE,KAAM,MACN4gE,IAAK,wBAETtqE,SAAU,CAAC,SAAU,QAAS,UAAW,UAAW,OAAQ,YAC5D+yE,aAAa,EACbC,QAjJiB,CACjBC,OAAQ,CACJ9oE,GAAI,IACJT,KAAM,OACN+U,QAAO,IAEXy0D,UAAW,UACXzoC,SAAU,SA2IV0oC,KAtIc,CACdC,MAAO,CACH,CACI/oE,KAAM,gBACNgpE,KAAM,qCACNptD,KAAM,CACFvc,KAAM,OACNgzD,MAAO,iBACPj+C,QAAS,OAEb60D,WACI,qKAER,CACIjpE,KAAM,oBACNgpE,KAAM,8DACNptD,KAAM,CACFvc,KAAM,OACNgzD,MAAO,iBACPj+C,QAAS,QAEb60D,WAAY,4BAEhB,CACIjpE,KAAM,kBACNgpE,KAAM,qCACNptD,KAAM,CACFvc,KAAM,OACNgzD,MAAO,iBACPj+C,QAAS,QAEb60D,WACI,kWAER,CACIjpE,KAAM,WACNgpE,KAAM,4BACNptD,KAAM,CACFvc,KAAM,OACNgzD,MAAO,iBACPj+C,QAAS,YAEb60D,WACI,mWAGZ74B,QAAS,GAyFT9vB,OApFgB,CAChB4oD,iBAAiB,EACjBC,WAAY,EACZC,UAAW,GACX7kE,qBAAqB,EACrBf,cAAc,GAgFd6lE,cA3EuB,CACvBC,aAAa,GA2EbC,UAtEmB,CACnBC,cAAc,EACdC,kBAAmB,GAqEnBC,QAtDiB,CACjB5N,OAAQ,CACJ,aAAc,UACd,gBAAiB,UACjB,aAAc,UACd,qBAAsB,OACtB,gBAAiB,OASjB,WAAY,UACZ,cAAe,UACf,YAAa,WAEjB6N,qBAAqB,EACrBC,yBAAyB,EACzBC,OAAQ,CACJC,OAAQ,CACJ,CAAE97E,IAAK,aAAcgS,KAAM,mBAC3B,CAAEhS,IAAK,gBAAiBgS,KAAM,iBAC9B,CAAEhS,IAAK,aAAcgS,KAAM,gBAC3B,CAAEhS,IAAK,qBAAsBgS,KAAM,sBACnC,CAAEhS,IAAK,gBAAiBgS,KAAM,cA4BtC0gB,MAAO,CACHnc,qBAAqB,EACrBwlE,cAAc,EACdC,iBAAiB,GAErBC,UAAW,CACPzwE,SAAS,EACTkmE,YAAa,IAEjBwK,eAAe,EACfC,SA3Ea,CACbN,OAAQ,CACJ,CAAE7pE,KAAM,WAAYoqE,MAAO,WAC3B,CAAEpqE,KAAM,UAAWoqE,MAAO,WAC1B,CAAEpqE,KAAM,WAAYoqE,MAAO,aAwE/BC,YAAa,CACTrwD,KAAM,CAAEzW,MAAO,gBAAiBk8B,YAAa,8ECnKd,SAAA6qC,aAAAp8E,EAAAC,IAAAC,KAAhC,SAAAC,EAAgDk8E,GAAuB,OAAAp8E,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1Ew7E,SAAUC,gBAAgB37E,EAAAE,KAAA,EACpBw7E,EAAUE,QAAQC,aAAY,OACpCH,EAAUC,gBAAgB,wBAAA37E,EAAAwC,OAAA,EAAAhD,EAAA,KAC7BkD,MAAAhF,KAAAiF,UAAA,6EAJDrF,6BAAsBw+E,EAAiBjhE,GAAA,OAAA4gE,EAAA/4E,MAAAhF,KAAAiF,UAAA,2ICHvC,IAAA8rB,EAAAjzB,EAAA,OACAugF,EAAAvgF,EAAA,OAGa8B,kBAAqB,QAAJ0+E,EAAA9sC,YAAI,IAAA8sC,GAAkB,QAAlBC,EAAJD,EAAM7sC,wBAAgB,IAAA8sC,GAAmB,QAAnBC,EAAtBD,EAAwB7sC,yBAAiB,IAAA8sC,OAArC,EAAJA,EAA2C7sC,WAAY,mBAErF/xC,kBAAA,SAAgB2rE,EAAgBv5D,GAAgD,IACtEysE,KAAcJ,EAAAK,mBAD6Bz5E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAarF,EAAA++E,iBACtB,EAAIN,EAAAK,mBAAkB9+E,EAAA++E,gBAC9D,SAAO5tD,EAAA6tD,iBAAgB5sE,EAAMysE,GAAa3pD,SAC9C,EAEAl1B,kBAAA,SAAgBi/E,EAAgB7sE,GAAgD,IAA3B8sE,EAAA75E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAarF,EAAA++E,eACxDF,KAAcJ,EAAAK,mBAAkB9+E,EAAA++E,iBAAc,EAAIN,EAAAK,mBAAkBI,GAC1E,SAAO/tD,EAAA6tD,iBAAgB5sE,EAAMysE,GAAa3pD,SAC9C,yGCdA,IAAA4qB,EAAA5hD,EAAA,OAEa8B,YAAY,CACrB,CACE8B,MAAS,yBACTq9E,KAAQ,MACRC,QAAU,GACVC,OAAS,EACT7S,KAAQ,2CACR8S,IAAO,CACL,eAGJ,CACEx9E,MAAS,SACTq9E,KAAQ,IACRC,QAAU,GACVC,OAAS,EACT7S,KAAQ,4CACR8S,IAAO,CACL,aACA,iBACA,eACA,sBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,QAAU,GACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,aACA,mBACA,mBACA,oBACA,mBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,oBACA,iBACA,eACA,gBACA,oBAGJ,CACEx9E,MAAS,iCACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,8BACR8S,IAAO,CACL,yBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,uBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,qBACA,YAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,kBACA,uBACA,qBACA,kBACA,cAGJ,CACEx9E,MAAS,kCACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,oBACA,qBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,YAGJ,CACEx9E,MAAS,gCACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,8BACR8S,IAAO,CACL,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,sBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,YAGJ,CACEx9E,MAAS,iCACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACEx9E,MAAS,+BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,iBACA,0BAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,0BACA,wBACA,yBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,MACRC,QAAU,IACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,oBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,qBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qCACR8S,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACEx9E,MAAS,kCACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,uBACA,mBAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,mDACR8S,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,mBACA,sBAGJ,CACEx9E,MAAS,6BACTq9E,KAAQ,MACRC,QAAU,IACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,qBAGJ,CACEx9E,MAAS,iCACTq9E,KAAQ,QACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,sBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,wBACR8S,IAAO,CACL,oBAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yBACR8S,IAAO,CACL,uBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBAGJ,CACEx9E,MAAS,SACTq9E,KAAQ,IACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,4CACR8S,IAAO,CACL,kBACA,yBACA,cAGJ,CACEx9E,MAAS,6BACTq9E,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,IAET,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,uBACA,oBAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,sBACA,cAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mBACR8S,IAAO,CACL,oBACA,oBAGJ,CACEx9E,MAAS,MACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mCACR8S,IAAO,CACL,uBACA,YAGJ,CACEx9E,MAAS,oBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACEx9E,MAAS,oBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,4BACR8S,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+DACR8S,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACEx9E,MAAS,+BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gEACR8S,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACEx9E,MAAS,iCACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+CACR8S,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACEx9E,MAAS,kCACTq9E,KAAQ,QACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,oBAGJ,CACEx9E,MAAS,oBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,gBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,wBACR8S,IAAO,CACL,eACA,gBACA,mBACA,kBACA,kBACA,cACA,mBACA,iBACA,cACA,eACA,iBACA,kBACA,iBACA,sBAIJ,CACEx9E,MAAS,6BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+BACR8S,IAAO,CACL,kBACA,mBACA,kBACA,gBACA,sBACA,gBACA,oBACA,gBACA,gBACA,gBACA,iBACA,cAGJ,CACEx9E,MAAS,oBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,4DACR8S,IAAO,CACL,kBACA,cACA,mBACA,cACA,eACA,iBACA,kBACA,iBACA,sBAGJ,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,oBAGJ,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,wBACR8S,IAAO,CACL,mBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,mBAGJ,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,eAGJ,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,uBAGJ,CACEx9E,MAAS,qBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,YACA,eACA,cACA,aACA,gBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,qBACA,gBACA,uBACA,kBACA,cACA,iBACA,kBACA,mBACA,iBACA,mBACA,YACA,sBACA,gBACA,mBAGJ,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uDACR8S,IAAO,CACH,eACF,gBACA,oBACA,mBACA,iBAGJ,CACEx9E,MAAS,cACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACH,mBACF,gBACE,qBAGN,CACEx9E,MAAS,qBACTq9E,KAAQ,MACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,gBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,aACA,cACA,cAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mBACR8S,IAAO,CACL,cAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,yBACR8S,IAAO,CACL,cACA,mBACA,mBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,MACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,eAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,CACL,oBACA,aACA,cACA,gBACA,gBACA,YACA,iBACA,gBACA,YACA,mBACA,oBAGJ,CACEx9E,MAAS,qBACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,4BACR8S,IAAO,CACL,uBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,OACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,KACVC,OAAS,EACT7S,KAAQ,wBACR8S,IAAO,CACL,mBAGJ,CACEx9E,MAAS,6BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,oBACA,cACA,eACA,iBACA,cACA,YACA,kBAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,aACA,iBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,+BACR8S,IAAO,CACL,eACA,iBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sCACR8S,IAAO,CACL,mBACA,eACA,YACA,eACA,kBACA,iBACA,cACA,iBACA,YACA,qBAGJ,CACEx9E,MAAS,gCACTq9E,KAAQ,QACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,oBACA,mBACA,cAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oDACR8S,IAAO,CACL,iBACA,aACA,kBAGJ,CACEx9E,MAAS,2BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,qBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sCACR8S,IAAO,CACL,cACA,oBACA,eACA,gBACA,cACA,iBACA,cAGJ,CACEx9E,MAAS,6BACTq9E,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,mBACA,oBAGJ,CACEx9E,MAAS,uBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,gBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,kBACA,qBAGJ,CACEx9E,MAAS,gCACTq9E,KAAQ,QACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oCACR8S,IAAO,CACL,YACA,gBACA,aACA,YACA,kBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,iBACA,eAGJ,CACEx9E,MAAS,+BACTq9E,KAAQ,OACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,qBACA,0BAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,OACRC,OAAU,IACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,qBAGJ,CACEx9E,MAAS,6BACTq9E,KAAQ,OACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,qBACA,uBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,OACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,sBACA,qBAGJ,CACEx9E,MAAS,6BACTq9E,KAAQ,OACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,CACL,4BACA,aACA,eACA,uBACA,iBACA,iBAGJ,CACEx9E,MAAS,yBACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,mBACA,qBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,aACA,gBACA,iBAGJ,CACEx9E,MAAS,gCACTq9E,KAAQ,OACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,uBACA,aACA,gBACA,sBACA,iBACA,iBACA,mBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,gBACA,gBACA,qBAGJ,CACEx9E,MAAS,4BACTq9E,KAAQ,OACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,mCACR8S,IAAO,CACL,qBACA,qBAGJ,CACEx9E,MAAS,SACTq9E,KAAQ,IACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,4CACR8S,IAAO,CACL,aACA,mBACA,oBACA,iBACA,gBACA,iBACA,eACA,mBAGJ,CACEx9E,MAAS,qBACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,mBACR8S,IAAO,CACL,iBAGJ,CACEx9E,MAAS,wBACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,cACA,iBACA,eACA,uBAGJ,CACEx9E,MAAS,0BACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,6CACR8S,IAAO,CACL,mBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,yBACR8S,IAAO,CACL,aACA,oBACA,kBACA,sBAGJ,CACEx9E,MAAS,sBACTq9E,KAAQ,MACRC,OAAU,GACVC,OAAS,EACT7S,KAAQ,oBACR8S,IAAO,CACL,kBAKKt/E,oBAAiB8/C,EAAAjW,WAAOiW,EAAA9sB,SAAQhzB,EAAAu/E,UAAUrjE,IAAI,SAAAzY,GAAC,OAAIA,EAAE67E,GAAG,KAAIliE,8RCt4CzE,IAAAlD,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,kBAEMshF,EAAe,CAAC,WAAY,YAAa,YAAa,SAAU,SAKzDx/E,sBAAmB,eAAnBy/E,EAAmB,WAHhC,SAAAA,IAAA,IAAA/9E,EAAAtB,KAAAD,EAAAC,KAAAq/E,GAIYr/E,KAAAs/E,aAAe,IAAIxlE,EAAAqB,gBAAgBZ,KAAKgX,OACxCvxB,KAAAwxB,QAAU,SAACtM,GAAE,OAAK5jB,EAAKi+E,oBAAoB,EAC3Cv/E,KAAAw/E,aAAeJ,EAEPp/E,KAAAy/E,eAAc3lE,EAAAgJ,eAAc,CACxC9iB,KAAKs/E,gBACLxlE,EAAA+b,UAAS,OACV1yB,QACC7C,EAAAo/E,cAAa,MAAG,EAChBp/E,EAAAwb,KAAI,SAAAxV,GAAa,OAAb0c,EAAA1c,EAAA,GAAa,EAAiB,IAGtBtG,KAAA2/E,UAAY3/E,KAAKy/E,YAAYt8E,QACzC7C,EAAAwb,KAAI,SAACo+D,GAAI,OAAK3/D,KAAKgX,MAAQ2oD,CAAI,IA0BtCp6E,SAAAu/E,EAAA,EAAA59E,IAAA,qBAAAC,MAvBW,WACJ1B,KAAKs/E,aAAa98E,KAAK+X,KAAKgX,MAChC,GAAC,CAAA9vB,IAAA,UAAAC,OAAAk+E,EAAAj+E,EAAAC,IAAAC,KAEM,SAAAC,EAAc+9E,GAAe,IAAA/6E,EAAA,OAAAlD,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1BsC,SAAO9E,KAAK8/E,iBAAgBx9E,EAAAE,KAAA,EAC5BxC,KAAK2/E,UAAUx8E,QAAK7C,EAAA8C,OAAM,SAACnD,GAAC,OAAKA,GAAK4/E,CAAO,IAAGv8E,YAAW,OACjEwB,IAAO,wBAAAxC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACV,SAAA+/E,EAAA5iE,GAAA,OAAAyiE,EAAA56E,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,iBAAAC,MAEM,WAAc,IAAAyD,EAAAnF,KACjBA,KAAKs/E,aAAa98E,KAAK+X,KAAKgX,OAAO,IACCuF,EADDC,EAAAC,EAChBh3B,KAAKw/E,cAAY,IAApC,IAAAzoD,EAAApN,MAAAmN,EAAAC,EAAAI,KAAAC,MACItB,SAASmN,KAAKytB,iBADH55B,EAAAp1B,MAC0B1B,KAAKwxB,QAC7C,OAAA7G,GAAAoM,EAAA7R,EAAAyF,EAAA,SAAAoM,EAAAM,GAAA,CACD,OAAO,kBAAMlyB,EAAK66E,eAAe,CACrC,GAAC,CAAAv+E,IAAA,gBAAAC,MAEM,WAAa,IACoBi6B,EADpBC,EAAA5E,EACGh3B,KAAKw/E,cAAY,IAApC,IAAA5jD,EAAAjS,MAAAgS,EAAAC,EAAAzE,KAAAC,MACItB,SAASmN,KAAKg9C,oBADHtkD,EAAAj6B,MAC6B1B,KAAKwxB,QAChD,OAAA7G,GAAAiR,EAAA1W,EAAAyF,EAAA,SAAAiR,EAAAvE,GAAA,CACL,KAACgoD,EApBA,IAAAO,CAoBA,CAvC2B,GAAnBP,SAAmB,mBAAAp/E,iBAAnBo/E,EAAmB,EAAnBA,EAAmB,WAAAn/E,EAAA,oCAAnBm/E,EAAmB5hE,QAAnB4hE,EAAmB3hE,UAAAC,WAFhB,SAEH0hE,CAAmB,2GCThC,IAAA9+E,EAAAzC,EAAA,MACAgc,EAAAhc,EAAA,OACAwC,EAAAxC,EAAA,OAEAs3C,EAAAt3C,EAAA,OAEMoiF,EAAa,IAAI9qC,EAAA+qC,UAEjBC,EAAgB,IAAItmE,EAAAqB,gBAA2B,MAExCvb,eAAewgF,EAAc9kE,eAI1CsvD,WAAW,WACP,IACI,GAAIuE,KAAM,aACN,EACR,EAAA5uE,EAAA8/E,UAAS,WACJl9E,QACG7C,EAAAmqE,OAAM,MAAI,EACVnqE,EAAAggF,OAAM,KAAE,EACRhgF,EAAAwb,KAAI,SAACwW,GAAC,OAAK,IAAI8iB,EAAA+qC,UAAU7tD,EAAE,IAE9Brf,UAAU,SAACwa,GAAI,OAAK2yD,EAAc59E,KAAKirB,EAAK,EACrD,EAAG,KAGH7tB,cAAA,SAAgBkH,IACZ,OAAOs5E,EAAcrnE,YAAcmnE,CACvC,kBC5BA,SAAgB9I,EAAUkC,GAAG,IAAIp0D,EAAEllB,KAAKs5E,EAAE,iBAAiBA,EAAEA,EAAE,GAAGp0D,EAAEq7D,SAAS,EAAEr7D,EAAEs7D,WAAW,CAACC,IAAI,YAAYC,IAAI,YAAYC,KAAK,aAAaC,IAAI,YAAYC,IAAI,YAAY,UAAU,gBAAgBC,KAAK,aAAaC,KAAK,aAAa,SAAS,gBAAgB77D,EAAEqyD,QAAQ+B,EAAE/B,QAAQryD,EAAE87D,WAAW97D,EAAEqyD,QAAQzhD,SAAS6d,cAAc,OAAO7d,SAAS6d,cAAc,UAAUzuB,EAAEtX,IAAI0rE,EAAE1rE,KAAK,GAAGsX,EAAEu+B,KAAK61B,EAAE71B,MAAM,IAAIv+B,EAAE+7D,KAAI,EAAG/7D,EAAEmyD,WAAWiC,EAAEjC,YAAY,OAAOnyD,EAAEoyD,UAAUgC,EAAEhC,WAAW,OAAOpyD,EAAEsyD,SAAS8B,EAAE9B,UAAU,EAAEtyD,EAAEuyD,SAAS6B,EAAE7B,SAASvyD,EAAEwyD,WAAW4B,EAAE5B,YAAY,EAAE,IAAIp0D,EAAE6P,EAAElzB,EAAEqyB,EAAE6E,EAAE7B,EAAE+B,EAAE62B,EAAE,GAAGvkC,EAAE,GAAG9Q,EAAE,GAAGglD,EAAE,GAAGoU,EAAE,GAAGxuD,EAAE,GAAGy9D,EAAE,SAAS5H,EAAEp0D,GAAG,IAAI5B,EAAEg2D,EAAEp0D,IAAI5B,EAAEg2D,EAAEA,EAAEp0D,EAAEA,EAAE5B,GAAGA,EAAE4B,EAAE5B,GAAG4B,EAAE5B,GAAG4B,EAAE5B,IAAI,EAAEu6C,EAAEv6C,GAAGg2D,GAAG,CAAC,EAAE6H,EAAE,SAAS7H,EAAEp0D,GAAG,IAAI5B,EAAE,IAAIzK,EAAEygE,EAAEr5E,EAAEilB,GAAG,EAAE5B,GAAE,EAAGA,EAAE,EAAEA,IAAIzK,EAAEygE,EAAEh2D,EAAErjB,GAAGilB,EAAE,IAAI,EAAErM,EAAEygE,EAAE,EAAEr5E,GAAGilB,EAAE5B,EAAE,IAAI,EAAEzK,EAAEygE,EAAE,EAAEr5E,GAAGilB,EAAE5B,IAAI,EAAEzK,EAAEygE,EAAEh2D,EAAE,EAAErjB,GAAGilB,EAAE,IAAI,EAAE,IAAI5B,EAAE,EAAEA,EAAE,EAAEA,IAAI49D,EAAE5H,EAAE,EAAEp0D,EAAE5B,GAAG49D,EAAE5H,EAAE,EAAEp0D,EAAE5B,GAAG49D,EAAE5H,EAAEh2D,EAAE4B,EAAE,GAAGg8D,EAAE5H,EAAEh2D,EAAE4B,EAAE,EAAE,EAAEmQ,EAAE,SAASikD,GAAG,KAAKA,GAAG,KAAKA,IAAIA,GAAG,MAAM,IAAI,IAAIA,GAAG,OAAOA,CAAC,EAAEx6D,EAAE,SAASw6D,EAAEp0D,EAAE5B,EAAE6P,GAAG,IAAIlzB,EAAEqyB,EAAE6E,EAAE7B,EAAE8hD,EAAUgK,KAAK/pD,EAAE+/C,EAAUiK,KAAK,IAAIphF,EAAE,EAAEA,EAAEkzB,EAAElzB,IAAIiuD,EAAE5qC,EAAErjB,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAEilB,EAAEjlB,IAAI,CAAC,GAAG,MAAMk3B,EAAEE,EAAE62B,EAAEorB,EAAEr5E,GAAGiuD,EAAE5qC,KAAK,IAAIgP,EAAE,EAAEA,EAAEa,EAAEb,IAAI47B,EAAE5qC,EAAEgP,EAAE,GAAG47B,EAAE5qC,EAAEgP,GAAGgD,EAAED,EAAE8B,EAAE1T,EAAE0P,EAAEb,UAAU,IAAIA,EAAEhP,EAAEgP,EAAEhP,EAAE6P,EAAEb,IAAI47B,EAAE57B,GAAG47B,EAAE57B,EAAE,GAAG47B,EAAE5qC,EAAE6P,EAAE,GAAG,KAAKgE,EAAE,EAAE7B,EAAED,EAAE8B,EAAE1T,EAAE,IAAG,CAAE,EAAE69D,EAAE,SAAShI,EAAEp0D,GAAG,IAAI5B,EAAE,OAAOg2D,EAAEp0D,IAAI5B,EAAEg2D,EAAEA,EAAEp0D,EAAEA,EAAE5B,GAAGA,EAAE4B,EAAE5B,GAAG4B,EAAEA,EAAE5B,IAAI,EAAEu6C,EAAEv6C,GAAGg2D,EAAE,EAAEiI,EAAE,SAASjI,GAAG,IAAIp0D,EAAE5B,EAAE6P,EAAEb,EAAE,OAAOgnD,GAAG,KAAK,EAAE,IAAIh2D,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAI,IAAI4B,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIA,EAAE5B,EAAE,GAAGg+D,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqjB,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAI,IAAI4B,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAI,EAAE5B,GAAGg+D,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqjB,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAI,IAAI6P,EAAE,EAAEjO,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIiO,IAAI,GAAGA,IAAIA,EAAE,GAAGA,GAAGmuD,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqyB,EAAE,EAAEhP,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAIgP,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAEb,EAAEpN,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIiO,IAAI,GAAGA,IAAIA,EAAE,GAAGA,GAAGmuD,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqjB,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAI,IAAI6P,EAAE,EAAEb,EAAEhP,GAAG,EAAE,EAAE4B,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIiO,IAAI,GAAGA,IAAIA,EAAE,EAAEb,GAAGA,GAAGA,GAAGgvD,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqyB,EAAE,EAAEhP,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAIgP,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAE,EAAEjO,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIiO,IAAI,GAAGA,IAAIA,EAAE,IAAIjO,EAAE5B,EAAE,MAAM6P,GAAGb,IAAIgvD,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqyB,EAAE,EAAEhP,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAIgP,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAE,EAAEjO,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIiO,IAAI,GAAGA,IAAIA,EAAE,IAAIjO,EAAE5B,EAAE,IAAI6P,GAAGA,GAAGb,GAAG,GAAGgvD,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,MAAM,KAAK,EAAE,IAAIqyB,EAAE,EAAEhP,EAAE,EAAEA,EAAErjB,EAAEqjB,IAAIgP,IAAI,IAAI,GAAGA,IAAIA,EAAE,GAAGa,EAAE,EAAEjO,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAIiO,IAAI,GAAGA,IAAIA,EAAE,IAAIA,GAAGA,GAAGb,IAAIpN,EAAE5B,EAAE,GAAG,GAAGg+D,EAAEp8D,EAAE5B,KAAKzK,EAAEqM,EAAE5B,EAAErjB,IAAI,GAAG,EAAEuhF,EAAE,SAASlI,GAAG,IAAIp0D,EAAE5B,EAAE,EAAE,IAAI4B,EAAE,EAAEA,GAAGo0D,EAAEp0D,IAAI+sD,EAAE/sD,IAAI,IAAI5B,GAAG8zD,EAAUqK,GAAGxP,EAAE/sD,GAAG,GAAG,IAAIA,EAAE,EAAEA,EAAEo0D,EAAE,EAAEp0D,GAAG,EAAE+sD,EAAE/sD,EAAE,IAAI+sD,EAAE/sD,EAAE,IAAI+sD,EAAE/sD,EAAE,IAAI+sD,EAAE/sD,EAAE,IAAI+sD,EAAE/sD,EAAE,IAAI+sD,EAAE/sD,EAAE,IAAI,EAAE+sD,EAAE/sD,EAAE,IAAI+sD,EAAE/sD,KAAK,GAAG+sD,EAAE/sD,EAAE,IAAIA,EAAE,EAAEo0D,GAAG,EAAErH,EAAE/sD,EAAE,IAAI,EAAE+sD,EAAE/sD,IAAI,EAAE+sD,EAAE/sD,EAAE,IAAI,EAAE+sD,EAAE/sD,MAAM5B,GAAG8zD,EAAUsK,IAAI,OAAOp+D,CAAC,EAAE6nD,EAAE,WAAW,IAAImO,EAAEp0D,EAAE5B,EAAE6P,EAAEb,EAAE6E,EAAE,EAAE7B,EAAE,EAAE,IAAIpQ,EAAE,EAAEA,EAAEjlB,EAAE,EAAEilB,IAAI,IAAIo0D,EAAE,EAAEA,EAAEr5E,EAAE,EAAEq5E,KAAKzgE,EAAEygE,EAAEr5E,EAAEilB,IAAIrM,EAAEygE,EAAE,EAAEr5E,EAAEilB,IAAIrM,EAAEygE,EAAEr5E,GAAGilB,EAAE,KAAKrM,EAAEygE,EAAE,EAAEr5E,GAAGilB,EAAE,OAAOrM,EAAEygE,EAAEr5E,EAAEilB,IAAIrM,EAAEygE,EAAE,EAAEr5E,EAAEilB,IAAIrM,EAAEygE,EAAEr5E,GAAGilB,EAAE,KAAKrM,EAAEygE,EAAE,EAAEr5E,GAAGilB,EAAE,QAAQiS,GAAGigD,EAAUuK,IAAI,IAAIz8D,EAAE,EAAEA,EAAEjlB,EAAEilB,IAAI,CAAC,IAAI+sD,EAAE,GAAG,EAAE3uD,EAAE6P,EAAEmmD,EAAE,EAAEA,EAAEr5E,EAAEq5E,KAAKhnD,EAAEzZ,EAAEygE,EAAEr5E,EAAEilB,KAAKiO,EAAE8+C,EAAE3uD,KAAK2uD,IAAI3uD,GAAG,EAAEgS,IAAInC,EAAEb,GAAG,GAAE,EAAG6E,GAAGqqD,EAAEl+D,EAAC,CAAEgS,EAAE,IAAIA,GAAGA,GAAG,IAAI+B,EAAE/B,EAAE44B,EAAE,EAAE,IAAI72B,GAAGA,GAAG,EAAEA,IAAI,EAAEA,EAAEp3B,EAAEA,GAAGo3B,GAAGp3B,EAAEA,EAAEiuD,IAAI,IAAI/2B,GAAG+2B,EAAEkpB,EAAUwK,GAAGtI,EAAE,EAAEA,EAAEr5E,EAAEq5E,IAAI,CAAC,IAAIrH,EAAE,GAAG,EAAE3uD,EAAE6P,EAAEjO,EAAE,EAAEA,EAAEjlB,EAAEilB,KAAKoN,EAAEzZ,EAAEygE,EAAEr5E,EAAEilB,KAAKiO,EAAE8+C,EAAE3uD,KAAK2uD,IAAI3uD,GAAG,EAAE6P,EAAEb,EAAE6E,GAAGqqD,EAAEl+D,EAAC,CAAE,OAAO6T,CAAC,EAAEjS,EAAE28D,SAAS,SAASvI,GAAG,IAAIp0D,EAAE+sD,EAAEuP,EAAE/tC,EAAEquC,EAAExO,EAAEyO,EAAEC,EAAEC,EAAE7K,EAAU8K,UAAUxuC,EAAE0jC,EAAUgK,KAAKe,EAAE/K,EAAUiK,KAAK5tC,EAAE6lC,EAAEj0E,OAAO8tB,EAAE,EAAE,MAAMA,IAAIquD,EAAE,GAAGl+D,EAAE,GAAG,IAAI6P,EAAE,GAAGb,EAAE2vD,EAAET,KAAKrqD,EAAE8qD,EAAET,KAAKlsD,EAAE2sD,EAAET,KAAKnqD,EAAE4qD,EAAET,GAAG/tC,IAAI+tC,EAAElsD,GAAGhD,EAAE6E,GAAGA,EAAE,GAAGhE,GAAG,IAAI,YAAYA,EAAE,IAAI,IAAIlzB,EAAE,GAAG,EAAEkzB,EAAE2uD,EAAExsD,GAAGA,EAAE+B,IAAI/E,EAAE6E,GAAGA,EAAEsc,EAAE,EAAEA,EAAEquC,EAAEruC,IAAI9pB,EAAE8pB,GAAG,EAAE,IAAIya,EAAEorB,EAAE//C,MAAM,GAAGka,EAAE,EAAEA,EAAExzC,EAAEA,EAAEwzC,IAAI56B,EAAE46B,GAAG,EAAE,IAAIA,EAAE,EAAEA,GAAGxzC,GAAGA,EAAE,GAAG,GAAG,EAAEwzC,IAAIoqB,EAAEpqB,GAAG,EAAE,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAAC,IAAI+tC,EAAE,EAAEvP,EAAE,EAAE,GAAGx+B,IAAI+tC,EAAEvhF,EAAE,GAAG,GAAGwzC,IAAIw+B,EAAEhyE,EAAE,GAAG4Y,EAAEo5D,EAAE,EAAEhyE,GAAGuhF,EAAE,IAAI,EAAEt8D,EAAE,EAAEA,EAAE,EAAEA,IAAIrM,EAAEo5D,EAAE/sD,EAAEjlB,EAAEuhF,GAAG,EAAE3oE,EAAEo5D,EAAEhyE,GAAGuhF,EAAEt8D,EAAE,IAAI,EAAErM,EAAEo5D,EAAE,EAAEhyE,GAAGuhF,EAAEt8D,IAAI,EAAErM,EAAEo5D,EAAE/sD,EAAE,EAAEjlB,GAAGuhF,EAAE,IAAI,EAAE,IAAIt8D,EAAE,EAAEA,EAAE,EAAEA,IAAIg8D,EAAEjP,EAAE/sD,EAAEs8D,EAAE,GAAGN,EAAEjP,EAAE,EAAEuP,EAAEt8D,EAAE,GAAGg8D,EAAEjP,EAAE,EAAEuP,EAAEt8D,GAAGg8D,EAAEjP,EAAE/sD,EAAE,EAAEs8D,EAAE,GAAG,IAAIt8D,EAAE,EAAEA,EAAE,EAAEA,IAAIrM,EAAEo5D,EAAE/sD,EAAEjlB,GAAGuhF,EAAE,IAAI,EAAE3oE,EAAEo5D,EAAE,EAAEhyE,GAAGuhF,EAAEt8D,EAAE,IAAI,EAAErM,EAAEo5D,EAAE,EAAEhyE,GAAGuhF,EAAEt8D,IAAI,EAAErM,EAAEo5D,EAAE/sD,EAAE,EAAEjlB,GAAGuhF,EAAE,IAAI,EAAE,GAAGruD,EAAE,EAAE,IAAIsgB,EAAE2jC,EAAUgL,OAAOjvD,GAAG8+C,EAAEhyE,EAAE,IAAI,CAAC,IAAIilB,EAAEjlB,EAAE,EAAEilB,EAAEuuB,EAAE,IAAI0tC,EAAEj8D,EAAE+sD,KAAK/sD,EAAEuuB,KAAKvuB,GAAGuuB,EAAE,GAAGw+B,GAAGx+B,EAAE,EAAE,MAAM0tC,EAAE,EAAElP,GAAGx+B,GAAG0tC,EAAElP,EAAE,EAAC,CAAE,IAAIp5D,EAAE,EAAE5Y,GAAGA,EAAE,IAAI,EAAEgyE,EAAE,EAAEA,EAAE,EAAEA,IAAIiP,EAAE,EAAEjP,GAAGiP,EAAEjhF,EAAE,EAAEgyE,GAAGiP,EAAE,EAAEjP,EAAEhyE,EAAE,GAAG,IAAIilB,EAAE,EAAEA,EAAE,EAAEA,IAAIg8D,EAAEh8D,EAAE,GAAGg8D,EAAEh8D,EAAEjlB,EAAE,EAAE,GAAGihF,EAAEh8D,EAAEjlB,EAAE,GAAG,IAAIilB,EAAE,EAAEA,EAAE,EAAEA,IAAIg8D,EAAEh8D,EAAE,GAAG,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAIg8D,EAAEh8D,EAAEjlB,EAAE,EAAE,GAAGihF,EAAE,EAAEh8D,GAAG,IAAI+sD,EAAE,EAAEA,EAAE,EAAEA,IAAIiP,EAAE,EAAEjP,EAAEhyE,EAAE,GAAG,IAAIilB,EAAE,EAAEA,EAAEjlB,EAAE,GAAGilB,IAAI,EAAEA,GAAGg8D,EAAE,EAAEh8D,EAAE,GAAGg8D,EAAE,EAAE,EAAEh8D,KAAKrM,EAAE,EAAEqM,EAAE,EAAEjlB,GAAG,EAAE4Y,EAAE,EAAE5Y,GAAG,EAAEilB,IAAI,GAAG,GAAGiO,EAAE,EAAE,IAAIsgB,EAAE2jC,EAAUiL,KAAKlvD,EAAE,GAAGquD,EAAE,GAAGt8D,EAAE,EAAEA,EAAE,EAAEA,IAAI,IAAI+sD,EAAE,EAAEA,EAAE,EAAEA,IAAIuP,IAAI,GAAGA,EAAE,GAAGruD,GAAGquD,EAAE,GAAG/tC,GAAG+tC,IAAI3oE,EAAE,EAAEqM,EAAEjlB,GAAG,EAAEgyE,EAAEhyE,EAAE,KAAK,EAAE4Y,EAAE,EAAEo5D,EAAEhyE,EAAE,GAAGA,GAAG,EAAEilB,IAAI,IAAIg8D,EAAE,EAAEh8D,EAAE,EAAE+sD,EAAEhyE,EAAE,IAAIihF,EAAE,EAAEjP,EAAEhyE,EAAE,GAAG,EAAEilB,IAAI,IAAI+sD,EAAE,EAAEA,EAAEhyE,EAAEgyE,IAAI,IAAI/sD,EAAE,EAAEA,GAAG+sD,EAAE/sD,IAAIrM,EAAEqM,EAAEjlB,EAAEgyE,IAAIiP,EAAEh8D,EAAE+sD,GAAG,IAAI6P,EAAE5zB,EAAE7oD,OAAOiuE,EAAE,EAAEA,EAAEwO,EAAExO,IAAI3pD,EAAE2pD,GAAGplB,EAAEijB,WAAWmC,GAAG,GAAGplB,EAAEvkC,EAAE4P,MAAM,GAAGuoD,IAAI58D,EAAEoQ,GAAGhD,EAAE6E,GAAGA,GAAG,IAAI2qD,EAAE58D,EAAE,EAAEiO,EAAE,GAAG2uD,KAAKxO,EAAEwO,EAAE3uD,EAAE,EAAE,CAAC,IAAI+6B,EAAEolB,EAAE,GAAG,EAAEplB,EAAEolB,EAAE,GAAG,EAAEA,KAAYplB,EAAEolB,EAAE,IAAI,KAAf7/B,EAAEya,EAAEolB,KAAkB,EAAEplB,EAAEolB,EAAE,GAAG7/B,GAAG,EAAEya,EAAE,IAAI,IAAI4zB,GAAG,EAAE5zB,EAAE,GAAG4zB,GAAG,EAAE5zB,EAAE,GAAG,GAAG4zB,GAAG,OAAO,CAAC,IAAI5zB,EAAEolB,EAAE,GAAG,EAAEplB,EAAEolB,EAAE,GAAG,EAAEA,KAAYplB,EAAEolB,EAAE,IAAI,KAAf7/B,EAAEya,EAAEolB,KAAkB,EAAEplB,EAAEolB,EAAE,GAAG7/B,GAAG,EAAEya,EAAE,IAAI,IAAI4zB,GAAG,EAAE5zB,EAAE,GAAG,GAAG4zB,GAAG,EAAE,IAAIxO,EAAEwO,EAAE,GAAG3uD,EAAE,IAAImgD,EAAEpuD,GAAGgpC,EAAEolB,KAAK,IAAIplB,EAAEolB,KAAK,GAAG,IAAI7vD,EAAE,GAAG,EAAE6vD,EAAE,EAAEA,EAAEj8C,EAAEi8C,IAAI,CAAC,IAAI7vD,EAAE6vD,EAAE,GAAG,EAAEyO,EAAEzO,EAAEyO,EAAE,EAAEA,IAAIt+D,EAAEs+D,GAAGt+D,EAAEs+D,GAAGt+D,EAAEs+D,EAAE,GAAGruC,EAAEre,EAAE8sD,EAAE1+D,EAAEs+D,IAAIzO,IAAI7vD,EAAEs+D,EAAE,GAAGt+D,EAAE,GAAGiwB,EAAEre,EAAE8sD,EAAE1+D,EAAE,IAAI6vD,GAAE,CAAE,IAAIA,EAAE,EAAEA,GAAGj8C,EAAEi8C,IAAI7vD,EAAE6vD,GAAG6O,EAAE1+D,EAAE6vD,IAAI,IAAIkO,EAAEt8D,EAAE+sD,EAAE,EAAEqB,EAAE,EAAEA,EAAEhhD,EAAEghD,IAAIx0D,EAAEmzD,EAAE38C,EAAEksD,EAAEnqD,GAAG46C,GAAG38C,EAAEksD,GAAGnqD,EAAE,IAAIi8C,EAAE,EAAEA,EAAEn8C,EAAEm8C,IAAIx0D,EAAEmzD,EAAE38C,EAAE,EAAEksD,EAAEnqD,GAAG46C,GAAG38C,EAAE,EAAEksD,GAAGnqD,EAAE,IAAI46C,EAAE,EAAEqB,EAAE,EAAEA,EAAEh+C,EAAEg+C,IAAI,CAAC,IAAIyO,EAAE,EAAEA,EAAEzvD,EAAEyvD,IAAIp4D,EAAEsoD,KAAK/jB,EAAEolB,EAAEyO,EAAEzsD,GAAG,IAAIysD,EAAE,EAAEA,EAAE5qD,EAAE4qD,IAAIp4D,EAAEsoD,KAAK/jB,EAAE57B,EAAEgD,EAAEg+C,EAAEyO,GAAGzsD,EAAE,GAAE,CAAE,IAAIysD,EAAE,EAAEA,EAAE5qD,EAAE4qD,IAAIp4D,EAAEsoD,KAAK/jB,EAAE57B,EAAEgD,EAAEg+C,EAAEyO,GAAGzsD,EAAE,IAAI,IAAIg+C,EAAE,EAAEA,EAAEj8C,EAAEi8C,IAAI,IAAIyO,EAAE,EAAEA,EAAEzvD,EAAE6E,EAAE4qD,IAAIp4D,EAAEsoD,KAAK/jB,EAAEhpC,EAAEouD,EAAEyO,EAAE1qD,GAAG,IAAI62B,EAAEvkC,EAAEzE,EAAE+sD,EAAEhyE,EAAE,EAAEuhF,EAAEM,EAAE,EAAEE,GAAG1sD,EAAE+B,IAAI/E,EAAE6E,GAAGA,EAAEm8C,EAAE,EAAEA,EAAE0O,EAAE1O,IAAI,IAAI7/B,EAAEya,EAAEolB,GAAGyO,EAAE,EAAEA,EAAE,EAAEA,IAAItuC,IAAI,EAAE,CAAC,IAAIA,IAAI56B,EAAEqM,EAAEjlB,EAAEgyE,GAAG,GAAG,GAAG6P,EAAE58D,KAAKA,IAAIs8D,EAAE,GAAGvP,EAAEA,KAAKuP,GAAGA,EAAE,IAAIt8D,GAAG,KAAKA,IAAI+sD,EAAE,IAAIA,GAAGhyE,EAAE,EAAEgyE,KAAKuP,GAAGA,EAAE,IAAIt8D,GAAG,KAAKA,IAAI+sD,GAAG,KAAK6P,GAAGA,QAAQR,EAAEp8D,EAAE+sD,GAAC,CAAG,IAAI/jB,EAAEr1C,EAAE0gB,MAAM,GAAGka,EAAE,EAAEw+B,EAAE,IAAIuP,EAAE,EAAEA,EAAE,IAAID,EAAEC,IAAIt8D,EAAEimD,KAAK8G,IAAIA,EAAE/sD,EAAEuuB,EAAE+tC,GAAG,GAAG/tC,GAAG+tC,IAAI3oE,EAAEq1C,EAAE30B,MAAM,GAAG,IAAIka,GAAG+tC,GAAGD,EAAE9tC,GAAGw+B,EAAEmF,EAAUkL,QAAQ7uC,GAAGnwB,EAAE,GAAG,IAAIk+D,EAAE,EAAEA,EAAE,EAAEA,IAAIvP,IAAI,EAAE,EAAEA,IAAIp5D,EAAE5Y,EAAE,EAAEuhF,EAAE,EAAEvhF,GAAG,EAAEuhF,EAAE,EAAE3oE,EAAE,EAAE5Y,EAAEuhF,GAAG,EAAE3oE,EAAE,EAAE5Y,GAAGuhF,EAAE,IAAI,GAAG,IAAIA,EAAE,EAAEA,EAAE,EAAEA,IAAIvP,IAAI,EAAE,EAAEA,IAAIp5D,EAAE,EAAE5Y,GAAGA,EAAE,EAAEuhF,IAAI,EAAEA,EAAE3oE,EAAE,EAAE2oE,EAAE,EAAEvhF,GAAG,EAAE4Y,EAAE,EAAE,EAAE5Y,GAAG,GAAG,OAAO4Y,CAAC,EAAEqM,EAAEo1D,KAAK,WAAWh3D,EAAE4B,EAAEsyD,SAAS,IAAI8B,EAAEp0D,EAAE28D,SAAS38D,EAAEtX,KAAKsX,EAAEqyD,QAAQryD,EAAEq9D,WAAWjJ,EAAEr5E,GAAGilB,EAAEs9D,YAAYlJ,EAAEr5E,EAAE,EAAEilB,EAAEo1D,MAAM,qEAAtzK16E,YAAAw3E,EAAuzKA,EAAUqL,UAAU,CAACD,YAAY,SAASlJ,EAAEp0D,GAAG,IAAIllB,KAAKihF,MAAMjhF,KAAKihF,IAAIjhF,KAAK0iF,WAAW1iF,KAAKghF,aAAahhF,KAAKihF,KAAK,OAAOjhF,KAAKu3E,SAAQ,EAAGv3E,KAAKghF,WAAWlrD,SAAS6d,cAAc,YAAY3zC,KAAKuiF,WAAWjJ,EAAEp0D,GAAG,IAAI5B,EAAEtjB,KAAKyjD,KAAKtwB,EAAEnzB,KAAKihF,IAAI9tD,EAAEwvD,UAAU,EAAE,IAAI1iF,EAAEqjB,EAAErjB,GAAGilB,EAAE,GAAGjlB,EAAEmmC,KAAKw8C,MAAM3iF,EAAE,IAAI,IAAIqyB,EAAE,EAAEtyB,KAAKy3E,UAAUtkD,EAAE0vD,OAAOp7E,MAAM0rB,EAAE0vD,OAAOr7E,OAAOvH,EAAEilB,EAAEoN,EAAE,GAAGa,EAAE0vD,OAAOp7E,MAAM0rB,EAAE0vD,OAAOr7E,OAAO8b,EAAE6P,EAAE2vD,UAAU,EAAE,EAAEx/D,EAAEA,GAAG6P,EAAE4vD,UAAU/iF,KAAKq3E,WAAWlkD,EAAE6vD,SAAS,EAAE,EAAE/iF,GAAGilB,EAAE,GAAGjlB,GAAGilB,EAAE,IAAIiO,EAAE4vD,UAAU/iF,KAAKs3E,UAAU,QAAQngD,EAAE,EAAEA,EAAEjS,EAAEiS,IAAI,QAAQ7B,EAAE,EAAEA,EAAEpQ,EAAEoQ,IAAIgkD,EAAEhkD,EAAEpQ,EAAEiS,IAAIhE,EAAE6vD,SAAS/iF,GAAGqyB,EAAE6E,GAAGl3B,GAAGqyB,EAAEgD,GAAGr1B,EAAEA,EAAE,EAAEsiF,WAAW,SAASjJ,EAAEp0D,GAAG,IAAI5B,EAAEtjB,KAAKmzB,EAAEiT,KAAKw8C,MAAM5iF,KAAKyjD,KAAKv+B,EAAE,KAAK,KAAKjlB,EAAEilB,GAAG5B,EAAEm0D,SAAS,EAAE,EAAEn0D,EAAEo0D,YAAYplD,EAAEhP,EAAEo0D,WAAWvgD,EAAE,SAAShE,EAAE,WAAWA,EAAE,IAAImC,EAAEhS,EAAE+zD,WAAWhgD,EAAE/T,EAAEg0D,UAAUppB,EAAEp4B,SAAS6d,cAAc,SAASua,EAAEta,MAAMqvC,QAAQ,qCAAqC,QAAQt5D,EAAE9Q,EAAEid,SAAS6d,cAAc,MAAMkqB,EAAE/nC,SAAS6d,cAAc,MAAMs+B,EAAE,WAAW,OAAOpU,EAAEqlB,WAAW,EAAEz/D,EAAE,WAAW,IAAI61D,EAAErH,IAAI,OAAOqH,EAAE1lC,MAAMqvC,QAAQ9rD,EAAE,cAAc7B,EAAEgkD,CAAC,EAAE4H,EAAE,SAAS5H,GAAG,QAAQp0D,EAAEo0D,EAAE6J,WAAW7/D,EAAE,EAAEA,EAAEgP,EAAEhP,IAAIg2D,EAAE1F,aAAanwD,IAAIyB,GAAGo0D,EAAEvlC,YAAYtwB,IAAI,EAAE09D,EAAE,EAAEA,EAAEj8D,EAAEi8D,IAAI,CAAC,IAAI9rD,EAAExc,EAAEqqE,YAAYh1B,EAAEna,YAAY1e,GAAG,QAAQvW,EAAE,EAAEA,EAAEoG,EAAEpG,IAAI,GAAG,IAAIw6D,EAAE6H,EAAEj8D,EAAEpG,GAAG,CAAC,IAAIwiE,GAAG33D,OAAE,GAAQA,EAAEsoD,KAAKr+B,MAAMqvC,QAAQ9rD,EAAE,cAAcE,EAAE1N,GAAG0L,EAAE0e,YAAYutC,EAAC,KAAM,CAAC,IAAIC,EAAE99D,IAAI4R,EAAE0e,YAAYwtC,EAAC,CAAEj+D,EAAEm0D,UAAUyJ,EAAE7rD,EAAC,CAAE/R,EAAEm0D,UAAU,SAAS6B,GAAG,QAAQp0D,EAAEo0D,EAAE6J,WAAWhwD,EAAE,EAAEA,EAAE7P,EAAEo0D,WAAWvkD,IAAI,CAAC,QAAQb,EAAEzZ,EAAEqqE,YAAY/rD,EAAE,EAAEA,EAAEl3B,EAAEk3B,IAAI,CAAC,IAAI7B,EAAE7R,IAAI6O,EAAEyhB,YAAYze,EAAC,CAAEgkD,EAAEvlC,YAAYzhB,GAAGgnD,EAAE1F,aAAathD,EAAE4wD,WAAU,GAAIh+D,EAAC,CAAE,CAA9K,CAAgLgpC,GAAG5qC,EAAE09D,WAAWoC,UAAU,GAAG9/D,EAAE09D,WAAWjtC,YAAYma,EAAE,EAAEw0B,WAAW,SAASpJ,GAAG,OAAOA,EAAEoJ,YAAYpJ,EAAEoJ,WAAW,MAAMpJ,EAAEoJ,WAAW,OAAOjgF,QAAQO,IAAI,4CAA2C,EAAG,EAAE20E,QAAQ,SAAS2B,GAAG,GAAGt5E,KAAKihF,IAAI,CAAC,IAAI/7D,EAAEllB,KAAKwgF,WAAWlH,GAAG,IAAIp0D,EAAE,MAAM,IAAIylD,MAAM2O,EAAE,+BAA+B,IAAIh2D,EAAE,IAAI+/D,MAAM,OAAO//D,EAAEowD,IAAI1zE,KAAKghF,WAAWsC,UAAUp+D,GAAG5B,EAAE,GAAG8zD,EAAUgL,OAAO,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIhL,EAAUiL,KAAK,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMjL,EAAUkL,QAAQ,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,MAAMliK,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKjK,EAAUgK,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","_r7","ctx_r6","date","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","duration","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","ctx_r3","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","ɵɵsanitizeUrl","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","_r6","user_r9","ɵɵi18n","MeetingFlowConfirmComponent_section_25_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r11","MeetingFlowConfirmComponent_section_26_ng_container_6_Template","_event_form","_sheet_ref","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_section_25_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_button_28_Template","all_day","spaces_1","date_fns_1","_toggleType","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","_objectSpread","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","_ref18","system_id","mod","execute","Booking","valueOf","locker_id","locker_name","extension_data","bookings","_ref20","_ref21","p","l","_ref22","_ref23","filters","_filters$shown_types","_filters$shown_types2","parse","interval","document","visibilityState","stopPolling","clearInterval","setAsDeleted","push","clear","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","AssetListFieldComponent_div_1_Template","toggleFav","active","activeChange","fav","AssetDetailsComponent","changes","ɵɵNgOnChangesFeature","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetStateService","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","MAT_DIALOG_DATA","setSelected","AssetSelectModalComponent_button_14_Template","isSelected","count","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","localeCompare","_ref5","_$assets","AssetCategory","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","identifier","other_data","purchase_order_id","purchase_price","end_of_life_date","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","addYears","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","filtered","event_id","removeBooking","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","products","showGroupFull","purchase_orders","_loop2","updateAssetRequestsForResource","_x2","_x3","_x4","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","start","addMinutes","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c2","_r14","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_47_Template","BookingDetailsModalComponent_button_48_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_URLS","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","zone_id","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$user","_value$user2","_value$user2$id","_value","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","group_name","_asset$zone4","_asset$zone5","t1","_getNearbyResources","t2","t3","idx","organisation","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_ref11","_this5","_callee5","_this5$_settings$get","allowed_bookings","_ref13","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","booker","emitEvent","disable","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","tmp_8_0","tmp_15_0","tmp_17_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r29","ctx_r28","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r35","ctx_r34","onDone","ctx_r36","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","locker","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","available","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","_lockers","lockers_banks$","locker_bank_id","locker_bank","LockersService","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_14_0","tmp_16_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","lockers$","bank_list","level_id","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","zone_ids","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","level_list","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","tags","unit_price","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","_r37","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","_this$item","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","setHours","stringToMinutes","trigger","transition","opacity","animate","str","_timer","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","formatRecurrence","pattern","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","notifyWarn","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","breakdown","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","_idleFor","time_ms","startListening","idleFor","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","nativeElement","authority","ElementRef","Renderer2","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","core_3","icon_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","debug_console_component_1","scrolling_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","useValue","NgIf","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","DebugConsoleComponent","NgForOf","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r19","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","CustomTooltipData","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r18","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","item_r16","EventDetailsModalComponent_ng_container_69_div_5_Template","_c22","EventDetailsModalComponent_div_72_div_3_Template","item_r21","EventDetailsModalComponent_ng_container_73_div_5_Template","linked_bookings","_r23","show_attendees","_this$event$system","_this$event2$ext","_this$event3$linked_b","has_assets","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","event_link_modal_component_1","helpers_2","asset_utilities_1","_newForm","_assets","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","availability_method","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","_event$extension_data2","resetForm","_event$extension_data3","_event$extension_data4","_event$extension_data5","catering_charge_code","form_data","EventLinkModalComponent","_this4$event","_form$get","_form$get2","_ref19","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data6","_form$getRawValue","recurrence","is_owner","_spaces$2","_spaces$3","_this4$_org$building","_this4$_org$building2","_pattern","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","_makeBooking2","toJSON","_checkSelectedSpacesAreAvailable","exclude","space_ids","exclude_range","has_actioned","_default_user","_data$from_bookings","event_start","event_end","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","recurring_master_id","from_bookings","master","mailbox","range_start","range_end","days_of_week","attachments","eventStatus","is_external","_this$recurrence","_this$system","EVENTS_ENDPOINT","createEvent","updateEvent","method","showEvent","removeEvent","approveEvent","rejectEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","_b$resources","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","blocks","blk","getNextFreeTimeSlot","addSeconds","startOfMinute","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","conditions","_host$groups","is_before","is_after","min_length","max_length","_rulesForSpace","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","_save","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","_desk_bookings","Desk","_bind","processBindingChange","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","actives","current_state","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this5$_options$getVa","_this5$_options$getVa2","_user","_yield$_this5$_setBoo","_setBookingTime","custom","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","pair_r2","ExploreMapViewComponent_div_16_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","toggleZones","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_this$_org$levelWithI","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","priority","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_16_Template","tmp_7_0","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","limit","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","slide_toggle_1","overlay_1","bookings_module_1","MatSlideToggleModule","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","old_date","new_date","getHours","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","calendar_fn_1","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","blob","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","ImageListFieldComponent","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formattedValue","RecurrenceFieldComponent","getDay","RecurrenceModalComponent","day_of_week","setSimple","RecurrenceFieldComponent_mat_option_15_Template","openCustomRecurrenceModal","occurrences","ends_key","toggleDayOfWeek","Quill","RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","SpaceListFieldComponent","NewSpaceSelectModalComponent","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","barcode","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","request","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","query_params","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateMockDeskMetadata","generateParkingSpaces","PARKING_SPACES","assignee","assigned_name","map_regions","DESK_FEATURES","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","source","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","region_list","active_region","region","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","loadRegionData","_this2$building","_updateSettingOverrides","_this$region","loadBuildingData","regions","_this$building2","_this$building3","_this$_organisation","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","Region","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this6$building3","geolocation","getCurrentPosition","_this6$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this6$building2","tz_start","_this$building4","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","user_r4","today","current_hour","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","updateWidth","updateScroll","container_size","user_list_size","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_21_Template","FindAvailabilityModalComponent_div_23_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_2_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","wfh_settings_modal_component_1","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","WFHSettingsModalComponent","MatCheckbox","i12","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field formControlName=\"assets\"></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            [src]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    *ngIf=\"space?.images?.length > 0\"\n                    src=\" space.images \"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, openConfirmModal } from '@placeos/common';\nimport { CalendarEvent, EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return of([]);\n            const mod = getModule(system_id, 'Lockers');\n            return mod.execute('lockers_allocated_to_me').catch((_) => []);\n        }),\n        map((_) =>\n            _.map(\n                (i) =>\n                    new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        asset_id: i.locker_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    })\n            )\n        ),\n        catchError(() => of([])),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => {\n                document.visibilityState === 'visible'\n                    ? this._poll.next(Date.now())\n                    : '';\n            },\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [src]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) return;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [src]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([this._options]).pipe(\n        switchMap(([{ zone, date, ignore }]) => {\n            console.log('Ignore: ', ignore);\n            return queryGroupAvailability(\n                {\n                    zones: zone || '',\n                    period_start: getUnixTime(startOfDay(date)),\n                    period_end: getUnixTime(endOfDay(date)),\n                    type: 'asset-request',\n                },\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    purchase_price: number = 0;\n    end_of_life_date: number = 0;\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { addYears } from 'date-fns';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_id: new FormControl(category.parent_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        purchase_date: new FormControl(order.purchase_date * 1000 || 0, [\n            Validators.required,\n        ]),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                Date.now(),\n            [Validators.required]\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                addYears(Date.now(), 5),\n            [Validators.required]\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id, [\n            Validators.required,\n        ]),\n        purchase_price: new FormControl(asset.purchase_price || 0, [\n            Validators.required,\n        ]),\n        end_of_life_date: new FormControl(\n            asset.end_of_life_date || addYears(Date.now(), 5)\n        ),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    console.log('Assets:', assets, groups);\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(asset: Partial<Asset>[]) {\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        asset.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query), queryAssets(query)]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) => asset.type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport function showGroupFull(id: string) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ type_id: id }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            old_assets.find((_) => _.id === item.id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets.map((item) =>\n            createBooking(\n                new Booking({\n                    type: 'asset-request',\n                    booking_type: 'asset-request',\n                    date,\n                    duration,\n                    description: location_name,\n                    user_email: host,\n                    asset_id: item.id,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    extension_data: { parent_id: id },\n                    zones: zones || [],\n                }),\n                { ical_uid, event_id: id }\n            ).toPromise()\n        )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/new-desks',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this.form.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            );\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            await this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string, \n    resource_calendar: string, \n    event_id: string, \n    host_email: string\n};\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by;\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user.id || booker.id,\n                      user_email: user.email || booker.id,\n                      booked_by_id: booker.id,\n                      booked_by_email: booker.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>,  q?: { event_id?: string, ical_uid?: string }) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>, q?: { event_id?: string, ical_uid?: string }) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data, q);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n\n                            >Building<span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: user,\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$ = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from \"./types\";\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && map[key] !== undefined && map[key] !== null) {\n                str += `${(str ? '&' : '')}${key}=${encodeURIComponent(map[key])}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push(['DTSTART', `${new Date(event.date).toISOString()}`]);\n    chunks.push([\n        'DTEND',\n        `${addMinutes(event.date, event.duration ?? 60).toISOString()}`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'outlook'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    breakdown: 15,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public async idleFor(time_ms: number) {\n        const stop = this.startListening();\n        await this.idle_time.pipe(first((t) => t >= time_ms)).toPromise();\n        stop();\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"3b4907e\",\n    \"hash\": \"3b4907e\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"3b4907e\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1685605754400\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard  {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table [dataSource]=\"data_source\" matSort>\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column] }}</ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10 border-b border-gray-300 dark:border-neutral-400\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 border-b border-gray-200 dark:border-neutral-500\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [src]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">{{ item.name }}</h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"event.system?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div class=\"opacity-60\">{{ event.host }}</div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{ event.linked_bookings.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"let item of event.linked_bookings\"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.asset_name || item.title }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"edit.emit(space)\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit event</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center space-x-2 text-base\"\n                    (click)=\"remove.emit()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div i18n>Delete event</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        console.log('Has Assets:', this.has_assets);\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nconst BOOKING_URLS = [\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(zone_ids.map((id) => requestSpacesForZone(id)));\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, all_day } = this._form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                if (all_day) {\n                    date = startOfDay(date).valueOf();\n                    duration = 24 * 60 - 1;\n                }\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff < 14\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        console.log(\n            'Ignore:',\n            event.extension_data.assets?.map((_) => _.id)\n        );\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event,\n            ...event.extension_data,\n            date:\n                !event.id && isBefore(event.date || 0, Date.now())\n                    ? Date.now()\n                    : event.date,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form) this.newForm();\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            console.log(\n                'Payments:',\n                this._payments.payment_module,\n                spaces.length\n            );\n            if (this._payments.payment_module && spaces.length) {\n                console.log('Make Payment...');\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n                console.log('Payment success.', receipt);\n            }\n            const d = value.all_day\n                ? startOfDay(value.date).valueOf()\n                : value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            let asset_list = [];\n            if (assets?.length || event.extension_data.assets?.length) {\n                asset_list = await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name: spaces[0]?.name || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                );\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        const space_ids = (\n            await Promise.all(\n                spaces.map((_) => this._space_pipe.transform(_.id || _.email))\n            )\n        ).map((_) => _.id);\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        const availability_method = this.has_calendar\n            ? querySpaceAvailability\n            : queryResourceAvailability;\n        let availability: boolean[] = await availability_method(\n            spaces.map((_) => _.id),\n            date,\n            duration,\n            ignore\n        ).toPromise();\n        if (!availability.every((_) => _))\n            throw `${\n                availability.filter((_) => _).length\n            } space(s) are not available at the selected time`;\n        return true;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_master_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_master_id = data.recurring_master_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                days_of_week: data.recurrence.days_of_week,\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = {\n                ...this.recurrence,\n                range_start: obj.event_start,\n                range_end: getUnixTime(endOfDay(this.recurrence.end)),\n            };\n            delete obj.recurrence.days_of_week;\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (!this.all_day) {\n            obj.extension_data.breakdown = 15;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id ? updateEvent(data.id, data, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    _.filter(\n                        (b) =>\n                            b.resources?.find((s) => s.id === id) &&\n                            b.id !== ignore &&\n                            b.ical_uid !== ignore\n                    ).length === 0\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addMinutes,\n    addSeconds,\n    differenceInMinutes,\n    format,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    end,\n}: RecurrenceDetails) {\n    let details = '';\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                break;\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                break;\n        }\n        details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(booking.date);\n        const bkn_end = addMinutes(booking.date, booking.duration);\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_master_id: new FormControl(event.recurring_master_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) =>\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null)\n    );\n    form.get('date').valueChanges.subscribe(() =>\n        form.get('duration').updateValueAndValidity()\n    );\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._options,\n        this._poll,\n    ]).pipe(\n        filter(([lvl]) => !!lvl),\n        debounceTime(600),\n        switchMap(([lvl, { date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(date || Date.now())),\n                period_end: getUnixTime(addMinutes(date || Date.now(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            }).pipe(catchError(() => of([] as Booking[])))\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                this._statuses[id] = bookable\n                    ? !is_used && !has_presence && !is_checked_in\n                        ? has_signs\n                            ? 'signs-of-life'\n                            : 'free'\n                        : !has_presence && !is_checked_in\n                        ? 'pending'\n                        : 'busy'\n                    : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n        if (options.date) this._poll.next(Date.now());\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe(({ value }) =>\n                        this._status.next(\n                            value?.filter((_) => _.location === 'locker') || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    getModule,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of, timer } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) => (q?.length > 2 ? this.search_fn(q) : of([]))),\n        catchError(() => [])\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        console.log(\n            'Init Search:',\n            mod,\n            this._org.binding('location_services')\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (this._statuses[space.id] !== 'free' || !space.bookable) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable at the current time`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n            const level = this._level.getValue();\n            const level_list = this._org.levelsForBuilding(bld);\n            const has_level = level_list.find((lvl) => level?.id === lvl.id);\n            if (!has_level && level_list.length) {\n                this.setLevel(level_list[0].id);\n            }\n            if (this._settings.get('app.explore.disable_actions')) {\n                this.setOptions({\n                    disable_actions: this._settings.get(\n                        'app.explore.disable_actions'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_labels')) {\n                this.setOptions({\n                    disable_labels: this._settings.get(\n                        'app.explore.disable_labels'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_features')) {\n                this.setOptions({\n                    disable_features: this._settings.get(\n                        'app.explore.disable_features'\n                    ),\n                });\n            }\n            if (this._settings.get('app.explore.disable_styles')) {\n                this.setOptions({\n                    disable_styles: this._settings.get(\n                        'app.explore.disable_styles'\n                    ),\n                });\n            }\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        {{\n                            option.date\n                                ? (option.date\n                                      | date\n                                          : (option.id >= 24 * 60\n                                                ? 'mediumDate'\n                                                : 'h : mm a')) + ' ('\n                                : ''\n                        }}{{ option.name }}{{ option.date ? ')' : '' }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users.find((_) => _.email === email) || new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addYears } from 'date-fns';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    Last {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option>\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formattedValue() }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            this.value.start = this.date;\n            if (!this.value.pattern) {\n                this.value.days_of_week = [new Date(this.date).getDay()];\n            }\n        }\n    }\n\n    public readonly formattedValue = () => formatRecurrence(this.value);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            if (data) this.setValue({ ...data, _pattern: 'custom_display' });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 3).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"monthly\">\n                            month{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\">Repeat on</h2>\n            <div class=\"flex items-center space-x-2 mb-4\" name=\"repeat-on\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button value=\"never\">Never</mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button btn class=\"w-32\" matRipple [mat-dialog-close]=\"data\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 13,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [src]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: Space[]) => {\n            if (!spaces) spaces = ref.componentInstance.selected;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.date | date: 'h : mm a' }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        images: [],\n        purchase_order_id: `purchase-order-${i}`,\n        purchase_price: 100,\n        end_of_life_date: getUnixTime(Date.now() + 1000000000),\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport { createAreaManagementModule, MockLocationServicesModule } from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)]\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, '', []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])));\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        this.loadRegionData(item).then(() => {\n            if (\n                this.building?.parent_id !== item.id &&\n                this.buildingsForRegion(item).length\n            ) {\n                this.building = this.buildingsForRegion(item)[0];\n            } else this._updateSettingOverrides();\n        });\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld?.id);\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list\n            .filter(\n                (lvl) =>\n                    !!this.buildings.find((bld) => bld.id === lvl.parent_id)\n            )\n            .map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = localStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        } else {\n            const timezone = this.timezone;\n            for (const bld of this.buildings) {\n                if (bld.timezone === timezone) {\n                    this.building = bld;\n                    break;\n                }\n            }\n            if (this.building) return;\n            const tz_start = timezone.split('/')[0];\n            for (const bld of this.buildings) {\n                if (bld.timezone.startsWith(tz_start)) {\n                    this.building = bld;\n                    break;\n                }\n            }\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","\nexport class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh]\"\n            (window:resize)=\"updateWidth()\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                #container\n                class=\"flex flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-auto divide-x divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n                (scroll)=\"updateScroll()\"\n            >\n                <div\n                    users\n                    class=\"sticky left-0 min-h-full bg-white dark:bg-neutral-700 border-r border-gray-300 dark:border-neutral-500 z-30\"\n                >\n                    <div\n                        header\n                        class=\"h-10 w-[6rem] border-b border-gray-300 dark:border-neutral-500\"\n                    ></div>\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-[6rem] relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                        <user-availability-list\n                            class=\"absolute top-0 -bottom-px left-full pointer-events-none\"\n                            [user]=\"user\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[user.email]\n                                    : []\n                            \"\n                            [date]=\"date\"\n                            [offset]=\"offset\"\n                            [width]=\"width\"\n                        ></user-availability-list>\n                    </div>\n                </div>\n                <div\n                    [attr.hour]=\"i\"\n                    class=\"min-w-[5rem] bg-gray-50 dark:bg-neutral-600 min-h-full pointer-events-none\"\n                    [attr.disabled]=\"today && i < current_hour\"\n                    *ngFor=\"let h of hours; let i = index\"\n                >\n                    <div\n                        header\n                        class=\"h-10 border-b border-gray-300 dark:border-neutral-500 p-2\"\n                    >\n                        {{ i % 12 ? i % 12 : '12' }}{{ i >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div\n                    selection\n                    class=\"absolute top-10 bottom-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                    [style.left]=\"selection_left + 'rem'\"\n                    [style.width]=\"selection_width + 'rem'\"\n                    (mousedown)=\"startMovePeriod($event)\"\n                    (touchstart)=\"startMovePeriod($event)\"\n                >\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                    ></div>\n                    <div\n                        handle\n                        class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                        (mousedown)=\"startMoveDuration($event)\"\n                        (touchstart)=\"startMoveDuration($event)\"\n                    ></div>\n                    <div\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ duration | duration }}\n                    </div>\n                    <div\n                        *ngIf=\"move_time\"\n                        class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                    >\n                        {{ date | date: 'shortTime' }}\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [disabled='true'] {\n                background: rgba(0, 0, 0, 0.05) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset = 0;\n    public width = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    public readonly availability = this.users.pipe(\n        debounceTime(300),\n        switchMap((users) => {\n            if (!users.length) return of([]);\n            return queryUserFreeBusy({\n                calendars: [this.host.email, ...users.map((_) => _.email)].join(\n                    ','\n                ),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5 + 6;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.updateWidth();\n                this.updateScroll();\n            },\n            300\n        );\n    }\n\n    public updateWidth() {\n        const container_size =\n            this._container_el.nativeElement.getBoundingClientRect().width;\n        const user_list_size = this._container_el.nativeElement\n            .querySelector('[users]')\n            .getBoundingClientRect().width;\n        this.width = Math.floor(container_size - user_list_size);\n        this._move_size =\n            this._container_el.nativeElement\n                .querySelector('[hour]')\n                .getBoundingClientRect().width * 24;\n    }\n\n    public updateScroll() {\n        this.offset = this._container_el.nativeElement.scrollLeft;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 0;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.updateWidth();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"overflow-hidden relative border-b border-gray-300 dark:border-neutral-500 h-full pointer-events-none\"\n            [style.width]=\"width + 'px'\"\n        >\n            <div\n                class=\"absolute w-[120rem] h-full inset-y-0\"\n                [style.left]=\"-offset + 'px'\"\n            >\n                <div\n                    event\n                    *ngFor=\"let event of availability\"\n                    class=\"absolute inset-y-0 bg-primary text-white p-2 overflow-hidden border border-white rounded\"\n                    [style.left]=\"event.start + '%'\"\n                    [style.width]=\"event.size + '%'\"\n                >\n                    <div class=\"text-xs\">Unavailable</div>\n                    <div class=\"text-xs max-w-full\">\n                        {{ event.date | date: 'shortTime' }} -\n                        {{\n                            event.date.valueOf() + event.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n    @Input() public offset = 0;\n    @Input() public width = 0;\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { showGuest } from \"./guests.fn\";\nimport { showStaff } from \"./staff.fn\";\nimport { User } from \"./user.class\";\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user'\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(({ id, email }) => id === user_id || email === user_id);\n        if (user) return user;\n        user = await showStaff(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id).toPromise();\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}